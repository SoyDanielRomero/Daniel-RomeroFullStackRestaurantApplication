{
  "version": "2",
  "toolVersion": "1.50.0",
  "snippets": {
    "c53bca97797226597795242d0791034f722853432f3f3953207ba2130aecaf9c": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    user_pool_name=\"myawesomeapp-userpool\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    UserPoolName = \"myawesomeapp-userpool\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        .userPoolName(\"myawesomeapp-userpool\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  userPoolName: 'myawesomeapp-userpool',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 66
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  userPoolName: 'myawesomeapp-userpool',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "091daf4403ba2865712ebad050e62e0f2f5cba1d7c23807204701a6448ffe54e"
    },
    "734a6e10a55a113fb58d45bb6cdee5580d6b341cbd470e8b7f5a3ea75f861870": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 85
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserVerificationConfig",
        "@aws-cdk/aws-cognito.VerificationEmailStyle",
        "@aws-cdk/aws-cognito.VerificationEmailStyle#CODE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "9401413afb694e80927bfc738b015b509013938cd90b4c0faaf56a251d1c7534"
    },
    "0db21c40d7e6b5e9313b9c2af1d7258abbc2d87e41d2637d9d32b2af8fbcacb9": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    user_invitation=cognito.UserInvitationConfig(\n        email_subject=\"Invite to join our awesome app!\",\n        email_body=\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        sms_message=\"Hello {username}, your temporary password for our awesome app is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    UserInvitation = new UserInvitationConfig {\n        EmailSubject = \"Invite to join our awesome app!\",\n        EmailBody = \"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        SmsMessage = \"Hello {username}, your temporary password for our awesome app is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .userInvitation(UserInvitationConfig.builder()\n                .emailSubject(\"Invite to join our awesome app!\")\n                .emailBody(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\")\n                .smsMessage(\"Hello {username}, your temporary password for our awesome app is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}'\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 105
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserInvitationConfig",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}'\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "8a987200f284d0bb76aae1581a9c5f69afc02eec89b4513acb43abbec546a8bc"
    },
    "d425e697c61d73129ae62185616f9e45d346deff16805d53ed63ccb53b99f394": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(\n        username=True,\n        email=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases {\n        Username = true,\n        Email = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder()\n                .username(true)\n                .email(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 133
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.SignInAliases",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "5356dce90e7306045086bb5b0eb5858b9fa7305190d25e1bf821d4eefda9f632"
    },
    "9100ac62c5dd05137bc70064bc8e1b4162447ed3c6745e4c586300baf639ea7d": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(username=True, email=True),\n    auto_verify=cognito.AutoVerifiedAttrs(email=True, phone=True)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases { Username = true, Email = true },\n    AutoVerify = new AutoVerifiedAttrs { Email = true, Phone = true }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder().username(true).email(true).build())\n        .autoVerify(AutoVerifiedAttrs.builder().email(true).phone(true).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 163
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AutoVerifiedAttrs",
        "@aws-cdk/aws-cognito.SignInAliases",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 4,
        "193": 3,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "856826f1f10b4ff209c15366fd9611109172f0a478539222d691f6c8d5b4e606"
    },
    "9c3457c1bc50acc6ca2152d90e4eb5b36633fbf60a513953dbe2c50ddc13d332": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 188
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "f085656abd76db2c0f804f278b8e1282c9b69215b8e813f3c0537703dfac11c3": {
      "translations": {
        "python": {
          "source": "pool_sms_role = iam.Role(self, \"userpoolsmsrole\",\n    assumed_by=iam.ServicePrincipal(\"foo\")\n)\n\ncognito.UserPool(self, \"myuserpool\",\n    # ...\n    sms_role=pool_sms_role,\n    sms_role_external_id=\"c87467be-4f34-11ea-b77f-2e728ce88125\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "Role poolSmsRole = new Role(this, \"userpoolsmsrole\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"foo\")\n});\n\nnew UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SmsRole = poolSmsRole,\n    SmsRoleExternalId = \"c87467be-4f34-11ea-b77f-2e728ce88125\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Role poolSmsRole = Role.Builder.create(this, \"userpoolsmsrole\")\n        .assumedBy(new ServicePrincipal(\"foo\"))\n        .build();\n\nUserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .smsRole(poolSmsRole)\n        .smsRoleExternalId(\"c87467be-4f34-11ea-b77f-2e728ce88125\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const poolSmsRole = new iam.Role(this, 'userpoolsmsrole', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\n\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  smsRole: poolSmsRole,\n  smsRoleExternalId: 'c87467be-4f34-11ea-b77f-2e728ce88125'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 236
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst poolSmsRole = new iam.Role(this, 'userpoolsmsrole', {\n  assumedBy: new iam.ServicePrincipal('foo'),\n});\n\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  smsRole: poolSmsRole,\n  smsRoleExternalId: 'c87467be-4f34-11ea-b77f-2e728ce88125'\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 2,
        "193": 2,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "8c996a70cdc0112deaf022f57f9898039e859b0df22f101635f5bfeab57dfb37"
    },
    "70ebcdcfe8d2448286af2831084ee86f41560cd508aa4bf946841d6136412931": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 266
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.Mfa",
        "@aws-cdk/aws-cognito.Mfa#REQUIRED",
        "@aws-cdk/aws-cognito.MfaSecondFactor",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "99bb95d64f752a1da9200782f1406012787c8a9cfce7ffdebfea47397266e710"
    },
    "ea9d020e8ca961cc3e1bfd3bf663069589314aa017b89bc3f3a1e2dc6fe27c97": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    password_policy=cognito.PasswordPolicy(\n        min_length=12,\n        require_lowercase=True,\n        require_uppercase=True,\n        require_digits=True,\n        require_symbols=True,\n        temp_password_validity=Duration.days(3)\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    PasswordPolicy = new PasswordPolicy {\n        MinLength = 12,\n        RequireLowercase = true,\n        RequireUppercase = true,\n        RequireDigits = true,\n        RequireSymbols = true,\n        TempPasswordValidity = Duration.Days(3)\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .passwordPolicy(PasswordPolicy.builder()\n                .minLength(12)\n                .requireLowercase(true)\n                .requireUppercase(true)\n                .requireDigits(true)\n                .requireSymbols(true)\n                .tempPasswordValidity(Duration.days(3))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 286
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.PasswordPolicy",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 11,
        "104": 1,
        "106": 4,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "8b114497cf9500200a0cc84da4d3c6c3f329f632654375e4204c798e5c543925"
    },
    "dc08ba0a5dc98d6666a9480b44948ba41712f93454785fea30a1d807dcc1c0ae": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"UserPool\",\n    # ...\n    account_recovery=cognito.AccountRecovery.EMAIL_ONLY\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"UserPool\", new UserPoolProps {\n    // ...\n    AccountRecovery = AccountRecovery.EMAIL_ONLY\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"UserPool\")\n        // ...\n        .accountRecovery(AccountRecovery.EMAIL_ONLY)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 307
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AccountRecovery",
        "@aws-cdk/aws-cognito.AccountRecovery#EMAIL_ONLY",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "9597c149d2d3c3eaf5d97b9f7300b2e33bd7fb5bcd8b9d9359edddea914c8278"
    },
    "73ade43d216c2a0ab2b2691f745ec58a33f1d649ff9c9b1c158839d5c971922d": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    email=UserPoolEmail.with_cognito(\"support@myawesomeapp.com\")\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithCognito(\"support@myawesomeapp.com\")\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withCognito(\"support@myawesomeapp.com\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withCognito('support@myawesomeapp.com'),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 328
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolEmail",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withCognito('support@myawesomeapp.com'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 5,
        "104": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "7aad9532a119c16fc3e9eb5b4b64ae4dd3080aa8e515bc763382371f68e92d90"
    },
    "69d02cde7032890f40dc8a255ab129b7dbf47c41f9f61edf5b5540d62a8a777f": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    email=UserPoolEmail.with_sES(\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new Struct {\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(Map.of(\n                \"fromEmail\", \"noreply@myawesomeapp.com\",\n                \"fromName\", \"Awesome App\",\n                \"replyTo\", \"support@myawesomeapp.com\")))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 342
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolEmail",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 1,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "7aad9532a119c16fc3e9eb5b4b64ae4dd3080aa8e515bc763382371f68e92d90"
    },
    "2ee9e64c3bca4919cf5de4580d897e6b429ca21de0713e061dc1ae4243ee7926": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    email=UserPoolEmail.with_sES(\n        ses_region=\"us-east-1\",\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new Struct {\n        SesRegion = \"us-east-1\",\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(Map.of(\n                \"sesRegion\", \"us-east-1\",\n                \"fromEmail\", \"noreply@myawesomeapp.com\",\n                \"fromName\", \"Awesome App\",\n                \"replyTo\", \"support@myawesomeapp.com\")))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 355
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolEmail",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    sesRegion: 'us-east-1',\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "7aad9532a119c16fc3e9eb5b4b64ae4dd3080aa8e515bc763382371f68e92d90"
    },
    "7731a9d10f2b08db6816c2d27ab18b11ba84918e8a865ae1e3396a55a4b4a4e9": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    device_tracking=cognito.DeviceTracking(\n        challenge_required_on_new_device=True,\n        device_only_remembered_on_user_prompt=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    DeviceTracking = new DeviceTracking {\n        ChallengeRequiredOnNewDevice = true,\n        DeviceOnlyRememberedOnUserPrompt = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .deviceTracking(DeviceTracking.builder()\n                .challengeRequiredOnNewDevice(true)\n                .deviceOnlyRememberedOnUserPrompt(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 372
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.DeviceTracking",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "118f335474748bfc9f7b95e28c44695d5c821d2d8cd51c5bf54458188a647a75"
    },
    "acdedad57ed96dd50e572a71d157c04e53c4e46aa8381bcc27c09a5e884f0838": {
      "translations": {
        "python": {
          "source": "auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n))",
          "version": "1"
        },
        "csharp": {
          "source": "Function authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n});\n\nUserPool userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n}));",
          "version": "1"
        },
        "java": {
          "source": "Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 394
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#addTrigger",
        "@aws-cdk/aws-cognito.UserPoolOperation",
        "@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserPoolTriggers",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 34,
        "104": 3,
        "193": 4,
        "194": 14,
        "196": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8
      },
      "fqnsFingerprint": "9e509771e59ceab764f6cba8c20f9a0c1455c48ba99908b2c590d910f78f8459"
    },
    "841b664e475670fa65da74204b7beb333ffd35db20e10089ea2b218a82f3ceac": {
      "translations": {
        "python": {
          "source": "# provide permissions to describe the user pool scoped to the ARN the user pool\npost_auth_fn.role.attach_inline_policy(iam.Policy(self, \"userpool-policy\",\n    statements=[iam.PolicyStatement(\n        actions=[\"cognito-idp:DescribeUserPool\"],\n        resources=[userpool.user_pool_arn]\n    )]\n))",
          "version": "1"
        },
        "csharp": {
          "source": "// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.Role.AttachInlinePolicy(new Policy(this, \"userpool-policy\", new PolicyProps {\n    Statements = new [] { new PolicyStatement(new PolicyStatementProps {\n        Actions = new [] { \"cognito-idp:DescribeUserPool\" },\n        Resources = new [] { userpool.UserPoolArn }\n    }) }\n}));",
          "version": "1"
        },
        "java": {
          "source": "// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role.attachInlinePolicy(Policy.Builder.create(this, \"userpool-policy\")\n        .statements(List.of(PolicyStatement.Builder.create()\n                .actions(List.of(\"cognito-idp:DescribeUserPool\"))\n                .resources(List.of(userpool.getUserPoolArn()))\n                .build()))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 431
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool#userPoolArn",
        "@aws-cdk/aws-cognito.UserPoolTriggers",
        "@aws-cdk/aws-iam.IIdentity#attachInlinePolicy",
        "@aws-cdk/aws-iam.Policy",
        "@aws-cdk/aws-iam.PolicyProps",
        "@aws-cdk/aws-iam.PolicyStatement",
        "@aws-cdk/aws-iam.PolicyStatementProps",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Function#role",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const postAuthFn = new lambda.Function(this, 'postAuthFn', {\n      code: lambda.Code.fromInline('post authentication'),\n      runtime: lambda.Runtime.NODEJS_12_X,\n      handler: 'index.handler',\n    });\n\n    const userpool = new cognito.UserPool(this, 'myuserpool', {\n      lambdaTriggers: {\n        postAuthentication: postAuthFn,\n      },\n    });\n\n    // Code snippet begins after !show marker below\n/// !show\n// provide permissions to describe the user pool scoped to the ARN the user pool\npostAuthFn.role?.attachInlinePolicy(new iam.Policy(this, 'userpool-policy', {\n  statements: [new iam.PolicyStatement({\n    actions: ['cognito-idp:DescribeUserPool'],\n    resources: [userpool.userPoolArn],\n  })],\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "28": 1,
        "75": 12,
        "104": 1,
        "192": 3,
        "193": 2,
        "194": 5,
        "196": 1,
        "197": 2,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "7c2e1ddf4abe20daa178b74662d97c3408481b372a3e944286ffb67c3f8e12b3"
    },
    "666564a14cac34f6090c25419712bd710b27b3b67d414bfc8cd915b2dd5d73b2": {
      "translations": {
        "python": {
          "source": "awesome_pool = cognito.UserPool.from_user_pool_id(self, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\")\n\nother_awesome_pool = cognito.UserPool.from_user_pool_arn(self, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\")",
          "version": "1"
        },
        "csharp": {
          "source": "IUserPool awesomePool = UserPool.FromUserPoolId(this, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\");\n\nIUserPool otherAwesomePool = UserPool.FromUserPoolArn(this, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\");",
          "version": "1"
        },
        "java": {
          "source": "IUserPool awesomePool = UserPool.fromUserPoolId(this, \"awesome-user-pool\", \"us-east-1_oiuR12Abd\");\n\nIUserPool otherAwesomePool = UserPool.fromUserPoolArn(this, \"other-awesome-user-pool\", \"arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D\");",
          "version": "1"
        },
        "$": {
          "source": "const awesomePool = cognito.UserPool.fromUserPoolId(this, 'awesome-user-pool', 'us-east-1_oiuR12Abd');\n\nconst otherAwesomePool = cognito.UserPool.fromUserPoolArn(this, 'other-awesome-user-pool',\n  'arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 452
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#fromUserPoolArn",
        "@aws-cdk/aws-cognito.UserPool#fromUserPoolId",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst awesomePool = cognito.UserPool.fromUserPoolId(this, 'awesome-user-pool', 'us-east-1_oiuR12Abd');\n\nconst otherAwesomePool = cognito.UserPool.fromUserPoolArn(this, 'other-awesome-user-pool',\n  'arn:aws:cognito-idp:eu-west-1:123456789012:userpool/us-east-1_mtRyYQ14D');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 2,
        "194": 4,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2
      },
      "fqnsFingerprint": "92dcf091f0490663cac1802deb1c92abc038dcdeb0991a9de50dc708fe7ce2ce"
    },
    "72fde5974a8332e271e55ea76ef605d44345ea2c819972e3337b3b77cafe6fc4": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"Pool\")\n\nprovider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'Pool');\n\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 477
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "104": 2,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 3
      },
      "fqnsFingerprint": "f9e8dc9a1be9e1a88e7ef8c7871270f0737aba74b6a9f586bae439eeec0715a9"
    },
    "4ac266e761d9ab4a92df71e83f7ce76fa395862adf497a075c111607e05db45a": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 494
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID",
        "@aws-cdk/aws-cognito.ProviderAttribute#other",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 23,
        "104": 2,
        "193": 3,
        "194": 8,
        "196": 1,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e61e378c9f6da7d8d712a0629664a425e943a76cf52b012a302441c3b0b4b2fd"
    },
    "3bafaab079728958b3b426b32e7f29dab0865186fedc71285fbd2f50c523e9dc": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"pool\")\nclient = pool.add_client(\"customer-app-client\")\nclient_id = client.user_pool_client_id",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\nUserPoolClient client = pool.AddClient(\"customer-app-client\");\nstring clientId = client.UserPoolClientId;",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\nUserPoolClient client = pool.addClient(\"customer-app-client\");\nString clientId = client.getUserPoolClientId();",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'pool');\nconst client = pool.addClient('customer-app-client');\nconst clientId = client.userPoolClientId;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 521
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClient#userPoolClientId",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\nconst client = pool.addClient('customer-app-client');\nconst clientId = client.userPoolClientId;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 1,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3
      },
      "fqnsFingerprint": "46a68fb81624ce348d1a009c87aa23d1c3151249ea32ec4cd05159b67dc48652"
    },
    "64a27f7e13e29ecfa95eadf4c0362a2c334416b883b9da6987c72586f6b44b77": {
      "translations": {
        "python": {
          "source": "imported_pool = cognito.UserPool.from_user_pool_id(self, \"imported-pool\", \"us-east-1_oiuR12Abd\")\ncognito.UserPoolClient(self, \"customer-app-client\",\n    user_pool=imported_pool\n)",
          "version": "1"
        },
        "csharp": {
          "source": "IUserPool importedPool = UserPool.FromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nnew UserPoolClient(this, \"customer-app-client\", new UserPoolClientProps {\n    UserPool = importedPool\n});",
          "version": "1"
        },
        "java": {
          "source": "IUserPool importedPool = UserPool.fromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nUserPoolClient.Builder.create(this, \"customer-app-client\")\n        .userPool(importedPool)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 530
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#fromUserPoolId",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "104": 2,
        "193": 1,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "18750dbcbfe2cdfd63c371aaf7233134bbe1caa836fc98f471177dc5ebdcf6f1"
    },
    "10536d56a48ec706c335661f7584a05ec36e8db848b56ea953eab87da9066396": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"pool\")\npool.add_client(\"app-client\",\n    auth_flows=cognito.AuthFlow(\n        user_password=True,\n        user_srp=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    AuthFlows = new AuthFlow {\n        UserPassword = true,\n        UserSrp = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .userSrp(true)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 544
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AuthFlow",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "f8afdfe4d4a769cf7cfa04235ce61caea81c9e67b0cd4b87d118cd39b8b6afa7"
    },
    "ac9bf16ce90ca43b39ff3478055cb29280398c875670fd36c45bf01c554f01db": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 568
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#OPENID",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "104": 1,
        "106": 1,
        "192": 3,
        "193": 3,
        "194": 4,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6
      },
      "fqnsFingerprint": "e8d32971eddb684aa306437a9aa1ca38ec4ce8b69e2c975e2f494cb933f5e8cd"
    },
    "45e1250661485f375c213fdac7c9c48d961c5ebe50a00b4988179179de9e45c8": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    prevent_user_existence_errors=True\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    PreventUserExistenceErrors = true\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .preventUserExistenceErrors(true)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  preventUserExistenceErrors: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 589
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  preventUserExistenceErrors: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "cf299b3cecbdd6315d7de8d63ffbbe1ad5ddb26efafdf7ffc7254477acd853f2"
    },
    "823a5a0be9207f398ea28c2667665db78e641d7483e023584dcbcfa622ed49ea": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON, cognito.UserPoolClientIdentityProvider.COGNITO\n    ]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 601
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#COGNITO",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 6,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "8a363913908ffb478b4bb7ccde3598ea506309178eabc68e7d1ac183dcb19434"
    },
    "8f0de59bb7fa742d9607f5875e31d41a0a3eb49e452dbd21b82fe2fe966e7f04": {
      "translations": {
        "python": {
          "source": "provider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\")\nclient = pool.add_client(\"app-client\", {\n    # ...\n    \"supported_identity_providers\": [cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n},\nclient.node.add_dependency(provider))",
          "version": "1"
        },
        "csharp": {
          "source": "UserPoolIdentityProviderAmazon provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps { });\nvar client = pool.AddClient(\"app-client\", new Struct {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n}, client.Node.AddDependency(provider));",
          "version": "1"
        },
        "java": {
          "source": "UserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\").build();\nObject client = pool.addClient(\"app-client\", Map.of(\n        // ...\n        \"supportedIdentityProviders\", List.of(UserPoolClientIdentityProvider.AMAZON)), client.node.addDependency(provider));",
          "version": "1"
        },
        "$": {
          "source": "const provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 614
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "60b4628e5ddcce152845ee9c1e86a5ae59f78c39d4fe8350a729274e07e83e38"
    },
    "2e975cd0fee072b08851fea0d1eff0ae2a394686d06fb9dcc3d832b88812dc25": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    access_token_validity=Duration.minutes(60),\n    id_token_validity=Duration.minutes(60),\n    refresh_token_validity=Duration.days(30)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    AccessTokenValidity = Duration.Minutes(60),\n    IdTokenValidity = Duration.Minutes(60),\n    RefreshTokenValidity = Duration.Days(30)\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .accessTokenValidity(Duration.minutes(60))\n        .idTokenValidity(Duration.minutes(60))\n        .refreshTokenValidity(Duration.days(30))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  accessTokenValidity: Duration.minutes(60),\n  idTokenValidity: Duration.minutes(60),\n  refreshTokenValidity: Duration.days(30),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 631
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  accessTokenValidity: Duration.minutes(60),\n  idTokenValidity: Duration.minutes(60),\n  refreshTokenValidity: Duration.days(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 2,
        "75": 14,
        "104": 1,
        "193": 1,
        "194": 5,
        "196": 4,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "8a71f7f5eaa26daac0c48c4d099b684a1f2d1432e55f7a4bc94c04112fb235de"
    },
    "94eb03d1ec56449307eaffef4c357f91913da118b1cfcaee9d7b7f8187a27b8e": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nclient_write_attributes = (ClientAttributes()).with_standard_attributes(fullname=True, email=True).with_custom_attributes(\"favouritePizza\", \"favouriteBeverage\")\n\nclient_read_attributes = client_write_attributes.with_standard_attributes(email_verified=True).with_custom_attributes(\"pointsEarned\")\n\npool.add_client(\"app-client\",\n    # ...\n    read_attributes=client_read_attributes,\n    write_attributes=client_write_attributes\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar clientWriteAttributes = (new ClientAttributes()).WithStandardAttributes(new Struct { Fullname = true, Email = true }).WithCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nvar clientReadAttributes = clientWriteAttributes.WithStandardAttributes(new Struct { EmailVerified = true }).WithCustomAttributes(\"pointsEarned\");\n\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    ReadAttributes = clientReadAttributes,\n    WriteAttributes = clientWriteAttributes\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject clientWriteAttributes = (new ClientAttributes()).withStandardAttributes(Map.of(\"fullname\", true, \"email\", true)).withCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nObject clientReadAttributes = clientWriteAttributes.withStandardAttributes(Map.of(\"emailVerified\", true)).withCustomAttributes(\"pointsEarned\");\n\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .readAttributes(clientReadAttributes)\n        .writeAttributes(clientWriteAttributes)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 647
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.ClientAttributes",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 20,
        "104": 1,
        "106": 3,
        "193": 3,
        "194": 6,
        "196": 5,
        "197": 2,
        "200": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "ed1dffc294be1f6164ecedb54d6c27a9ce5a35c37c2cba04f75a2036c8caf2a6"
    },
    "3836d3272372fa67fb2c9e362e4c88998c61e659ea2bd3696aa1d037e264a8dd": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    enable_token_revocation=True\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    EnableTokenRevocation = true\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .enableTokenRevocation(true)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  enableTokenRevocation: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 668
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  enableTokenRevocation: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "cf299b3cecbdd6315d7de8d63ffbbe1ad5ddb26efafdf7ffc7254477acd853f2"
    },
    "e4c72e87f6033c75320e76e055c7b9b2cbb882ec4fc0f867adccbe85ff0d5d57": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new Struct { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new Struct { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nUserPoolResourceServer userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nUserPoolClient readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nUserPoolClient fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nObject fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 687
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolResourceServer",
        "@aws-cdk/aws-cognito.UserPoolResourceServerOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 36,
        "104": 1,
        "192": 3,
        "193": 7,
        "194": 6,
        "196": 5,
        "197": 3,
        "225": 6,
        "242": 6,
        "243": 6,
        "281": 10
      },
      "fqnsFingerprint": "ac9eacb517b406a7469c1b794a28d12a234c7f5f81e83789d1a71b89e72c9862"
    },
    "eb757d53e359c98677410ba1a011ff70ad944579fff705071044656dc221bae3": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nstring certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 725
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-certificatemanager.Certificate",
        "@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn",
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.CustomDomainOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 19,
        "104": 2,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 1,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "f50038c17d5e27aa3e01164b7d3d649280bf1e9883fabb60abae6e3a2c227c04"
    },
    "1b27ee6a50aef119fffd9cdd70a3b88f6ef9839c5944824084a5814663e5b13f": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nUserPoolClient client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nUserPoolDomain domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nstring signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 753
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.SignInUrlOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#signInUrl",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 18,
        "104": 1,
        "106": 1,
        "192": 1,
        "193": 6,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 5
      },
      "fqnsFingerprint": "bc007ac1484b33c61c153569b8ff4cae3b4d5579bb5b9e32454d67a22ae382cd"
    },
    "4aa99d75b8e1ed7d1c9d55426815745834a2a19faf657d7c55f274fae4507818": {
      "translations": {
        "python": {
          "source": "my_user_pool_domain = cognito.UserPoolDomain.from_domain_name(self, \"my-user-pool-domain\", \"domain-name\")",
          "version": "1"
        },
        "csharp": {
          "source": "IUserPoolDomain myUserPoolDomain = UserPoolDomain.FromDomainName(this, \"my-user-pool-domain\", \"domain-name\");",
          "version": "1"
        },
        "java": {
          "source": "IUserPoolDomain myUserPoolDomain = UserPoolDomain.fromDomainName(this, \"my-user-pool-domain\", \"domain-name\");",
          "version": "1"
        },
        "$": {
          "source": "const myUserPoolDomain = cognito.UserPoolDomain.fromDomainName(this, 'my-user-pool-domain', 'domain-name');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cognito"
        },
        "field": {
          "field": "markdown",
          "line": 779
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#fromDomainName",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myUserPoolDomain = cognito.UserPoolDomain.fromDomainName(this, 'my-user-pool-domain', 'domain-name');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "104": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "5cf46e572897d00cc78b847e2357f503de7c8f6e586b57a6a6a370cb6757b3dd"
    },
    "c0a847ecc2411ffb05b9e0040b1b86a4cc163dfe6b9720dad16b254fc59c4686": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"UserPool\",\n    # ...\n    account_recovery=cognito.AccountRecovery.EMAIL_ONLY\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"UserPool\", new UserPoolProps {\n    // ...\n    AccountRecovery = AccountRecovery.EMAIL_ONLY\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"UserPool\")\n        // ...\n        .accountRecovery(AccountRecovery.EMAIL_ONLY)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.AccountRecovery"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AccountRecovery",
        "@aws-cdk/aws-cognito.AccountRecovery#EMAIL_ONLY",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'UserPool', {\n  // ...\n  accountRecovery: cognito.AccountRecovery.EMAIL_ONLY,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "9597c149d2d3c3eaf5d97b9f7300b2e33bd7fb5bcd8b9d9359edddea914c8278"
    },
    "87dee05f5bc47a71c169a39657c0552ca21ac5d6c5d3bc4017f11a234c93f3d9": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.AttributeMapping"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID",
        "@aws-cdk/aws-cognito.ProviderAttribute#other",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 23,
        "104": 2,
        "193": 3,
        "194": 8,
        "196": 1,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e61e378c9f6da7d8d712a0629664a425e943a76cf52b012a302441c3b0b4b2fd"
    },
    "0e3fa6dfd4e1c26eacafc54123924a7f342394284d4574086f501aa84e64735b": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"pool\")\npool.add_client(\"app-client\",\n    auth_flows=cognito.AuthFlow(\n        user_password=True,\n        user_srp=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    AuthFlows = new AuthFlow {\n        UserPassword = true,\n        UserSrp = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .userSrp(true)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.AuthFlow"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AuthFlow",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'pool');\npool.addClient('app-client', {\n  authFlows: {\n    userPassword: true,\n    userSrp: true,\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "f8afdfe4d4a769cf7cfa04235ce61caea81c9e67b0cd4b87d118cd39b8b6afa7"
    },
    "a3730c24b48d0450a7c7993b07307780f97f7ddcaa16c139049f051210768570": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(username=True, email=True),\n    auto_verify=cognito.AutoVerifiedAttrs(email=True, phone=True)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases { Username = true, Email = true },\n    AutoVerify = new AutoVerifiedAttrs { Email = true, Phone = true }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder().username(true).email(true).build())\n        .autoVerify(AutoVerifiedAttrs.builder().email(true).phone(true).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.AutoVerifiedAttrs"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AutoVerifiedAttrs",
        "@aws-cdk/aws-cognito.SignInAliases",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: { username: true, email: true },\n  autoVerify: { email: true, phone: true }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "104": 1,
        "106": 4,
        "193": 3,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "856826f1f10b4ff209c15366fd9611109172f0a478539222d691f6c8d5b4e606"
    },
    "36f2b34a3a25503438d27cd870a2c413b693649530d9b6c769e2f7ca0e29eb0a": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.BooleanAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "70e620c5b4659b96a19ffd375465c6d5f1ec92ec2614377ad63d308b9dca0080": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cognito as cognito\n\n# my_provider is of type OpenIdConnectProvider\n\ncognito.CfnIdentityPool(self, \"IdentityPool\",\n    open_id_connect_provider_arns=[my_provider.open_id_connect_provider_arn],\n    # And the other properties for your identity pool\n    allow_unauthenticated_identities=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Cognito;\n\nOpenIdConnectProvider myProvider;\n\nnew CfnIdentityPool(this, \"IdentityPool\", new CfnIdentityPoolProps {\n    OpenIdConnectProviderArns = new [] { myProvider.OpenIdConnectProviderArn },\n    // And the other properties for your identity pool\n    AllowUnauthenticatedIdentities = false\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cognito.*;\n\nOpenIdConnectProvider myProvider;\n\nCfnIdentityPool.Builder.create(this, \"IdentityPool\")\n        .openIdConnectProviderArns(List.of(myProvider.getOpenIdConnectProviderArn()))\n        // And the other properties for your identity pool\n        .allowUnauthenticatedIdentities(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPool",
        "@aws-cdk/aws-cognito.CfnIdentityPoolProps",
        "@aws-cdk/aws-iam.OpenIdConnectProvider#openIdConnectProviderArn",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 10,
        "91": 1,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "88614557b7c590a69b40ee12ca7370d1a87825e3b503c8404255d67483b83037"
    },
    "6639ad050355309737ba2126bb43bbd497d8524c594293ccec3410a93325a0af": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncognito_identity_provider_property = cognito.CfnIdentityPool.CognitoIdentityProviderProperty(\n    client_id=\"clientId\",\n    provider_name=\"providerName\",\n    server_side_token_check=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCognitoIdentityProviderProperty cognitoIdentityProviderProperty = new CognitoIdentityProviderProperty {\n    ClientId = \"clientId\",\n    ProviderName = \"providerName\",\n    ServerSideTokenCheck = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCognitoIdentityProviderProperty cognitoIdentityProviderProperty = CognitoIdentityProviderProperty.builder()\n        .clientId(\"clientId\")\n        .providerName(\"providerName\")\n        .serverSideTokenCheck(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoIdentityProviderProperty: cognito.CfnIdentityPool.CognitoIdentityProviderProperty = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoIdentityProviderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoIdentityProviderProperty: cognito.CfnIdentityPool.CognitoIdentityProviderProperty = {\n  clientId: 'clientId',\n  providerName: 'providerName',\n  serverSideTokenCheck: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f125f415e8b5d8afbe80cd1a0632559fd03f72ccecb3efbe9c7b0472bd4b6f95"
    },
    "12cd9820e82567919c9b3997d54849a4f8f8d59f4efcf2480e2e3ae1b3a468eb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncognito_streams_property = cognito.CfnIdentityPool.CognitoStreamsProperty(\n    role_arn=\"roleArn\",\n    streaming_status=\"streamingStatus\",\n    stream_name=\"streamName\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCognitoStreamsProperty cognitoStreamsProperty = new CognitoStreamsProperty {\n    RoleArn = \"roleArn\",\n    StreamingStatus = \"streamingStatus\",\n    StreamName = \"streamName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCognitoStreamsProperty cognitoStreamsProperty = CognitoStreamsProperty.builder()\n        .roleArn(\"roleArn\")\n        .streamingStatus(\"streamingStatus\")\n        .streamName(\"streamName\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cognitoStreamsProperty: cognito.CfnIdentityPool.CognitoStreamsProperty = {\n  roleArn: 'roleArn',\n  streamingStatus: 'streamingStatus',\n  streamName: 'streamName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPool.CognitoStreamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cognitoStreamsProperty: cognito.CfnIdentityPool.CognitoStreamsProperty = {\n  roleArn: 'roleArn',\n  streamingStatus: 'streamingStatus',\n  streamName: 'streamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "a07b91a05d642cfdf3ad445fc59961ea8340884941713892ee8a2d4099579f72"
    },
    "37fdd1d06f21c34296e858b1472810ad6a59a251a9db5281ea84ff6bff8023e6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npush_sync_property = cognito.CfnIdentityPool.PushSyncProperty(\n    application_arns=[\"applicationArns\"],\n    role_arn=\"roleArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nPushSyncProperty pushSyncProperty = new PushSyncProperty {\n    ApplicationArns = new [] { \"applicationArns\" },\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPushSyncProperty pushSyncProperty = PushSyncProperty.builder()\n        .applicationArns(List.of(\"applicationArns\"))\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst pushSyncProperty: cognito.CfnIdentityPool.PushSyncProperty = {\n  applicationArns: ['applicationArns'],\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPool.PushSyncProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pushSyncProperty: cognito.CfnIdentityPool.PushSyncProperty = {\n  applicationArns: ['applicationArns'],\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e0a828a08f0da96dc2f5e6ab33d6f555f07a1b0a142e54818bc533b362b6816e"
    },
    "310bd778aabea9276f366ff5eeebbf70ef1b658b1b35a0630c8c39c81113ccc4": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cognito as cognito\n\n# my_provider is of type OpenIdConnectProvider\n\ncognito.CfnIdentityPool(self, \"IdentityPool\",\n    open_id_connect_provider_arns=[my_provider.open_id_connect_provider_arn],\n    # And the other properties for your identity pool\n    allow_unauthenticated_identities=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Cognito;\n\nOpenIdConnectProvider myProvider;\n\nnew CfnIdentityPool(this, \"IdentityPool\", new CfnIdentityPoolProps {\n    OpenIdConnectProviderArns = new [] { myProvider.OpenIdConnectProviderArn },\n    // And the other properties for your identity pool\n    AllowUnauthenticatedIdentities = false\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cognito.*;\n\nOpenIdConnectProvider myProvider;\n\nCfnIdentityPool.Builder.create(this, \"IdentityPool\")\n        .openIdConnectProviderArns(List.of(myProvider.getOpenIdConnectProviderArn()))\n        // And the other properties for your identity pool\n        .allowUnauthenticatedIdentities(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPool",
        "@aws-cdk/aws-cognito.CfnIdentityPoolProps",
        "@aws-cdk/aws-iam.OpenIdConnectProvider#openIdConnectProviderArn",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const myProvider: iam.OpenIdConnectProvider;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { CustomResource, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as dynamodb from '@aws-cdk/aws-dynamodb';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cognito.CfnIdentityPool(this, 'IdentityPool', {\n  openIdConnectProviderArns: [myProvider.openIdConnectProviderArn],\n  // And the other properties for your identity pool\n  allowUnauthenticatedIdentities: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 10,
        "91": 1,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "88614557b7c590a69b40ee12ca7370d1a87825e3b503c8404255d67483b83037"
    },
    "bf040ec4339a99b5fe61accb8de9a911164848c3566b9cb85197dc54f6c1d67f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# roles is of type object\n\ncfn_identity_pool_role_attachment = cognito.CfnIdentityPoolRoleAttachment(self, \"MyCfnIdentityPoolRoleAttachment\",\n    identity_pool_id=\"identityPoolId\",\n\n    # the properties below are optional\n    role_mappings={\n        \"role_mappings_key\": cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            ambiguous_role_resolution=\"ambiguousRoleResolution\",\n            identity_provider=\"identityProvider\",\n            rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n                rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n                    claim=\"claim\",\n                    match_type=\"matchType\",\n                    role_arn=\"roleArn\",\n                    value=\"value\"\n                )]\n            )\n        )\n    },\n    roles=roles\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar roles;\n\nCfnIdentityPoolRoleAttachment cfnIdentityPoolRoleAttachment = new CfnIdentityPoolRoleAttachment(this, \"MyCfnIdentityPoolRoleAttachment\", new CfnIdentityPoolRoleAttachmentProps {\n    IdentityPoolId = \"identityPoolId\",\n\n    // the properties below are optional\n    RoleMappings = new Dictionary<string, object> {\n        { \"roleMappingsKey\", new RoleMappingProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n            IdentityProvider = \"identityProvider\",\n            RulesConfiguration = new RulesConfigurationTypeProperty {\n                Rules = new [] { new MappingRuleProperty {\n                    Claim = \"claim\",\n                    MatchType = \"matchType\",\n                    RoleArn = \"roleArn\",\n                    Value = \"value\"\n                } }\n            }\n        } }\n    },\n    Roles = roles\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject roles;\n\nCfnIdentityPoolRoleAttachment cfnIdentityPoolRoleAttachment = CfnIdentityPoolRoleAttachment.Builder.create(this, \"MyCfnIdentityPoolRoleAttachment\")\n        .identityPoolId(\"identityPoolId\")\n\n        // the properties below are optional\n        .roleMappings(Map.of(\n                \"roleMappingsKey\", RoleMappingProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n                        .identityProvider(\"identityProvider\")\n                        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                                .rules(List.of(MappingRuleProperty.builder()\n                                        .claim(\"claim\")\n                                        .matchType(\"matchType\")\n                                        .roleArn(\"roleArn\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build()))\n        .roles(roles)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachment = new cognito.CfnIdentityPoolRoleAttachment(this, 'MyCfnIdentityPoolRoleAttachment', {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment",
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIdentityPoolRoleAttachment = new cognito.CfnIdentityPoolRoleAttachment(this, 'MyCfnIdentityPoolRoleAttachment', {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 19,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "b6608dde9eb5b09a68cad11260b0ca46464a797681ac15da7dba27a23b624cb5"
    },
    "e0c25c9952cac3c252b3b5f269b5ddf43ee3b27b2fe3ad80a05accbaa87e6106": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nmapping_rule_property = cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n    claim=\"claim\",\n    match_type=\"matchType\",\n    role_arn=\"roleArn\",\n    value=\"value\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nMappingRuleProperty mappingRuleProperty = new MappingRuleProperty {\n    Claim = \"claim\",\n    MatchType = \"matchType\",\n    RoleArn = \"roleArn\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nMappingRuleProperty mappingRuleProperty = MappingRuleProperty.builder()\n        .claim(\"claim\")\n        .matchType(\"matchType\")\n        .roleArn(\"roleArn\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst mappingRuleProperty: cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty = {\n  claim: 'claim',\n  matchType: 'matchType',\n  roleArn: 'roleArn',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mappingRuleProperty: cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty = {\n  claim: 'claim',\n  matchType: 'matchType',\n  roleArn: 'roleArn',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c2fea5673756c3dbcd124622e533121de64e9fcbb92cc865d6b2bd00d4da66b8"
    },
    "c2c2235172ae2ad3e27333dbc254234ea8ccf217c4b0d3c33b5acfac205072ae": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrole_mapping_property = cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    ambiguous_role_resolution=\"ambiguousRoleResolution\",\n    identity_provider=\"identityProvider\",\n    rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n        rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n            claim=\"claim\",\n            match_type=\"matchType\",\n            role_arn=\"roleArn\",\n            value=\"value\"\n        )]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nRoleMappingProperty roleMappingProperty = new RoleMappingProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n    IdentityProvider = \"identityProvider\",\n    RulesConfiguration = new RulesConfigurationTypeProperty {\n        Rules = new [] { new MappingRuleProperty {\n            Claim = \"claim\",\n            MatchType = \"matchType\",\n            RoleArn = \"roleArn\",\n            Value = \"value\"\n        } }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRoleMappingProperty roleMappingProperty = RoleMappingProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n        .identityProvider(\"identityProvider\")\n        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                .rules(List.of(MappingRuleProperty.builder()\n                        .claim(\"claim\")\n                        .matchType(\"matchType\")\n                        .roleArn(\"roleArn\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst roleMappingProperty: cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  ambiguousRoleResolution: 'ambiguousRoleResolution',\n  identityProvider: 'identityProvider',\n  rulesConfiguration: {\n    rules: [{\n      claim: 'claim',\n      matchType: 'matchType',\n      roleArn: 'roleArn',\n      value: 'value',\n    }],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst roleMappingProperty: cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  ambiguousRoleResolution: 'ambiguousRoleResolution',\n  identityProvider: 'identityProvider',\n  rulesConfiguration: {\n    rules: [{\n      claim: 'claim',\n      matchType: 'matchType',\n      roleArn: 'roleArn',\n      value: 'value',\n    }],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "060175ba31510b7345cefae047d45a6b06fe7eb7704b551cbfea5262a9c52aff"
    },
    "381b0f275dcf4e626c2401e5d82d59fea04f994e21fb96cb2656743a1c455b26": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrules_configuration_type_property = cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n    rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n        claim=\"claim\",\n        match_type=\"matchType\",\n        role_arn=\"roleArn\",\n        value=\"value\"\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nRulesConfigurationTypeProperty rulesConfigurationTypeProperty = new RulesConfigurationTypeProperty {\n    Rules = new [] { new MappingRuleProperty {\n        Claim = \"claim\",\n        MatchType = \"matchType\",\n        RoleArn = \"roleArn\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRulesConfigurationTypeProperty rulesConfigurationTypeProperty = RulesConfigurationTypeProperty.builder()\n        .rules(List.of(MappingRuleProperty.builder()\n                .claim(\"claim\")\n                .matchType(\"matchType\")\n                .roleArn(\"roleArn\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst rulesConfigurationTypeProperty: cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty = {\n  rules: [{\n    claim: 'claim',\n    matchType: 'matchType',\n    roleArn: 'roleArn',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rulesConfigurationTypeProperty: cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty = {\n  rules: [{\n    claim: 'claim',\n    matchType: 'matchType',\n    roleArn: 'roleArn',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "783b830a25c54e017cdcb0678d6e2e679c0cddd244b74b339399871369669374"
    },
    "30c06dc4f27d9b5c011e0a154d475f4f689172b71984747cb246723972944821": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# roles is of type object\n\ncfn_identity_pool_role_attachment_props = cognito.CfnIdentityPoolRoleAttachmentProps(\n    identity_pool_id=\"identityPoolId\",\n\n    # the properties below are optional\n    role_mappings={\n        \"role_mappings_key\": cognito.CfnIdentityPoolRoleAttachment.RoleMappingProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            ambiguous_role_resolution=\"ambiguousRoleResolution\",\n            identity_provider=\"identityProvider\",\n            rules_configuration=cognito.CfnIdentityPoolRoleAttachment.RulesConfigurationTypeProperty(\n                rules=[cognito.CfnIdentityPoolRoleAttachment.MappingRuleProperty(\n                    claim=\"claim\",\n                    match_type=\"matchType\",\n                    role_arn=\"roleArn\",\n                    value=\"value\"\n                )]\n            )\n        )\n    },\n    roles=roles\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar roles;\n\nCfnIdentityPoolRoleAttachmentProps cfnIdentityPoolRoleAttachmentProps = new CfnIdentityPoolRoleAttachmentProps {\n    IdentityPoolId = \"identityPoolId\",\n\n    // the properties below are optional\n    RoleMappings = new Dictionary<string, object> {\n        { \"roleMappingsKey\", new RoleMappingProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            AmbiguousRoleResolution = \"ambiguousRoleResolution\",\n            IdentityProvider = \"identityProvider\",\n            RulesConfiguration = new RulesConfigurationTypeProperty {\n                Rules = new [] { new MappingRuleProperty {\n                    Claim = \"claim\",\n                    MatchType = \"matchType\",\n                    RoleArn = \"roleArn\",\n                    Value = \"value\"\n                } }\n            }\n        } }\n    },\n    Roles = roles\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject roles;\n\nCfnIdentityPoolRoleAttachmentProps cfnIdentityPoolRoleAttachmentProps = CfnIdentityPoolRoleAttachmentProps.builder()\n        .identityPoolId(\"identityPoolId\")\n\n        // the properties below are optional\n        .roleMappings(Map.of(\n                \"roleMappingsKey\", RoleMappingProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .ambiguousRoleResolution(\"ambiguousRoleResolution\")\n                        .identityProvider(\"identityProvider\")\n                        .rulesConfiguration(RulesConfigurationTypeProperty.builder()\n                                .rules(List.of(MappingRuleProperty.builder()\n                                        .claim(\"claim\")\n                                        .matchType(\"matchType\")\n                                        .roleArn(\"roleArn\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .build()))\n        .roles(roles)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\nconst cfnIdentityPoolRoleAttachmentProps: cognito.CfnIdentityPoolRoleAttachmentProps = {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnIdentityPoolRoleAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const roles: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIdentityPoolRoleAttachmentProps: cognito.CfnIdentityPoolRoleAttachmentProps = {\n  identityPoolId: 'identityPoolId',\n\n  // the properties below are optional\n  roleMappings: {\n    roleMappingsKey: {\n      type: 'type',\n\n      // the properties below are optional\n      ambiguousRoleResolution: 'ambiguousRoleResolution',\n      identityProvider: 'identityProvider',\n      rulesConfiguration: {\n        rules: [{\n          claim: 'claim',\n          matchType: 'matchType',\n          roleArn: 'roleArn',\n          value: 'value',\n        }],\n      },\n    },\n  },\n  roles: roles,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 19,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "94d303ec8faf88941df0fa46fe6705cb40973544d9b5f0bfd71774ff4a730d19"
    },
    "9c0d3aebbbe559b4b2843875d1b66a6131489376d7eb0e46d62925e1a000c7a8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# user_pool_tags is of type object\n\ncfn_user_pool = cognito.CfnUserPool(self, \"MyCfnUserPool\",\n    account_recovery_setting=cognito.CfnUserPool.AccountRecoverySettingProperty(\n        recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n            name=\"name\",\n            priority=123\n        )]\n    ),\n    admin_create_user_config=cognito.CfnUserPool.AdminCreateUserConfigProperty(\n        allow_admin_create_user_only=False,\n        invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n            email_message=\"emailMessage\",\n            email_subject=\"emailSubject\",\n            sms_message=\"smsMessage\"\n        ),\n        unused_account_validity_days=123\n    ),\n    alias_attributes=[\"aliasAttributes\"],\n    auto_verified_attributes=[\"autoVerifiedAttributes\"],\n    device_configuration=cognito.CfnUserPool.DeviceConfigurationProperty(\n        challenge_required_on_new_device=False,\n        device_only_remembered_on_user_prompt=False\n    ),\n    email_configuration=cognito.CfnUserPool.EmailConfigurationProperty(\n        configuration_set=\"configurationSet\",\n        email_sending_account=\"emailSendingAccount\",\n        from=\"from\",\n        reply_to_email_address=\"replyToEmailAddress\",\n        source_arn=\"sourceArn\"\n    ),\n    email_verification_message=\"emailVerificationMessage\",\n    email_verification_subject=\"emailVerificationSubject\",\n    enabled_mfas=[\"enabledMfas\"],\n    lambda_config=cognito.CfnUserPool.LambdaConfigProperty(\n        create_auth_challenge=\"createAuthChallenge\",\n        custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        custom_message=\"customMessage\",\n        custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        define_auth_challenge=\"defineAuthChallenge\",\n        kms_key_id=\"kmsKeyId\",\n        post_authentication=\"postAuthentication\",\n        post_confirmation=\"postConfirmation\",\n        pre_authentication=\"preAuthentication\",\n        pre_sign_up=\"preSignUp\",\n        pre_token_generation=\"preTokenGeneration\",\n        user_migration=\"userMigration\",\n        verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n    ),\n    mfa_configuration=\"mfaConfiguration\",\n    policies=cognito.CfnUserPool.PoliciesProperty(\n        password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n            minimum_length=123,\n            require_lowercase=False,\n            require_numbers=False,\n            require_symbols=False,\n            require_uppercase=False,\n            temporary_password_validity_days=123\n        )\n    ),\n    schema=[cognito.CfnUserPool.SchemaAttributeProperty(\n        attribute_data_type=\"attributeDataType\",\n        developer_only_attribute=False,\n        mutable=False,\n        name=\"name\",\n        number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n            max_value=\"maxValue\",\n            min_value=\"minValue\"\n        ),\n        required=False,\n        string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n            max_length=\"maxLength\",\n            min_length=\"minLength\"\n        )\n    )],\n    sms_authentication_message=\"smsAuthenticationMessage\",\n    sms_configuration=cognito.CfnUserPool.SmsConfigurationProperty(\n        external_id=\"externalId\",\n        sns_caller_arn=\"snsCallerArn\"\n    ),\n    sms_verification_message=\"smsVerificationMessage\",\n    username_attributes=[\"usernameAttributes\"],\n    username_configuration=cognito.CfnUserPool.UsernameConfigurationProperty(\n        case_sensitive=False\n    ),\n    user_pool_add_ons=cognito.CfnUserPool.UserPoolAddOnsProperty(\n        advanced_security_mode=\"advancedSecurityMode\"\n    ),\n    user_pool_name=\"userPoolName\",\n    user_pool_tags=user_pool_tags,\n    verification_message_template=cognito.CfnUserPool.VerificationMessageTemplateProperty(\n        default_email_option=\"defaultEmailOption\",\n        email_message=\"emailMessage\",\n        email_message_by_link=\"emailMessageByLink\",\n        email_subject=\"emailSubject\",\n        email_subject_by_link=\"emailSubjectByLink\",\n        sms_message=\"smsMessage\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userPoolTags;\n\nCfnUserPool cfnUserPool = new CfnUserPool(this, \"MyCfnUserPool\", new CfnUserPoolProps {\n    AccountRecoverySetting = new AccountRecoverySettingProperty {\n        RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n            Name = \"name\",\n            Priority = 123\n        } }\n    },\n    AdminCreateUserConfig = new AdminCreateUserConfigProperty {\n        AllowAdminCreateUserOnly = false,\n        InviteMessageTemplate = new InviteMessageTemplateProperty {\n            EmailMessage = \"emailMessage\",\n            EmailSubject = \"emailSubject\",\n            SmsMessage = \"smsMessage\"\n        },\n        UnusedAccountValidityDays = 123\n    },\n    AliasAttributes = new [] { \"aliasAttributes\" },\n    AutoVerifiedAttributes = new [] { \"autoVerifiedAttributes\" },\n    DeviceConfiguration = new DeviceConfigurationProperty {\n        ChallengeRequiredOnNewDevice = false,\n        DeviceOnlyRememberedOnUserPrompt = false\n    },\n    EmailConfiguration = new EmailConfigurationProperty {\n        ConfigurationSet = \"configurationSet\",\n        EmailSendingAccount = \"emailSendingAccount\",\n        From = \"from\",\n        ReplyToEmailAddress = \"replyToEmailAddress\",\n        SourceArn = \"sourceArn\"\n    },\n    EmailVerificationMessage = \"emailVerificationMessage\",\n    EmailVerificationSubject = \"emailVerificationSubject\",\n    EnabledMfas = new [] { \"enabledMfas\" },\n    LambdaConfig = new LambdaConfigProperty {\n        CreateAuthChallenge = \"createAuthChallenge\",\n        CustomEmailSender = new CustomEmailSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        CustomMessage = \"customMessage\",\n        CustomSmsSender = new CustomSMSSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        DefineAuthChallenge = \"defineAuthChallenge\",\n        KmsKeyId = \"kmsKeyId\",\n        PostAuthentication = \"postAuthentication\",\n        PostConfirmation = \"postConfirmation\",\n        PreAuthentication = \"preAuthentication\",\n        PreSignUp = \"preSignUp\",\n        PreTokenGeneration = \"preTokenGeneration\",\n        UserMigration = \"userMigration\",\n        VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n    },\n    MfaConfiguration = \"mfaConfiguration\",\n    Policies = new PoliciesProperty {\n        PasswordPolicy = new PasswordPolicyProperty {\n            MinimumLength = 123,\n            RequireLowercase = false,\n            RequireNumbers = false,\n            RequireSymbols = false,\n            RequireUppercase = false,\n            TemporaryPasswordValidityDays = 123\n        }\n    },\n    Schema = new [] { new SchemaAttributeProperty {\n        AttributeDataType = \"attributeDataType\",\n        DeveloperOnlyAttribute = false,\n        Mutable = false,\n        Name = \"name\",\n        NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n            MaxValue = \"maxValue\",\n            MinValue = \"minValue\"\n        },\n        Required = false,\n        StringAttributeConstraints = new StringAttributeConstraintsProperty {\n            MaxLength = \"maxLength\",\n            MinLength = \"minLength\"\n        }\n    } },\n    SmsAuthenticationMessage = \"smsAuthenticationMessage\",\n    SmsConfiguration = new SmsConfigurationProperty {\n        ExternalId = \"externalId\",\n        SnsCallerArn = \"snsCallerArn\"\n    },\n    SmsVerificationMessage = \"smsVerificationMessage\",\n    UsernameAttributes = new [] { \"usernameAttributes\" },\n    UsernameConfiguration = new UsernameConfigurationProperty {\n        CaseSensitive = false\n    },\n    UserPoolAddOns = new UserPoolAddOnsProperty {\n        AdvancedSecurityMode = \"advancedSecurityMode\"\n    },\n    UserPoolName = \"userPoolName\",\n    UserPoolTags = userPoolTags,\n    VerificationMessageTemplate = new VerificationMessageTemplateProperty {\n        DefaultEmailOption = \"defaultEmailOption\",\n        EmailMessage = \"emailMessage\",\n        EmailMessageByLink = \"emailMessageByLink\",\n        EmailSubject = \"emailSubject\",\n        EmailSubjectByLink = \"emailSubjectByLink\",\n        SmsMessage = \"smsMessage\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject userPoolTags;\n\nCfnUserPool cfnUserPool = CfnUserPool.Builder.create(this, \"MyCfnUserPool\")\n        .accountRecoverySetting(AccountRecoverySettingProperty.builder()\n                .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                        .name(\"name\")\n                        .priority(123)\n                        .build()))\n                .build())\n        .adminCreateUserConfig(AdminCreateUserConfigProperty.builder()\n                .allowAdminCreateUserOnly(false)\n                .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                        .emailMessage(\"emailMessage\")\n                        .emailSubject(\"emailSubject\")\n                        .smsMessage(\"smsMessage\")\n                        .build())\n                .unusedAccountValidityDays(123)\n                .build())\n        .aliasAttributes(List.of(\"aliasAttributes\"))\n        .autoVerifiedAttributes(List.of(\"autoVerifiedAttributes\"))\n        .deviceConfiguration(DeviceConfigurationProperty.builder()\n                .challengeRequiredOnNewDevice(false)\n                .deviceOnlyRememberedOnUserPrompt(false)\n                .build())\n        .emailConfiguration(EmailConfigurationProperty.builder()\n                .configurationSet(\"configurationSet\")\n                .emailSendingAccount(\"emailSendingAccount\")\n                .from(\"from\")\n                .replyToEmailAddress(\"replyToEmailAddress\")\n                .sourceArn(\"sourceArn\")\n                .build())\n        .emailVerificationMessage(\"emailVerificationMessage\")\n        .emailVerificationSubject(\"emailVerificationSubject\")\n        .enabledMfas(List.of(\"enabledMfas\"))\n        .lambdaConfig(LambdaConfigProperty.builder()\n                .createAuthChallenge(\"createAuthChallenge\")\n                .customEmailSender(CustomEmailSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .customMessage(\"customMessage\")\n                .customSmsSender(CustomSMSSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .defineAuthChallenge(\"defineAuthChallenge\")\n                .kmsKeyId(\"kmsKeyId\")\n                .postAuthentication(\"postAuthentication\")\n                .postConfirmation(\"postConfirmation\")\n                .preAuthentication(\"preAuthentication\")\n                .preSignUp(\"preSignUp\")\n                .preTokenGeneration(\"preTokenGeneration\")\n                .userMigration(\"userMigration\")\n                .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n                .build())\n        .mfaConfiguration(\"mfaConfiguration\")\n        .policies(PoliciesProperty.builder()\n                .passwordPolicy(PasswordPolicyProperty.builder()\n                        .minimumLength(123)\n                        .requireLowercase(false)\n                        .requireNumbers(false)\n                        .requireSymbols(false)\n                        .requireUppercase(false)\n                        .temporaryPasswordValidityDays(123)\n                        .build())\n                .build())\n        .schema(List.of(SchemaAttributeProperty.builder()\n                .attributeDataType(\"attributeDataType\")\n                .developerOnlyAttribute(false)\n                .mutable(false)\n                .name(\"name\")\n                .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                        .maxValue(\"maxValue\")\n                        .minValue(\"minValue\")\n                        .build())\n                .required(false)\n                .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                        .maxLength(\"maxLength\")\n                        .minLength(\"minLength\")\n                        .build())\n                .build()))\n        .smsAuthenticationMessage(\"smsAuthenticationMessage\")\n        .smsConfiguration(SmsConfigurationProperty.builder()\n                .externalId(\"externalId\")\n                .snsCallerArn(\"snsCallerArn\")\n                .build())\n        .smsVerificationMessage(\"smsVerificationMessage\")\n        .usernameAttributes(List.of(\"usernameAttributes\"))\n        .usernameConfiguration(UsernameConfigurationProperty.builder()\n                .caseSensitive(false)\n                .build())\n        .userPoolAddOns(UserPoolAddOnsProperty.builder()\n                .advancedSecurityMode(\"advancedSecurityMode\")\n                .build())\n        .userPoolName(\"userPoolName\")\n        .userPoolTags(userPoolTags)\n        .verificationMessageTemplate(VerificationMessageTemplateProperty.builder()\n                .defaultEmailOption(\"defaultEmailOption\")\n                .emailMessage(\"emailMessage\")\n                .emailMessageByLink(\"emailMessageByLink\")\n                .emailSubject(\"emailSubject\")\n                .emailSubjectByLink(\"emailSubjectByLink\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPool = new cognito.CfnUserPool(this, 'MyCfnUserPool', /* all optional props */ {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool",
        "@aws-cdk/aws-cognito.CfnUserPoolProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPool = new cognito.CfnUserPool(this, 'MyCfnUserPool', /* all optional props */ {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 51,
        "75": 89,
        "91": 11,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 6,
        "193": 19,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 83,
        "290": 1
      },
      "fqnsFingerprint": "d2d8792aa552f416aebef4441a4dff6d67ec5c61ebbc3f2fd982c2c564a80b2f"
    },
    "7a6665e7ecba0100b633d55083b9e5758275b95b439ecdd21c0cbf552e9c1f5b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_recovery_setting_property = cognito.CfnUserPool.AccountRecoverySettingProperty(\n    recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n        name=\"name\",\n        priority=123\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAccountRecoverySettingProperty accountRecoverySettingProperty = new AccountRecoverySettingProperty {\n    RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n        Name = \"name\",\n        Priority = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountRecoverySettingProperty accountRecoverySettingProperty = AccountRecoverySettingProperty.builder()\n        .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                .name(\"name\")\n                .priority(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountRecoverySettingProperty: cognito.CfnUserPool.AccountRecoverySettingProperty = {\n  recoveryMechanisms: [{\n    name: 'name',\n    priority: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.AccountRecoverySettingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountRecoverySettingProperty: cognito.CfnUserPool.AccountRecoverySettingProperty = {\n  recoveryMechanisms: [{\n    name: 'name',\n    priority: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "623e6f2a3bf3105bd135ac3cea47b1d582730076d67249e25a53304645c44bb5"
    },
    "72ba109eee84c214684a264944b8b048a6bb0a221d658c5fcd0edd40a86b63f9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nadmin_create_user_config_property = cognito.CfnUserPool.AdminCreateUserConfigProperty(\n    allow_admin_create_user_only=False,\n    invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n        email_message=\"emailMessage\",\n        email_subject=\"emailSubject\",\n        sms_message=\"smsMessage\"\n    ),\n    unused_account_validity_days=123\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAdminCreateUserConfigProperty adminCreateUserConfigProperty = new AdminCreateUserConfigProperty {\n    AllowAdminCreateUserOnly = false,\n    InviteMessageTemplate = new InviteMessageTemplateProperty {\n        EmailMessage = \"emailMessage\",\n        EmailSubject = \"emailSubject\",\n        SmsMessage = \"smsMessage\"\n    },\n    UnusedAccountValidityDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAdminCreateUserConfigProperty adminCreateUserConfigProperty = AdminCreateUserConfigProperty.builder()\n        .allowAdminCreateUserOnly(false)\n        .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                .emailMessage(\"emailMessage\")\n                .emailSubject(\"emailSubject\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .unusedAccountValidityDays(123)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst adminCreateUserConfigProperty: cognito.CfnUserPool.AdminCreateUserConfigProperty = {\n  allowAdminCreateUserOnly: false,\n  inviteMessageTemplate: {\n    emailMessage: 'emailMessage',\n    emailSubject: 'emailSubject',\n    smsMessage: 'smsMessage',\n  },\n  unusedAccountValidityDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.AdminCreateUserConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst adminCreateUserConfigProperty: cognito.CfnUserPool.AdminCreateUserConfigProperty = {\n  allowAdminCreateUserOnly: false,\n  inviteMessageTemplate: {\n    emailMessage: 'emailMessage',\n    emailSubject: 'emailSubject',\n    smsMessage: 'smsMessage',\n  },\n  unusedAccountValidityDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "1e5a8524b412be5e55a09c67ee6e6918c42c893a5ae82948264cc7c54bf2b656"
    },
    "5bc398509b9e3a94b9c9f67208cf2dcb5ec33bcab55e7129e67a1dec32aa4cf0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_email_sender_property = cognito.CfnUserPool.CustomEmailSenderProperty(\n    lambda_arn=\"lambdaArn\",\n    lambda_version=\"lambdaVersion\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCustomEmailSenderProperty customEmailSenderProperty = new CustomEmailSenderProperty {\n    LambdaArn = \"lambdaArn\",\n    LambdaVersion = \"lambdaVersion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomEmailSenderProperty customEmailSenderProperty = CustomEmailSenderProperty.builder()\n        .lambdaArn(\"lambdaArn\")\n        .lambdaVersion(\"lambdaVersion\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customEmailSenderProperty: cognito.CfnUserPool.CustomEmailSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.CustomEmailSenderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customEmailSenderProperty: cognito.CfnUserPool.CustomEmailSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7df5c078e70ad090e21175a0deed434016b4facb84d4d16755250edc8ed24701"
    },
    "54c48551cc8a3b2729d8e225d416862856008b145b75d6973b89cecb24e961bd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_sMSSender_property = cognito.CfnUserPool.CustomSMSSenderProperty(\n    lambda_arn=\"lambdaArn\",\n    lambda_version=\"lambdaVersion\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCustomSMSSenderProperty customSMSSenderProperty = new CustomSMSSenderProperty {\n    LambdaArn = \"lambdaArn\",\n    LambdaVersion = \"lambdaVersion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomSMSSenderProperty customSMSSenderProperty = CustomSMSSenderProperty.builder()\n        .lambdaArn(\"lambdaArn\")\n        .lambdaVersion(\"lambdaVersion\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customSMSSenderProperty: cognito.CfnUserPool.CustomSMSSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.CustomSMSSenderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customSMSSenderProperty: cognito.CfnUserPool.CustomSMSSenderProperty = {\n  lambdaArn: 'lambdaArn',\n  lambdaVersion: 'lambdaVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9e84d3b95a5d7d9aaca1bdff29b3c22cfffef12d647793c028559da74969d0aa"
    },
    "bf971b0dbc3f15e81465e25b460aa9c34856806a68b6b80e42cf4ab2a860e876": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ndevice_configuration_property = cognito.CfnUserPool.DeviceConfigurationProperty(\n    challenge_required_on_new_device=False,\n    device_only_remembered_on_user_prompt=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nDeviceConfigurationProperty deviceConfigurationProperty = new DeviceConfigurationProperty {\n    ChallengeRequiredOnNewDevice = false,\n    DeviceOnlyRememberedOnUserPrompt = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nDeviceConfigurationProperty deviceConfigurationProperty = DeviceConfigurationProperty.builder()\n        .challengeRequiredOnNewDevice(false)\n        .deviceOnlyRememberedOnUserPrompt(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst deviceConfigurationProperty: cognito.CfnUserPool.DeviceConfigurationProperty = {\n  challengeRequiredOnNewDevice: false,\n  deviceOnlyRememberedOnUserPrompt: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.DeviceConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deviceConfigurationProperty: cognito.CfnUserPool.DeviceConfigurationProperty = {\n  challengeRequiredOnNewDevice: false,\n  deviceOnlyRememberedOnUserPrompt: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4b6f9deeb3a75cb1688d9637724cb916ca9ba4864fb108b2c36327a62b17ca6d"
    },
    "8f16c364b23547df49394310a5883402b33f5c813a37d17257c50de456cfd87a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nemail_configuration_property = cognito.CfnUserPool.EmailConfigurationProperty(\n    configuration_set=\"configurationSet\",\n    email_sending_account=\"emailSendingAccount\",\n    from=\"from\",\n    reply_to_email_address=\"replyToEmailAddress\",\n    source_arn=\"sourceArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nEmailConfigurationProperty emailConfigurationProperty = new EmailConfigurationProperty {\n    ConfigurationSet = \"configurationSet\",\n    EmailSendingAccount = \"emailSendingAccount\",\n    From = \"from\",\n    ReplyToEmailAddress = \"replyToEmailAddress\",\n    SourceArn = \"sourceArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nEmailConfigurationProperty emailConfigurationProperty = EmailConfigurationProperty.builder()\n        .configurationSet(\"configurationSet\")\n        .emailSendingAccount(\"emailSendingAccount\")\n        .from(\"from\")\n        .replyToEmailAddress(\"replyToEmailAddress\")\n        .sourceArn(\"sourceArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailConfigurationProperty: cognito.CfnUserPool.EmailConfigurationProperty = {\n  configurationSet: 'configurationSet',\n  emailSendingAccount: 'emailSendingAccount',\n  from: 'from',\n  replyToEmailAddress: 'replyToEmailAddress',\n  sourceArn: 'sourceArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.EmailConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst emailConfigurationProperty: cognito.CfnUserPool.EmailConfigurationProperty = {\n  configurationSet: 'configurationSet',\n  emailSendingAccount: 'emailSendingAccount',\n  from: 'from',\n  replyToEmailAddress: 'replyToEmailAddress',\n  sourceArn: 'sourceArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "cafb7a1fff5f80098ac7469295d278a9ef29e0c13f2ed9a77c216f80203ed61d"
    },
    "08210b469b6c6312f0873329904ce6ae4fc34afc5a53b7df33864b65196d1fe2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ninvite_message_template_property = cognito.CfnUserPool.InviteMessageTemplateProperty(\n    email_message=\"emailMessage\",\n    email_subject=\"emailSubject\",\n    sms_message=\"smsMessage\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nInviteMessageTemplateProperty inviteMessageTemplateProperty = new InviteMessageTemplateProperty {\n    EmailMessage = \"emailMessage\",\n    EmailSubject = \"emailSubject\",\n    SmsMessage = \"smsMessage\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nInviteMessageTemplateProperty inviteMessageTemplateProperty = InviteMessageTemplateProperty.builder()\n        .emailMessage(\"emailMessage\")\n        .emailSubject(\"emailSubject\")\n        .smsMessage(\"smsMessage\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst inviteMessageTemplateProperty: cognito.CfnUserPool.InviteMessageTemplateProperty = {\n  emailMessage: 'emailMessage',\n  emailSubject: 'emailSubject',\n  smsMessage: 'smsMessage',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.InviteMessageTemplateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inviteMessageTemplateProperty: cognito.CfnUserPool.InviteMessageTemplateProperty = {\n  emailMessage: 'emailMessage',\n  emailSubject: 'emailSubject',\n  smsMessage: 'smsMessage',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d168879807eec8c115de56945467d8d1c53e7e4d7104a38c2dad6d00a5547881"
    },
    "07625535c98f92eb4c8937db076e0a375cfab2492d51687c310ca3ea2a2326f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nlambda_config_property = cognito.CfnUserPool.LambdaConfigProperty(\n    create_auth_challenge=\"createAuthChallenge\",\n    custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n        lambda_arn=\"lambdaArn\",\n        lambda_version=\"lambdaVersion\"\n    ),\n    custom_message=\"customMessage\",\n    custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n        lambda_arn=\"lambdaArn\",\n        lambda_version=\"lambdaVersion\"\n    ),\n    define_auth_challenge=\"defineAuthChallenge\",\n    kms_key_id=\"kmsKeyId\",\n    post_authentication=\"postAuthentication\",\n    post_confirmation=\"postConfirmation\",\n    pre_authentication=\"preAuthentication\",\n    pre_sign_up=\"preSignUp\",\n    pre_token_generation=\"preTokenGeneration\",\n    user_migration=\"userMigration\",\n    verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nLambdaConfigProperty lambdaConfigProperty = new LambdaConfigProperty {\n    CreateAuthChallenge = \"createAuthChallenge\",\n    CustomEmailSender = new CustomEmailSenderProperty {\n        LambdaArn = \"lambdaArn\",\n        LambdaVersion = \"lambdaVersion\"\n    },\n    CustomMessage = \"customMessage\",\n    CustomSmsSender = new CustomSMSSenderProperty {\n        LambdaArn = \"lambdaArn\",\n        LambdaVersion = \"lambdaVersion\"\n    },\n    DefineAuthChallenge = \"defineAuthChallenge\",\n    KmsKeyId = \"kmsKeyId\",\n    PostAuthentication = \"postAuthentication\",\n    PostConfirmation = \"postConfirmation\",\n    PreAuthentication = \"preAuthentication\",\n    PreSignUp = \"preSignUp\",\n    PreTokenGeneration = \"preTokenGeneration\",\n    UserMigration = \"userMigration\",\n    VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nLambdaConfigProperty lambdaConfigProperty = LambdaConfigProperty.builder()\n        .createAuthChallenge(\"createAuthChallenge\")\n        .customEmailSender(CustomEmailSenderProperty.builder()\n                .lambdaArn(\"lambdaArn\")\n                .lambdaVersion(\"lambdaVersion\")\n                .build())\n        .customMessage(\"customMessage\")\n        .customSmsSender(CustomSMSSenderProperty.builder()\n                .lambdaArn(\"lambdaArn\")\n                .lambdaVersion(\"lambdaVersion\")\n                .build())\n        .defineAuthChallenge(\"defineAuthChallenge\")\n        .kmsKeyId(\"kmsKeyId\")\n        .postAuthentication(\"postAuthentication\")\n        .postConfirmation(\"postConfirmation\")\n        .preAuthentication(\"preAuthentication\")\n        .preSignUp(\"preSignUp\")\n        .preTokenGeneration(\"preTokenGeneration\")\n        .userMigration(\"userMigration\")\n        .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst lambdaConfigProperty: cognito.CfnUserPool.LambdaConfigProperty = {\n  createAuthChallenge: 'createAuthChallenge',\n  customEmailSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  customMessage: 'customMessage',\n  customSmsSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  defineAuthChallenge: 'defineAuthChallenge',\n  kmsKeyId: 'kmsKeyId',\n  postAuthentication: 'postAuthentication',\n  postConfirmation: 'postConfirmation',\n  preAuthentication: 'preAuthentication',\n  preSignUp: 'preSignUp',\n  preTokenGeneration: 'preTokenGeneration',\n  userMigration: 'userMigration',\n  verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.LambdaConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaConfigProperty: cognito.CfnUserPool.LambdaConfigProperty = {\n  createAuthChallenge: 'createAuthChallenge',\n  customEmailSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  customMessage: 'customMessage',\n  customSmsSender: {\n    lambdaArn: 'lambdaArn',\n    lambdaVersion: 'lambdaVersion',\n  },\n  defineAuthChallenge: 'defineAuthChallenge',\n  kmsKeyId: 'kmsKeyId',\n  postAuthentication: 'postAuthentication',\n  postConfirmation: 'postConfirmation',\n  preAuthentication: 'preAuthentication',\n  preSignUp: 'preSignUp',\n  preTokenGeneration: 'preTokenGeneration',\n  userMigration: 'userMigration',\n  verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 22,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 17,
        "290": 1
      },
      "fqnsFingerprint": "bd65fa9697dc88ff5813c0dcd57983c9c51dfc63004c1bd13aa33e53cf652e19"
    },
    "b511acb83ce58064106234453d5cc090eff405c67fb5c2de88a16306620c2159": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnumber_attribute_constraints_property = cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n    max_value=\"maxValue\",\n    min_value=\"minValue\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nNumberAttributeConstraintsProperty numberAttributeConstraintsProperty = new NumberAttributeConstraintsProperty {\n    MaxValue = \"maxValue\",\n    MinValue = \"minValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNumberAttributeConstraintsProperty numberAttributeConstraintsProperty = NumberAttributeConstraintsProperty.builder()\n        .maxValue(\"maxValue\")\n        .minValue(\"minValue\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraintsProperty: cognito.CfnUserPool.NumberAttributeConstraintsProperty = {\n  maxValue: 'maxValue',\n  minValue: 'minValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.NumberAttributeConstraintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst numberAttributeConstraintsProperty: cognito.CfnUserPool.NumberAttributeConstraintsProperty = {\n  maxValue: 'maxValue',\n  minValue: 'minValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9b24c4d5c22a0d7a63c91e9998baa98aed34bffc07361ab1f72bb34727cce242"
    },
    "e161ab36e160ac0168ef017e2d1f1e53042a00acb6d51e490490118bab4324db": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npassword_policy_property = cognito.CfnUserPool.PasswordPolicyProperty(\n    minimum_length=123,\n    require_lowercase=False,\n    require_numbers=False,\n    require_symbols=False,\n    require_uppercase=False,\n    temporary_password_validity_days=123\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nPasswordPolicyProperty passwordPolicyProperty = new PasswordPolicyProperty {\n    MinimumLength = 123,\n    RequireLowercase = false,\n    RequireNumbers = false,\n    RequireSymbols = false,\n    RequireUppercase = false,\n    TemporaryPasswordValidityDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPasswordPolicyProperty passwordPolicyProperty = PasswordPolicyProperty.builder()\n        .minimumLength(123)\n        .requireLowercase(false)\n        .requireNumbers(false)\n        .requireSymbols(false)\n        .requireUppercase(false)\n        .temporaryPasswordValidityDays(123)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst passwordPolicyProperty: cognito.CfnUserPool.PasswordPolicyProperty = {\n  minimumLength: 123,\n  requireLowercase: false,\n  requireNumbers: false,\n  requireSymbols: false,\n  requireUppercase: false,\n  temporaryPasswordValidityDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.PasswordPolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst passwordPolicyProperty: cognito.CfnUserPool.PasswordPolicyProperty = {\n  minimumLength: 123,\n  requireLowercase: false,\n  requireNumbers: false,\n  requireSymbols: false,\n  requireUppercase: false,\n  temporaryPasswordValidityDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 11,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "fcb2e86f103877f108a1913bc1c1e9c389234946a2a7fb8e21ee13bece609e46"
    },
    "b5b5deb9cce1804e700e86c6f22041d389ccf7396d783bd8d5b384db7a732fb5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\npolicies_property = cognito.CfnUserPool.PoliciesProperty(\n    password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n        minimum_length=123,\n        require_lowercase=False,\n        require_numbers=False,\n        require_symbols=False,\n        require_uppercase=False,\n        temporary_password_validity_days=123\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nPoliciesProperty policiesProperty = new PoliciesProperty {\n    PasswordPolicy = new PasswordPolicyProperty {\n        MinimumLength = 123,\n        RequireLowercase = false,\n        RequireNumbers = false,\n        RequireSymbols = false,\n        RequireUppercase = false,\n        TemporaryPasswordValidityDays = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nPoliciesProperty policiesProperty = PoliciesProperty.builder()\n        .passwordPolicy(PasswordPolicyProperty.builder()\n                .minimumLength(123)\n                .requireLowercase(false)\n                .requireNumbers(false)\n                .requireSymbols(false)\n                .requireUppercase(false)\n                .temporaryPasswordValidityDays(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst policiesProperty: cognito.CfnUserPool.PoliciesProperty = {\n  passwordPolicy: {\n    minimumLength: 123,\n    requireLowercase: false,\n    requireNumbers: false,\n    requireSymbols: false,\n    requireUppercase: false,\n    temporaryPasswordValidityDays: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.PoliciesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst policiesProperty: cognito.CfnUserPool.PoliciesProperty = {\n  passwordPolicy: {\n    minimumLength: 123,\n    requireLowercase: false,\n    requireNumbers: false,\n    requireSymbols: false,\n    requireUppercase: false,\n    temporaryPasswordValidityDays: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 12,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "2ace9b1d85bd446696ac24700908ade9b0c5fdcf2c70c09a18a43fa2c947359d"
    },
    "6ad612e6b3ec80a322c2087eace3d680f4f655bdabfdd7a4b5949ea396ec6812": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrecovery_option_property = cognito.CfnUserPool.RecoveryOptionProperty(\n    name=\"name\",\n    priority=123\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nRecoveryOptionProperty recoveryOptionProperty = new RecoveryOptionProperty {\n    Name = \"name\",\n    Priority = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRecoveryOptionProperty recoveryOptionProperty = RecoveryOptionProperty.builder()\n        .name(\"name\")\n        .priority(123)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst recoveryOptionProperty: cognito.CfnUserPool.RecoveryOptionProperty = {\n  name: 'name',\n  priority: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.RecoveryOptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recoveryOptionProperty: cognito.CfnUserPool.RecoveryOptionProperty = {\n  name: 'name',\n  priority: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "78cafa508c85b06ebad1bcaf5acccb765695d4e6ae3e4e8f6f0d36f0a6ba6ccf"
    },
    "2c197b6814a34f806f25f28a452e6516e5e132c5a28f888b97146499273c7d07": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nschema_attribute_property = cognito.CfnUserPool.SchemaAttributeProperty(\n    attribute_data_type=\"attributeDataType\",\n    developer_only_attribute=False,\n    mutable=False,\n    name=\"name\",\n    number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n        max_value=\"maxValue\",\n        min_value=\"minValue\"\n    ),\n    required=False,\n    string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n        max_length=\"maxLength\",\n        min_length=\"minLength\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nSchemaAttributeProperty schemaAttributeProperty = new SchemaAttributeProperty {\n    AttributeDataType = \"attributeDataType\",\n    DeveloperOnlyAttribute = false,\n    Mutable = false,\n    Name = \"name\",\n    NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n        MaxValue = \"maxValue\",\n        MinValue = \"minValue\"\n    },\n    Required = false,\n    StringAttributeConstraints = new StringAttributeConstraintsProperty {\n        MaxLength = \"maxLength\",\n        MinLength = \"minLength\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nSchemaAttributeProperty schemaAttributeProperty = SchemaAttributeProperty.builder()\n        .attributeDataType(\"attributeDataType\")\n        .developerOnlyAttribute(false)\n        .mutable(false)\n        .name(\"name\")\n        .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                .maxValue(\"maxValue\")\n                .minValue(\"minValue\")\n                .build())\n        .required(false)\n        .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                .maxLength(\"maxLength\")\n                .minLength(\"minLength\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst schemaAttributeProperty: cognito.CfnUserPool.SchemaAttributeProperty = {\n  attributeDataType: 'attributeDataType',\n  developerOnlyAttribute: false,\n  mutable: false,\n  name: 'name',\n  numberAttributeConstraints: {\n    maxValue: 'maxValue',\n    minValue: 'minValue',\n  },\n  required: false,\n  stringAttributeConstraints: {\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.SchemaAttributeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaAttributeProperty: cognito.CfnUserPool.SchemaAttributeProperty = {\n  attributeDataType: 'attributeDataType',\n  developerOnlyAttribute: false,\n  mutable: false,\n  name: 'name',\n  numberAttributeConstraints: {\n    maxValue: 'maxValue',\n    minValue: 'minValue',\n  },\n  required: false,\n  stringAttributeConstraints: {\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 16,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "8be22027de6f267678f434a9961cf5a01839896fc4aef18cde532cf51dd06bf7"
    },
    "ed4a7eddc59f530914b0d234d1af2eceb851db158a7cbe0ce665b0ad9671e5ba": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nsms_configuration_property = cognito.CfnUserPool.SmsConfigurationProperty(\n    external_id=\"externalId\",\n    sns_caller_arn=\"snsCallerArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nSmsConfigurationProperty smsConfigurationProperty = new SmsConfigurationProperty {\n    ExternalId = \"externalId\",\n    SnsCallerArn = \"snsCallerArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nSmsConfigurationProperty smsConfigurationProperty = SmsConfigurationProperty.builder()\n        .externalId(\"externalId\")\n        .snsCallerArn(\"snsCallerArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst smsConfigurationProperty: cognito.CfnUserPool.SmsConfigurationProperty = {\n  externalId: 'externalId',\n  snsCallerArn: 'snsCallerArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.SmsConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst smsConfigurationProperty: cognito.CfnUserPool.SmsConfigurationProperty = {\n  externalId: 'externalId',\n  snsCallerArn: 'snsCallerArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8f546d70807ffa5635e1680a502c2daae64a01726bc42d8fc9d263e738eb484e"
    },
    "e854b3a4bc673ca293f2b48742afc9c92f7d1f6a27a52ef32594c6fdbffa4805": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nstring_attribute_constraints_property = cognito.CfnUserPool.StringAttributeConstraintsProperty(\n    max_length=\"maxLength\",\n    min_length=\"minLength\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nStringAttributeConstraintsProperty stringAttributeConstraintsProperty = new StringAttributeConstraintsProperty {\n    MaxLength = \"maxLength\",\n    MinLength = \"minLength\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nStringAttributeConstraintsProperty stringAttributeConstraintsProperty = StringAttributeConstraintsProperty.builder()\n        .maxLength(\"maxLength\")\n        .minLength(\"minLength\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraintsProperty: cognito.CfnUserPool.StringAttributeConstraintsProperty = {\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.StringAttributeConstraintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stringAttributeConstraintsProperty: cognito.CfnUserPool.StringAttributeConstraintsProperty = {\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3edd320e071294448f8a4bad67cbb6ca7ca9d9795ef462cd6f0d3d80e94b3970"
    },
    "dd3875c90819570b5e42d1365258aa7f1f23f3959882eb4e62d02f6b572760dc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nuser_pool_add_ons_property = cognito.CfnUserPool.UserPoolAddOnsProperty(\n    advanced_security_mode=\"advancedSecurityMode\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nUserPoolAddOnsProperty userPoolAddOnsProperty = new UserPoolAddOnsProperty {\n    AdvancedSecurityMode = \"advancedSecurityMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUserPoolAddOnsProperty userPoolAddOnsProperty = UserPoolAddOnsProperty.builder()\n        .advancedSecurityMode(\"advancedSecurityMode\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userPoolAddOnsProperty: cognito.CfnUserPool.UserPoolAddOnsProperty = {\n  advancedSecurityMode: 'advancedSecurityMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.UserPoolAddOnsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolAddOnsProperty: cognito.CfnUserPool.UserPoolAddOnsProperty = {\n  advancedSecurityMode: 'advancedSecurityMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b10d5220a30bf167bbe1a57cfcb7bddc64cc0afc5e63da4e92e1becc75586618"
    },
    "eb2f8713d8283d937f42770d25979f45be2f0220858cc03603266232fa499357": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nusername_configuration_property = cognito.CfnUserPool.UsernameConfigurationProperty(\n    case_sensitive=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nUsernameConfigurationProperty usernameConfigurationProperty = new UsernameConfigurationProperty {\n    CaseSensitive = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUsernameConfigurationProperty usernameConfigurationProperty = UsernameConfigurationProperty.builder()\n        .caseSensitive(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst usernameConfigurationProperty: cognito.CfnUserPool.UsernameConfigurationProperty = {\n  caseSensitive: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.UsernameConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst usernameConfigurationProperty: cognito.CfnUserPool.UsernameConfigurationProperty = {\n  caseSensitive: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "38bb3a204a49fa730f8a30f65771fa481f5104076ecd900d41340efda5a62fb9"
    },
    "d107a1545063b667eb809251dad654a09178763a0fe46bee4c9ab5f8a58a4e2b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nverification_message_template_property = cognito.CfnUserPool.VerificationMessageTemplateProperty(\n    default_email_option=\"defaultEmailOption\",\n    email_message=\"emailMessage\",\n    email_message_by_link=\"emailMessageByLink\",\n    email_subject=\"emailSubject\",\n    email_subject_by_link=\"emailSubjectByLink\",\n    sms_message=\"smsMessage\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nVerificationMessageTemplateProperty verificationMessageTemplateProperty = new VerificationMessageTemplateProperty {\n    DefaultEmailOption = \"defaultEmailOption\",\n    EmailMessage = \"emailMessage\",\n    EmailMessageByLink = \"emailMessageByLink\",\n    EmailSubject = \"emailSubject\",\n    EmailSubjectByLink = \"emailSubjectByLink\",\n    SmsMessage = \"smsMessage\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nVerificationMessageTemplateProperty verificationMessageTemplateProperty = VerificationMessageTemplateProperty.builder()\n        .defaultEmailOption(\"defaultEmailOption\")\n        .emailMessage(\"emailMessage\")\n        .emailMessageByLink(\"emailMessageByLink\")\n        .emailSubject(\"emailSubject\")\n        .emailSubjectByLink(\"emailSubjectByLink\")\n        .smsMessage(\"smsMessage\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst verificationMessageTemplateProperty: cognito.CfnUserPool.VerificationMessageTemplateProperty = {\n  defaultEmailOption: 'defaultEmailOption',\n  emailMessage: 'emailMessage',\n  emailMessageByLink: 'emailMessageByLink',\n  emailSubject: 'emailSubject',\n  emailSubjectByLink: 'emailSubjectByLink',\n  smsMessage: 'smsMessage',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPool.VerificationMessageTemplateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst verificationMessageTemplateProperty: cognito.CfnUserPool.VerificationMessageTemplateProperty = {\n  defaultEmailOption: 'defaultEmailOption',\n  emailMessage: 'emailMessage',\n  emailMessageByLink: 'emailMessageByLink',\n  emailSubject: 'emailSubject',\n  emailSubjectByLink: 'emailSubjectByLink',\n  smsMessage: 'smsMessage',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "30feb630ea833edb56935d46eadfce83c95a62b00ddc6b229ed3334cdc2ffca6"
    },
    "6d1fae8d81be0b5d7992ba0a88e5b1d906106550d8a4ac31d0126c8145612c45": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cognito as cognito\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nfrom aws_cdk.core import App, CfnOutput, Stack\nfrom constructs import Construct\nimport aws_cdk.aws_elasticloadbalancingv2_actions as actions\n\nStack): lb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\nuser_pool = cognito.UserPool(self, \"UserPool\")\nuser_pool_client = cognito.UserPoolClient(self, \"Client\",\n    user_pool=user_pool,\n\n    # Required minimal configuration for use with an ELB\n    generate_secret=True,\n    auth_flows=cognito.AuthFlow(\n        user_password=True\n    ),\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.EMAIL],\n        callback_urls=[f\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\"\n        ]\n    )\n)\ncfn_client = user_pool_client.node.default_child\ncfn_client.add_property_override(\"RefreshTokenValidity\", 1)\ncfn_client.add_property_override(\"SupportedIdentityProviders\", [\"COGNITO\"])\n\nuser_pool_domain = cognito.UserPoolDomain(self, \"Domain\",\n    user_pool=user_pool,\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"test-cdk-prefix\"\n    )\n)\n\nlb.add_listener(\"Listener\",\n    port=443,\n    certificates=[certificate],\n    default_action=actions.AuthenticateCognitoAction(\n        user_pool=user_pool,\n        user_pool_client=user_pool_client,\n        user_pool_domain=user_pool_domain,\n        next=elbv2.ListenerAction.fixed_response(200,\n            content_type=\"text/plain\",\n            message_body=\"Authenticated\"\n        )\n    )\n)\n\nCfnOutput(self, \"DNS\",\n    value=lb.load_balancer_dns_name\n)\n\napp = App()\nCognitoStack(app, \"integ-cognito\")\napp.synth()",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Cognito;\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nusing Constructs;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions;\n\nCognitoStack : Stack\n{ApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = new UserPoolClient(this, \"Client\", new UserPoolClientProps {\n    UserPool = userPool,\n\n    // Required minimal configuration for use with an ELB\n    GenerateSecret = true,\n    AuthFlows = new AuthFlow {\n        UserPassword = true\n    },\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.EMAIL },\n        CallbackUrls = new [] { $\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\" }\n    }\n});\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.Node.DefaultChild;\ncfnClient.AddPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.AddPropertyOverride(\"SupportedIdentityProviders\", new [] { \"COGNITO\" });\n\nUserPoolDomain userPoolDomain = new UserPoolDomain(this, \"Domain\", new UserPoolDomainProps {\n    UserPool = userPool,\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"test-cdk-prefix\"\n    }\n});\n\nlb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 443,\n    Certificates = new [] { certificate },\n    DefaultAction = new AuthenticateCognitoAction(new AuthenticateCognitoActionProps {\n        UserPool = userPool,\n        UserPoolClient = userPoolClient,\n        UserPoolDomain = userPoolDomain,\n        Next = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n            ContentType = \"text/plain\",\n            MessageBody = \"Authenticated\"\n        })\n    })\n});\n\nnew CfnOutput(this, \"DNS\", new CfnOutputProps {\n    Value = lb.LoadBalancerDnsName\n});\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cognito.*;\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.App;\nimport software.amazon.awscdk.core.CfnOutput;\nimport software.amazon.awscdk.core.Stack;\nimport software.constructs.Construct;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.actions.*;\n\nCognitoStack extends Stack {CognitoStack(ApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = UserPoolClient.Builder.create(this, \"Client\")\n        .userPool(userPool)\n\n        // Required minimal configuration for use with an ELB\n        .generateSecret(true)\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .build())\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.EMAIL))\n                .callbackUrls(List.of(String.format(\"https://%s/oauth2/idpresponse\", lb.getLoadBalancerDnsName())))\n                .build())\n        .build();\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.getNode().getDefaultChild();\ncfnClient.addPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.addPropertyOverride(\"SupportedIdentityProviders\", List.of(\"COGNITO\"));\n\nUserPoolDomain userPoolDomain = UserPoolDomain.Builder.create(this, \"Domain\")\n        .userPool(userPool)\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"test-cdk-prefix\")\n                .build())\n        .build();\n\nlb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(443)\n        .certificates(List.of(certificate))\n        .defaultAction(AuthenticateCognitoAction.Builder.create()\n                .userPool(userPool)\n                .userPoolClient(userPoolClient)\n                .userPoolDomain(userPoolDomain)\n                .next(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                        .contentType(\"text/plain\")\n                        .messageBody(\"Authenticated\")\n                        .build()))\n                .build())\n        .build());\n\nCfnOutput.Builder.create(this, \"DNS\")\n        .value(lb.getLoadBalancerDnsName())\n        .build();\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.synth();",
          "version": "1"
        },
        "$": {
          "source": "    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AuthFlow",
        "@aws-cdk/aws-cognito.CfnUserPoolClient",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.IUserPoolClient",
        "@aws-cdk/aws-cognito.IUserPoolDomain",
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#EMAIL",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientProps",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomainProps",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoAction",
        "@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer#loadBalancerDnsName",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/core.App",
        "@aws-cdk/core.CfnOutput",
        "@aws-cdk/core.CfnOutputProps",
        "@aws-cdk/core.CfnResource#addPropertyOverride",
        "@aws-cdk/core.Construct#node",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "import * as cognito from '@aws-cdk/aws-cognito';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport { App, CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '../lib';\n\nclass CognitoStack extends Stack {\n\n  /// !hide\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Stack', {\n      maxAzs: 2,\n    });\n\n    const certificate: elbv2.IListenerCertificate = {\n      certificateArn: process.env.SELF_SIGNED_CERT_ARN ?? '',\n    };\n\n    /// !show\n    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();",
      "syntaxKindCounter": {
        "8": 3,
        "10": 19,
        "15": 1,
        "17": 1,
        "75": 78,
        "104": 5,
        "106": 4,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 11,
        "194": 17,
        "196": 5,
        "197": 8,
        "211": 1,
        "216": 1,
        "217": 1,
        "221": 1,
        "225": 6,
        "226": 6,
        "242": 6,
        "243": 6,
        "245": 1,
        "254": 6,
        "255": 6,
        "256": 4,
        "257": 2,
        "258": 4,
        "279": 1,
        "281": 18,
        "282": 6,
        "290": 1
      },
      "fqnsFingerprint": "0054c3312773569f88784f56e66a2d74c68f0d57ef014da3c8801b5095a21331"
    },
    "885820b60d7d3c28697138aadf684369a79236921c1cca4f5c1bd81294fc5ec8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nanalytics_configuration_property = cognito.CfnUserPoolClient.AnalyticsConfigurationProperty(\n    application_arn=\"applicationArn\",\n    application_id=\"applicationId\",\n    external_id=\"externalId\",\n    role_arn=\"roleArn\",\n    user_data_shared=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAnalyticsConfigurationProperty analyticsConfigurationProperty = new AnalyticsConfigurationProperty {\n    ApplicationArn = \"applicationArn\",\n    ApplicationId = \"applicationId\",\n    ExternalId = \"externalId\",\n    RoleArn = \"roleArn\",\n    UserDataShared = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAnalyticsConfigurationProperty analyticsConfigurationProperty = AnalyticsConfigurationProperty.builder()\n        .applicationArn(\"applicationArn\")\n        .applicationId(\"applicationId\")\n        .externalId(\"externalId\")\n        .roleArn(\"roleArn\")\n        .userDataShared(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst analyticsConfigurationProperty: cognito.CfnUserPoolClient.AnalyticsConfigurationProperty = {\n  applicationArn: 'applicationArn',\n  applicationId: 'applicationId',\n  externalId: 'externalId',\n  roleArn: 'roleArn',\n  userDataShared: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolClient.AnalyticsConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst analyticsConfigurationProperty: cognito.CfnUserPoolClient.AnalyticsConfigurationProperty = {\n  applicationArn: 'applicationArn',\n  applicationId: 'applicationId',\n  externalId: 'externalId',\n  roleArn: 'roleArn',\n  userDataShared: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "120bde24e8a4adc31518fd217e7d1fcf49ef2a9f9f10df9fdeee6f5dd411c252"
    },
    "2fde22cb58387bb87925639b6fc826b9a27e0bea785a49ec3b235fa803c3cedd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ntoken_validity_units_property = cognito.CfnUserPoolClient.TokenValidityUnitsProperty(\n    access_token=\"accessToken\",\n    id_token=\"idToken\",\n    refresh_token=\"refreshToken\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nTokenValidityUnitsProperty tokenValidityUnitsProperty = new TokenValidityUnitsProperty {\n    AccessToken = \"accessToken\",\n    IdToken = \"idToken\",\n    RefreshToken = \"refreshToken\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nTokenValidityUnitsProperty tokenValidityUnitsProperty = TokenValidityUnitsProperty.builder()\n        .accessToken(\"accessToken\")\n        .idToken(\"idToken\")\n        .refreshToken(\"refreshToken\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst tokenValidityUnitsProperty: cognito.CfnUserPoolClient.TokenValidityUnitsProperty = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  refreshToken: 'refreshToken',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolClient.TokenValidityUnitsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tokenValidityUnitsProperty: cognito.CfnUserPoolClient.TokenValidityUnitsProperty = {\n  accessToken: 'accessToken',\n  idToken: 'idToken',\n  refreshToken: 'refreshToken',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "7144ccbaabc781e1faa2d3fb8a553c280cface87c8c4aeb472839efa42b07ab7"
    },
    "2014baa51355326713a56e7a5ae43c84e22e41974ec7f734dfb53601b9fb5e41": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_client_props = cognito.CfnUserPoolClientProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    access_token_validity=123,\n    allowed_oAuth_flows=[\"allowedOAuthFlows\"],\n    allowed_oAuth_flows_user_pool_client=False,\n    allowed_oAuth_scopes=[\"allowedOAuthScopes\"],\n    analytics_configuration=cognito.CfnUserPoolClient.AnalyticsConfigurationProperty(\n        application_arn=\"applicationArn\",\n        application_id=\"applicationId\",\n        external_id=\"externalId\",\n        role_arn=\"roleArn\",\n        user_data_shared=False\n    ),\n    callback_ur_ls=[\"callbackUrLs\"],\n    client_name=\"clientName\",\n    default_redirect_uri=\"defaultRedirectUri\",\n    enable_token_revocation=False,\n    explicit_auth_flows=[\"explicitAuthFlows\"],\n    generate_secret=False,\n    id_token_validity=123,\n    logout_ur_ls=[\"logoutUrLs\"],\n    prevent_user_existence_errors=\"preventUserExistenceErrors\",\n    read_attributes=[\"readAttributes\"],\n    refresh_token_validity=123,\n    supported_identity_providers=[\"supportedIdentityProviders\"],\n    token_validity_units=cognito.CfnUserPoolClient.TokenValidityUnitsProperty(\n        access_token=\"accessToken\",\n        id_token=\"idToken\",\n        refresh_token=\"refreshToken\"\n    ),\n    write_attributes=[\"writeAttributes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolClientProps cfnUserPoolClientProps = new CfnUserPoolClientProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccessTokenValidity = 123,\n    AllowedOAuthFlows = new [] { \"allowedOAuthFlows\" },\n    AllowedOAuthFlowsUserPoolClient = false,\n    AllowedOAuthScopes = new [] { \"allowedOAuthScopes\" },\n    AnalyticsConfiguration = new AnalyticsConfigurationProperty {\n        ApplicationArn = \"applicationArn\",\n        ApplicationId = \"applicationId\",\n        ExternalId = \"externalId\",\n        RoleArn = \"roleArn\",\n        UserDataShared = false\n    },\n    CallbackUrLs = new [] { \"callbackUrLs\" },\n    ClientName = \"clientName\",\n    DefaultRedirectUri = \"defaultRedirectUri\",\n    EnableTokenRevocation = false,\n    ExplicitAuthFlows = new [] { \"explicitAuthFlows\" },\n    GenerateSecret = false,\n    IdTokenValidity = 123,\n    LogoutUrLs = new [] { \"logoutUrLs\" },\n    PreventUserExistenceErrors = \"preventUserExistenceErrors\",\n    ReadAttributes = new [] { \"readAttributes\" },\n    RefreshTokenValidity = 123,\n    SupportedIdentityProviders = new [] { \"supportedIdentityProviders\" },\n    TokenValidityUnits = new TokenValidityUnitsProperty {\n        AccessToken = \"accessToken\",\n        IdToken = \"idToken\",\n        RefreshToken = \"refreshToken\"\n    },\n    WriteAttributes = new [] { \"writeAttributes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolClientProps cfnUserPoolClientProps = CfnUserPoolClientProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accessTokenValidity(123)\n        .allowedOAuthFlows(List.of(\"allowedOAuthFlows\"))\n        .allowedOAuthFlowsUserPoolClient(false)\n        .allowedOAuthScopes(List.of(\"allowedOAuthScopes\"))\n        .analyticsConfiguration(AnalyticsConfigurationProperty.builder()\n                .applicationArn(\"applicationArn\")\n                .applicationId(\"applicationId\")\n                .externalId(\"externalId\")\n                .roleArn(\"roleArn\")\n                .userDataShared(false)\n                .build())\n        .callbackUrLs(List.of(\"callbackUrLs\"))\n        .clientName(\"clientName\")\n        .defaultRedirectUri(\"defaultRedirectUri\")\n        .enableTokenRevocation(false)\n        .explicitAuthFlows(List.of(\"explicitAuthFlows\"))\n        .generateSecret(false)\n        .idTokenValidity(123)\n        .logoutUrLs(List.of(\"logoutUrLs\"))\n        .preventUserExistenceErrors(\"preventUserExistenceErrors\")\n        .readAttributes(List.of(\"readAttributes\"))\n        .refreshTokenValidity(123)\n        .supportedIdentityProviders(List.of(\"supportedIdentityProviders\"))\n        .tokenValidityUnits(TokenValidityUnitsProperty.builder()\n                .accessToken(\"accessToken\")\n                .idToken(\"idToken\")\n                .refreshToken(\"refreshToken\")\n                .build())\n        .writeAttributes(List.of(\"writeAttributes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolClientProps: cognito.CfnUserPoolClientProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accessTokenValidity: 123,\n  allowedOAuthFlows: ['allowedOAuthFlows'],\n  allowedOAuthFlowsUserPoolClient: false,\n  allowedOAuthScopes: ['allowedOAuthScopes'],\n  analyticsConfiguration: {\n    applicationArn: 'applicationArn',\n    applicationId: 'applicationId',\n    externalId: 'externalId',\n    roleArn: 'roleArn',\n    userDataShared: false,\n  },\n  callbackUrLs: ['callbackUrLs'],\n  clientName: 'clientName',\n  defaultRedirectUri: 'defaultRedirectUri',\n  enableTokenRevocation: false,\n  explicitAuthFlows: ['explicitAuthFlows'],\n  generateSecret: false,\n  idTokenValidity: 123,\n  logoutUrLs: ['logoutUrLs'],\n  preventUserExistenceErrors: 'preventUserExistenceErrors',\n  readAttributes: ['readAttributes'],\n  refreshTokenValidity: 123,\n  supportedIdentityProviders: ['supportedIdentityProviders'],\n  tokenValidityUnits: {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    refreshToken: 'refreshToken',\n  },\n  writeAttributes: ['writeAttributes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolClientProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolClientProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolClientProps: cognito.CfnUserPoolClientProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accessTokenValidity: 123,\n  allowedOAuthFlows: ['allowedOAuthFlows'],\n  allowedOAuthFlowsUserPoolClient: false,\n  allowedOAuthScopes: ['allowedOAuthScopes'],\n  analyticsConfiguration: {\n    applicationArn: 'applicationArn',\n    applicationId: 'applicationId',\n    externalId: 'externalId',\n    roleArn: 'roleArn',\n    userDataShared: false,\n  },\n  callbackUrLs: ['callbackUrLs'],\n  clientName: 'clientName',\n  defaultRedirectUri: 'defaultRedirectUri',\n  enableTokenRevocation: false,\n  explicitAuthFlows: ['explicitAuthFlows'],\n  generateSecret: false,\n  idTokenValidity: 123,\n  logoutUrLs: ['logoutUrLs'],\n  preventUserExistenceErrors: 'preventUserExistenceErrors',\n  readAttributes: ['readAttributes'],\n  refreshTokenValidity: 123,\n  supportedIdentityProviders: ['supportedIdentityProviders'],\n  tokenValidityUnits: {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    refreshToken: 'refreshToken',\n  },\n  writeAttributes: ['writeAttributes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 20,
        "75": 32,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 8,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 28,
        "290": 1
      },
      "fqnsFingerprint": "1856be9dc941188735f9a6d097378128e79fe7a090e2358b3873b3db461f7b88"
    },
    "1dcc8b13c406d2d29defeef869340a67861bb6c6f76bb01a5db7433109467ec4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_domain = cognito.CfnUserPoolDomain(self, \"MyCfnUserPoolDomain\",\n    domain=\"domain\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    custom_domain_config=cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n        certificate_arn=\"certificateArn\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolDomain cfnUserPoolDomain = new CfnUserPoolDomain(this, \"MyCfnUserPoolDomain\", new CfnUserPoolDomainProps {\n    Domain = \"domain\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    CustomDomainConfig = new CustomDomainConfigTypeProperty {\n        CertificateArn = \"certificateArn\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolDomain cfnUserPoolDomain = CfnUserPoolDomain.Builder.create(this, \"MyCfnUserPoolDomain\")\n        .domain(\"domain\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .customDomainConfig(CustomDomainConfigTypeProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomain = new cognito.CfnUserPoolDomain(this, 'MyCfnUserPoolDomain', {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolDomain",
        "@aws-cdk/aws-cognito.CfnUserPoolDomainProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolDomain = new cognito.CfnUserPoolDomain(this, 'MyCfnUserPoolDomain', {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 8,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "94dcb13d245f0befa3f103ec28df83ed7f2102310f77139f5d000cd8ad50bf7e"
    },
    "e9a714e55f8ec0572aba7458b38e2df2815a0612f938ab5b34bb82487b8cbb11": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_domain_config_type_property = cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n    certificate_arn=\"certificateArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCustomDomainConfigTypeProperty customDomainConfigTypeProperty = new CustomDomainConfigTypeProperty {\n    CertificateArn = \"certificateArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomDomainConfigTypeProperty customDomainConfigTypeProperty = CustomDomainConfigTypeProperty.builder()\n        .certificateArn(\"certificateArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customDomainConfigTypeProperty: cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty = {\n  certificateArn: 'certificateArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customDomainConfigTypeProperty: cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty = {\n  certificateArn: 'certificateArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "0b9d6b8adb02d27445a89a957bbbac6d33550681af136f2ddf126180098efe63"
    },
    "62e15dc48589392a937c13b59412ed5802aaa55e57be5ea5fcf7a437aa02b419": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_domain_props = cognito.CfnUserPoolDomainProps(\n    domain=\"domain\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    custom_domain_config=cognito.CfnUserPoolDomain.CustomDomainConfigTypeProperty(\n        certificate_arn=\"certificateArn\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolDomainProps cfnUserPoolDomainProps = new CfnUserPoolDomainProps {\n    Domain = \"domain\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    CustomDomainConfig = new CustomDomainConfigTypeProperty {\n        CertificateArn = \"certificateArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolDomainProps cfnUserPoolDomainProps = CfnUserPoolDomainProps.builder()\n        .domain(\"domain\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .customDomainConfig(CustomDomainConfigTypeProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolDomainProps: cognito.CfnUserPoolDomainProps = {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolDomainProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolDomainProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolDomainProps: cognito.CfnUserPoolDomainProps = {\n  domain: 'domain',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  customDomainConfig: {\n    certificateArn: 'certificateArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "b9619815eadb9c24e01f12700eee5bd852f450477d7a89258fb1810a2da31a29"
    },
    "d4fc113c673432d9c88985f12a69b34c042aa95efb40b3b85e92bb97f6339f07": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_group = cognito.CfnUserPoolGroup(self, \"MyCfnUserPoolGroup\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    description=\"description\",\n    group_name=\"groupName\",\n    precedence=123,\n    role_arn=\"roleArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolGroup cfnUserPoolGroup = new CfnUserPoolGroup(this, \"MyCfnUserPoolGroup\", new CfnUserPoolGroupProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    GroupName = \"groupName\",\n    Precedence = 123,\n    RoleArn = \"roleArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolGroup cfnUserPoolGroup = CfnUserPoolGroup.Builder.create(this, \"MyCfnUserPoolGroup\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .groupName(\"groupName\")\n        .precedence(123)\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroup = new cognito.CfnUserPoolGroup(this, 'MyCfnUserPoolGroup', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolGroup",
        "@aws-cdk/aws-cognito.CfnUserPoolGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolGroup = new cognito.CfnUserPoolGroup(this, 'MyCfnUserPoolGroup', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "366b47d21b141b641b721cef274447b33a54c09e127e93bb3a563de283d53c67"
    },
    "2eb6161676b3e7b1719005cce803e2bb12d3cb8fba4e89f1b685b9e14e3973cc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_group_props = cognito.CfnUserPoolGroupProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    description=\"description\",\n    group_name=\"groupName\",\n    precedence=123,\n    role_arn=\"roleArn\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolGroupProps cfnUserPoolGroupProps = new CfnUserPoolGroupProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    GroupName = \"groupName\",\n    Precedence = 123,\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolGroupProps cfnUserPoolGroupProps = CfnUserPoolGroupProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .groupName(\"groupName\")\n        .precedence(123)\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolGroupProps: cognito.CfnUserPoolGroupProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolGroupProps: cognito.CfnUserPoolGroupProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  description: 'description',\n  groupName: 'groupName',\n  precedence: 123,\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "838103a20d3fb8da0ba0509410687ebbc18e5d3aba3013d0bc001fe9621dfed5"
    },
    "073defff906a6796564b6f6d7d1b2edd36e2812bb86342deccfa98f1fe497edb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# attribute_mapping is of type object\n# provider_details is of type object\n\ncfn_user_pool_identity_provider = cognito.CfnUserPoolIdentityProvider(self, \"MyCfnUserPoolIdentityProvider\",\n    provider_name=\"providerName\",\n    provider_type=\"providerType\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    attribute_mapping=attribute_mapping,\n    idp_identifiers=[\"idpIdentifiers\"],\n    provider_details=provider_details\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar attributeMapping;\nvar providerDetails;\n\nCfnUserPoolIdentityProvider cfnUserPoolIdentityProvider = new CfnUserPoolIdentityProvider(this, \"MyCfnUserPoolIdentityProvider\", new CfnUserPoolIdentityProviderProps {\n    ProviderName = \"providerName\",\n    ProviderType = \"providerType\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AttributeMapping = attributeMapping,\n    IdpIdentifiers = new [] { \"idpIdentifiers\" },\n    ProviderDetails = providerDetails\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject attributeMapping;\nObject providerDetails;\n\nCfnUserPoolIdentityProvider cfnUserPoolIdentityProvider = CfnUserPoolIdentityProvider.Builder.create(this, \"MyCfnUserPoolIdentityProvider\")\n        .providerName(\"providerName\")\n        .providerType(\"providerType\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .attributeMapping(attributeMapping)\n        .idpIdentifiers(List.of(\"idpIdentifiers\"))\n        .providerDetails(providerDetails)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProvider = new cognito.CfnUserPoolIdentityProvider(this, 'MyCfnUserPoolIdentityProvider', {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolIdentityProvider",
        "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolIdentityProvider = new cognito.CfnUserPoolIdentityProvider(this, 'MyCfnUserPoolIdentityProvider', {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 14,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "68b3c69049999d532b2885163143a8c052f3a9ff5b93d1b85d8a773f11d41db7"
    },
    "5e64c13f9b1fbb4be21dfb467dcc161198a4a0b9aa28a3146ff11d8568621fdd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# attribute_mapping is of type object\n# provider_details is of type object\n\ncfn_user_pool_identity_provider_props = cognito.CfnUserPoolIdentityProviderProps(\n    provider_name=\"providerName\",\n    provider_type=\"providerType\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    attribute_mapping=attribute_mapping,\n    idp_identifiers=[\"idpIdentifiers\"],\n    provider_details=provider_details\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar attributeMapping;\nvar providerDetails;\n\nCfnUserPoolIdentityProviderProps cfnUserPoolIdentityProviderProps = new CfnUserPoolIdentityProviderProps {\n    ProviderName = \"providerName\",\n    ProviderType = \"providerType\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AttributeMapping = attributeMapping,\n    IdpIdentifiers = new [] { \"idpIdentifiers\" },\n    ProviderDetails = providerDetails\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject attributeMapping;\nObject providerDetails;\n\nCfnUserPoolIdentityProviderProps cfnUserPoolIdentityProviderProps = CfnUserPoolIdentityProviderProps.builder()\n        .providerName(\"providerName\")\n        .providerType(\"providerType\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .attributeMapping(attributeMapping)\n        .idpIdentifiers(List.of(\"idpIdentifiers\"))\n        .providerDetails(providerDetails)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\nconst cfnUserPoolIdentityProviderProps: cognito.CfnUserPoolIdentityProviderProps = {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolIdentityProviderProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const attributeMapping: any;\ndeclare const providerDetails: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolIdentityProviderProps: cognito.CfnUserPoolIdentityProviderProps = {\n  providerName: 'providerName',\n  providerType: 'providerType',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  attributeMapping: attributeMapping,\n  idpIdentifiers: ['idpIdentifiers'],\n  providerDetails: providerDetails,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 14,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "cd86aaad58ac154f3ea37c5cdbca56a16a29d883e3b06bc710ebfae8373a3383"
    },
    "d58028f32dd6ab8885f14a38619cb43f830dfa2a354185edb1774b9b422fcb79": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# user_pool_tags is of type object\n\ncfn_user_pool_props = cognito.CfnUserPoolProps(\n    account_recovery_setting=cognito.CfnUserPool.AccountRecoverySettingProperty(\n        recovery_mechanisms=[cognito.CfnUserPool.RecoveryOptionProperty(\n            name=\"name\",\n            priority=123\n        )]\n    ),\n    admin_create_user_config=cognito.CfnUserPool.AdminCreateUserConfigProperty(\n        allow_admin_create_user_only=False,\n        invite_message_template=cognito.CfnUserPool.InviteMessageTemplateProperty(\n            email_message=\"emailMessage\",\n            email_subject=\"emailSubject\",\n            sms_message=\"smsMessage\"\n        ),\n        unused_account_validity_days=123\n    ),\n    alias_attributes=[\"aliasAttributes\"],\n    auto_verified_attributes=[\"autoVerifiedAttributes\"],\n    device_configuration=cognito.CfnUserPool.DeviceConfigurationProperty(\n        challenge_required_on_new_device=False,\n        device_only_remembered_on_user_prompt=False\n    ),\n    email_configuration=cognito.CfnUserPool.EmailConfigurationProperty(\n        configuration_set=\"configurationSet\",\n        email_sending_account=\"emailSendingAccount\",\n        from=\"from\",\n        reply_to_email_address=\"replyToEmailAddress\",\n        source_arn=\"sourceArn\"\n    ),\n    email_verification_message=\"emailVerificationMessage\",\n    email_verification_subject=\"emailVerificationSubject\",\n    enabled_mfas=[\"enabledMfas\"],\n    lambda_config=cognito.CfnUserPool.LambdaConfigProperty(\n        create_auth_challenge=\"createAuthChallenge\",\n        custom_email_sender=cognito.CfnUserPool.CustomEmailSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        custom_message=\"customMessage\",\n        custom_sms_sender=cognito.CfnUserPool.CustomSMSSenderProperty(\n            lambda_arn=\"lambdaArn\",\n            lambda_version=\"lambdaVersion\"\n        ),\n        define_auth_challenge=\"defineAuthChallenge\",\n        kms_key_id=\"kmsKeyId\",\n        post_authentication=\"postAuthentication\",\n        post_confirmation=\"postConfirmation\",\n        pre_authentication=\"preAuthentication\",\n        pre_sign_up=\"preSignUp\",\n        pre_token_generation=\"preTokenGeneration\",\n        user_migration=\"userMigration\",\n        verify_auth_challenge_response=\"verifyAuthChallengeResponse\"\n    ),\n    mfa_configuration=\"mfaConfiguration\",\n    policies=cognito.CfnUserPool.PoliciesProperty(\n        password_policy=cognito.CfnUserPool.PasswordPolicyProperty(\n            minimum_length=123,\n            require_lowercase=False,\n            require_numbers=False,\n            require_symbols=False,\n            require_uppercase=False,\n            temporary_password_validity_days=123\n        )\n    ),\n    schema=[cognito.CfnUserPool.SchemaAttributeProperty(\n        attribute_data_type=\"attributeDataType\",\n        developer_only_attribute=False,\n        mutable=False,\n        name=\"name\",\n        number_attribute_constraints=cognito.CfnUserPool.NumberAttributeConstraintsProperty(\n            max_value=\"maxValue\",\n            min_value=\"minValue\"\n        ),\n        required=False,\n        string_attribute_constraints=cognito.CfnUserPool.StringAttributeConstraintsProperty(\n            max_length=\"maxLength\",\n            min_length=\"minLength\"\n        )\n    )],\n    sms_authentication_message=\"smsAuthenticationMessage\",\n    sms_configuration=cognito.CfnUserPool.SmsConfigurationProperty(\n        external_id=\"externalId\",\n        sns_caller_arn=\"snsCallerArn\"\n    ),\n    sms_verification_message=\"smsVerificationMessage\",\n    username_attributes=[\"usernameAttributes\"],\n    username_configuration=cognito.CfnUserPool.UsernameConfigurationProperty(\n        case_sensitive=False\n    ),\n    user_pool_add_ons=cognito.CfnUserPool.UserPoolAddOnsProperty(\n        advanced_security_mode=\"advancedSecurityMode\"\n    ),\n    user_pool_name=\"userPoolName\",\n    user_pool_tags=user_pool_tags,\n    verification_message_template=cognito.CfnUserPool.VerificationMessageTemplateProperty(\n        default_email_option=\"defaultEmailOption\",\n        email_message=\"emailMessage\",\n        email_message_by_link=\"emailMessageByLink\",\n        email_subject=\"emailSubject\",\n        email_subject_by_link=\"emailSubjectByLink\",\n        sms_message=\"smsMessage\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar userPoolTags;\n\nCfnUserPoolProps cfnUserPoolProps = new CfnUserPoolProps {\n    AccountRecoverySetting = new AccountRecoverySettingProperty {\n        RecoveryMechanisms = new [] { new RecoveryOptionProperty {\n            Name = \"name\",\n            Priority = 123\n        } }\n    },\n    AdminCreateUserConfig = new AdminCreateUserConfigProperty {\n        AllowAdminCreateUserOnly = false,\n        InviteMessageTemplate = new InviteMessageTemplateProperty {\n            EmailMessage = \"emailMessage\",\n            EmailSubject = \"emailSubject\",\n            SmsMessage = \"smsMessage\"\n        },\n        UnusedAccountValidityDays = 123\n    },\n    AliasAttributes = new [] { \"aliasAttributes\" },\n    AutoVerifiedAttributes = new [] { \"autoVerifiedAttributes\" },\n    DeviceConfiguration = new DeviceConfigurationProperty {\n        ChallengeRequiredOnNewDevice = false,\n        DeviceOnlyRememberedOnUserPrompt = false\n    },\n    EmailConfiguration = new EmailConfigurationProperty {\n        ConfigurationSet = \"configurationSet\",\n        EmailSendingAccount = \"emailSendingAccount\",\n        From = \"from\",\n        ReplyToEmailAddress = \"replyToEmailAddress\",\n        SourceArn = \"sourceArn\"\n    },\n    EmailVerificationMessage = \"emailVerificationMessage\",\n    EmailVerificationSubject = \"emailVerificationSubject\",\n    EnabledMfas = new [] { \"enabledMfas\" },\n    LambdaConfig = new LambdaConfigProperty {\n        CreateAuthChallenge = \"createAuthChallenge\",\n        CustomEmailSender = new CustomEmailSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        CustomMessage = \"customMessage\",\n        CustomSmsSender = new CustomSMSSenderProperty {\n            LambdaArn = \"lambdaArn\",\n            LambdaVersion = \"lambdaVersion\"\n        },\n        DefineAuthChallenge = \"defineAuthChallenge\",\n        KmsKeyId = \"kmsKeyId\",\n        PostAuthentication = \"postAuthentication\",\n        PostConfirmation = \"postConfirmation\",\n        PreAuthentication = \"preAuthentication\",\n        PreSignUp = \"preSignUp\",\n        PreTokenGeneration = \"preTokenGeneration\",\n        UserMigration = \"userMigration\",\n        VerifyAuthChallengeResponse = \"verifyAuthChallengeResponse\"\n    },\n    MfaConfiguration = \"mfaConfiguration\",\n    Policies = new PoliciesProperty {\n        PasswordPolicy = new PasswordPolicyProperty {\n            MinimumLength = 123,\n            RequireLowercase = false,\n            RequireNumbers = false,\n            RequireSymbols = false,\n            RequireUppercase = false,\n            TemporaryPasswordValidityDays = 123\n        }\n    },\n    Schema = new [] { new SchemaAttributeProperty {\n        AttributeDataType = \"attributeDataType\",\n        DeveloperOnlyAttribute = false,\n        Mutable = false,\n        Name = \"name\",\n        NumberAttributeConstraints = new NumberAttributeConstraintsProperty {\n            MaxValue = \"maxValue\",\n            MinValue = \"minValue\"\n        },\n        Required = false,\n        StringAttributeConstraints = new StringAttributeConstraintsProperty {\n            MaxLength = \"maxLength\",\n            MinLength = \"minLength\"\n        }\n    } },\n    SmsAuthenticationMessage = \"smsAuthenticationMessage\",\n    SmsConfiguration = new SmsConfigurationProperty {\n        ExternalId = \"externalId\",\n        SnsCallerArn = \"snsCallerArn\"\n    },\n    SmsVerificationMessage = \"smsVerificationMessage\",\n    UsernameAttributes = new [] { \"usernameAttributes\" },\n    UsernameConfiguration = new UsernameConfigurationProperty {\n        CaseSensitive = false\n    },\n    UserPoolAddOns = new UserPoolAddOnsProperty {\n        AdvancedSecurityMode = \"advancedSecurityMode\"\n    },\n    UserPoolName = \"userPoolName\",\n    UserPoolTags = userPoolTags,\n    VerificationMessageTemplate = new VerificationMessageTemplateProperty {\n        DefaultEmailOption = \"defaultEmailOption\",\n        EmailMessage = \"emailMessage\",\n        EmailMessageByLink = \"emailMessageByLink\",\n        EmailSubject = \"emailSubject\",\n        EmailSubjectByLink = \"emailSubjectByLink\",\n        SmsMessage = \"smsMessage\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject userPoolTags;\n\nCfnUserPoolProps cfnUserPoolProps = CfnUserPoolProps.builder()\n        .accountRecoverySetting(AccountRecoverySettingProperty.builder()\n                .recoveryMechanisms(List.of(RecoveryOptionProperty.builder()\n                        .name(\"name\")\n                        .priority(123)\n                        .build()))\n                .build())\n        .adminCreateUserConfig(AdminCreateUserConfigProperty.builder()\n                .allowAdminCreateUserOnly(false)\n                .inviteMessageTemplate(InviteMessageTemplateProperty.builder()\n                        .emailMessage(\"emailMessage\")\n                        .emailSubject(\"emailSubject\")\n                        .smsMessage(\"smsMessage\")\n                        .build())\n                .unusedAccountValidityDays(123)\n                .build())\n        .aliasAttributes(List.of(\"aliasAttributes\"))\n        .autoVerifiedAttributes(List.of(\"autoVerifiedAttributes\"))\n        .deviceConfiguration(DeviceConfigurationProperty.builder()\n                .challengeRequiredOnNewDevice(false)\n                .deviceOnlyRememberedOnUserPrompt(false)\n                .build())\n        .emailConfiguration(EmailConfigurationProperty.builder()\n                .configurationSet(\"configurationSet\")\n                .emailSendingAccount(\"emailSendingAccount\")\n                .from(\"from\")\n                .replyToEmailAddress(\"replyToEmailAddress\")\n                .sourceArn(\"sourceArn\")\n                .build())\n        .emailVerificationMessage(\"emailVerificationMessage\")\n        .emailVerificationSubject(\"emailVerificationSubject\")\n        .enabledMfas(List.of(\"enabledMfas\"))\n        .lambdaConfig(LambdaConfigProperty.builder()\n                .createAuthChallenge(\"createAuthChallenge\")\n                .customEmailSender(CustomEmailSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .customMessage(\"customMessage\")\n                .customSmsSender(CustomSMSSenderProperty.builder()\n                        .lambdaArn(\"lambdaArn\")\n                        .lambdaVersion(\"lambdaVersion\")\n                        .build())\n                .defineAuthChallenge(\"defineAuthChallenge\")\n                .kmsKeyId(\"kmsKeyId\")\n                .postAuthentication(\"postAuthentication\")\n                .postConfirmation(\"postConfirmation\")\n                .preAuthentication(\"preAuthentication\")\n                .preSignUp(\"preSignUp\")\n                .preTokenGeneration(\"preTokenGeneration\")\n                .userMigration(\"userMigration\")\n                .verifyAuthChallengeResponse(\"verifyAuthChallengeResponse\")\n                .build())\n        .mfaConfiguration(\"mfaConfiguration\")\n        .policies(PoliciesProperty.builder()\n                .passwordPolicy(PasswordPolicyProperty.builder()\n                        .minimumLength(123)\n                        .requireLowercase(false)\n                        .requireNumbers(false)\n                        .requireSymbols(false)\n                        .requireUppercase(false)\n                        .temporaryPasswordValidityDays(123)\n                        .build())\n                .build())\n        .schema(List.of(SchemaAttributeProperty.builder()\n                .attributeDataType(\"attributeDataType\")\n                .developerOnlyAttribute(false)\n                .mutable(false)\n                .name(\"name\")\n                .numberAttributeConstraints(NumberAttributeConstraintsProperty.builder()\n                        .maxValue(\"maxValue\")\n                        .minValue(\"minValue\")\n                        .build())\n                .required(false)\n                .stringAttributeConstraints(StringAttributeConstraintsProperty.builder()\n                        .maxLength(\"maxLength\")\n                        .minLength(\"minLength\")\n                        .build())\n                .build()))\n        .smsAuthenticationMessage(\"smsAuthenticationMessage\")\n        .smsConfiguration(SmsConfigurationProperty.builder()\n                .externalId(\"externalId\")\n                .snsCallerArn(\"snsCallerArn\")\n                .build())\n        .smsVerificationMessage(\"smsVerificationMessage\")\n        .usernameAttributes(List.of(\"usernameAttributes\"))\n        .usernameConfiguration(UsernameConfigurationProperty.builder()\n                .caseSensitive(false)\n                .build())\n        .userPoolAddOns(UserPoolAddOnsProperty.builder()\n                .advancedSecurityMode(\"advancedSecurityMode\")\n                .build())\n        .userPoolName(\"userPoolName\")\n        .userPoolTags(userPoolTags)\n        .verificationMessageTemplate(VerificationMessageTemplateProperty.builder()\n                .defaultEmailOption(\"defaultEmailOption\")\n                .emailMessage(\"emailMessage\")\n                .emailMessageByLink(\"emailMessageByLink\")\n                .emailSubject(\"emailSubject\")\n                .emailSubjectByLink(\"emailSubjectByLink\")\n                .smsMessage(\"smsMessage\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\nconst cfnUserPoolProps: cognito.CfnUserPoolProps = {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const userPoolTags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolProps: cognito.CfnUserPoolProps = {\n  accountRecoverySetting: {\n    recoveryMechanisms: [{\n      name: 'name',\n      priority: 123,\n    }],\n  },\n  adminCreateUserConfig: {\n    allowAdminCreateUserOnly: false,\n    inviteMessageTemplate: {\n      emailMessage: 'emailMessage',\n      emailSubject: 'emailSubject',\n      smsMessage: 'smsMessage',\n    },\n    unusedAccountValidityDays: 123,\n  },\n  aliasAttributes: ['aliasAttributes'],\n  autoVerifiedAttributes: ['autoVerifiedAttributes'],\n  deviceConfiguration: {\n    challengeRequiredOnNewDevice: false,\n    deviceOnlyRememberedOnUserPrompt: false,\n  },\n  emailConfiguration: {\n    configurationSet: 'configurationSet',\n    emailSendingAccount: 'emailSendingAccount',\n    from: 'from',\n    replyToEmailAddress: 'replyToEmailAddress',\n    sourceArn: 'sourceArn',\n  },\n  emailVerificationMessage: 'emailVerificationMessage',\n  emailVerificationSubject: 'emailVerificationSubject',\n  enabledMfas: ['enabledMfas'],\n  lambdaConfig: {\n    createAuthChallenge: 'createAuthChallenge',\n    customEmailSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    customMessage: 'customMessage',\n    customSmsSender: {\n      lambdaArn: 'lambdaArn',\n      lambdaVersion: 'lambdaVersion',\n    },\n    defineAuthChallenge: 'defineAuthChallenge',\n    kmsKeyId: 'kmsKeyId',\n    postAuthentication: 'postAuthentication',\n    postConfirmation: 'postConfirmation',\n    preAuthentication: 'preAuthentication',\n    preSignUp: 'preSignUp',\n    preTokenGeneration: 'preTokenGeneration',\n    userMigration: 'userMigration',\n    verifyAuthChallengeResponse: 'verifyAuthChallengeResponse',\n  },\n  mfaConfiguration: 'mfaConfiguration',\n  policies: {\n    passwordPolicy: {\n      minimumLength: 123,\n      requireLowercase: false,\n      requireNumbers: false,\n      requireSymbols: false,\n      requireUppercase: false,\n      temporaryPasswordValidityDays: 123,\n    },\n  },\n  schema: [{\n    attributeDataType: 'attributeDataType',\n    developerOnlyAttribute: false,\n    mutable: false,\n    name: 'name',\n    numberAttributeConstraints: {\n      maxValue: 'maxValue',\n      minValue: 'minValue',\n    },\n    required: false,\n    stringAttributeConstraints: {\n      maxLength: 'maxLength',\n      minLength: 'minLength',\n    },\n  }],\n  smsAuthenticationMessage: 'smsAuthenticationMessage',\n  smsConfiguration: {\n    externalId: 'externalId',\n    snsCallerArn: 'snsCallerArn',\n  },\n  smsVerificationMessage: 'smsVerificationMessage',\n  usernameAttributes: ['usernameAttributes'],\n  usernameConfiguration: {\n    caseSensitive: false,\n  },\n  userPoolAddOns: {\n    advancedSecurityMode: 'advancedSecurityMode',\n  },\n  userPoolName: 'userPoolName',\n  userPoolTags: userPoolTags,\n  verificationMessageTemplate: {\n    defaultEmailOption: 'defaultEmailOption',\n    emailMessage: 'emailMessage',\n    emailMessageByLink: 'emailMessageByLink',\n    emailSubject: 'emailSubject',\n    emailSubjectByLink: 'emailSubjectByLink',\n    smsMessage: 'smsMessage',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 50,
        "75": 89,
        "91": 11,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 19,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 83,
        "290": 1
      },
      "fqnsFingerprint": "c77017a6da364e788cec0c53269977132035d6ab40db0d620cb75f6a243ba8e3"
    },
    "dbb2e8ecb6794a3b90035fcfb0eaa73228f571fcfeba2d48a1795cc0444116bd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_resource_server = cognito.CfnUserPoolResourceServer(self, \"MyCfnUserPoolResourceServer\",\n    identifier=\"identifier\",\n    name=\"name\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    scopes=[cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n        scope_description=\"scopeDescription\",\n        scope_name=\"scopeName\"\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolResourceServer cfnUserPoolResourceServer = new CfnUserPoolResourceServer(this, \"MyCfnUserPoolResourceServer\", new CfnUserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    Name = \"name\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Scopes = new [] { new ResourceServerScopeTypeProperty {\n        ScopeDescription = \"scopeDescription\",\n        ScopeName = \"scopeName\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolResourceServer cfnUserPoolResourceServer = CfnUserPoolResourceServer.Builder.create(this, \"MyCfnUserPoolResourceServer\")\n        .identifier(\"identifier\")\n        .name(\"name\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .scopes(List.of(ResourceServerScopeTypeProperty.builder()\n                .scopeDescription(\"scopeDescription\")\n                .scopeName(\"scopeName\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServer = new cognito.CfnUserPoolResourceServer(this, 'MyCfnUserPoolResourceServer', {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolResourceServer",
        "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolResourceServer = new cognito.CfnUserPoolResourceServer(this, 'MyCfnUserPoolResourceServer', {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "faea2259aea5413c5562a423853cd36efe404da610138932d1b25f1d5a48dfe3"
    },
    "4f099ce184d61b020b9095c40c3525e03bddefed1398a51fde7834ee1067a873": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nresource_server_scope_type_property = cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n    scope_description=\"scopeDescription\",\n    scope_name=\"scopeName\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nResourceServerScopeTypeProperty resourceServerScopeTypeProperty = new ResourceServerScopeTypeProperty {\n    ScopeDescription = \"scopeDescription\",\n    ScopeName = \"scopeName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScopeTypeProperty resourceServerScopeTypeProperty = ResourceServerScopeTypeProperty.builder()\n        .scopeDescription(\"scopeDescription\")\n        .scopeName(\"scopeName\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst resourceServerScopeTypeProperty: cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceServerScopeTypeProperty: cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "60c347c4210fe5b81429b59372271487f8eea2bde939a980400e5d9e3eb94618"
    },
    "d1276f573458b5d67a90dcee36c0199d5fd604955f3f0cb0b31004bbb795ff88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_resource_server_props = cognito.CfnUserPoolResourceServerProps(\n    identifier=\"identifier\",\n    name=\"name\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    scopes=[cognito.CfnUserPoolResourceServer.ResourceServerScopeTypeProperty(\n        scope_description=\"scopeDescription\",\n        scope_name=\"scopeName\"\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolResourceServerProps cfnUserPoolResourceServerProps = new CfnUserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    Name = \"name\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Scopes = new [] { new ResourceServerScopeTypeProperty {\n        ScopeDescription = \"scopeDescription\",\n        ScopeName = \"scopeName\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolResourceServerProps cfnUserPoolResourceServerProps = CfnUserPoolResourceServerProps.builder()\n        .identifier(\"identifier\")\n        .name(\"name\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .scopes(List.of(ResourceServerScopeTypeProperty.builder()\n                .scopeDescription(\"scopeDescription\")\n                .scopeName(\"scopeName\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolResourceServerProps: cognito.CfnUserPoolResourceServerProps = {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolResourceServerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolResourceServerProps: cognito.CfnUserPoolResourceServerProps = {\n  identifier: 'identifier',\n  name: 'name',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  scopes: [{\n    scopeDescription: 'scopeDescription',\n    scopeName: 'scopeName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "eb99d593247ed77386a0c8e967c2c32aa105967416098e53b702afdb75abfe3d"
    },
    "d456993781f382653b2731702a69a88b0622bcafc0ffebec3a1386df77976b6a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_risk_configuration_attachment = cognito.CfnUserPoolRiskConfigurationAttachment(self, \"MyCfnUserPoolRiskConfigurationAttachment\",\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    account_takeover_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n            high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            )\n        ),\n\n        # the properties below are optional\n        notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n            source_arn=\"sourceArn\",\n\n            # the properties below are optional\n            block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            from=\"from\",\n            mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            reply_to=\"replyTo\"\n        )\n    ),\n    compromised_credentials_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n            event_action=\"eventAction\"\n        ),\n\n        # the properties below are optional\n        event_filter=[\"eventFilter\"]\n    ),\n    risk_exception_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n        blocked_ip_range_list=[\"blockedIpRangeList\"],\n        skipped_ip_range_list=[\"skippedIpRangeList\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolRiskConfigurationAttachment cfnUserPoolRiskConfigurationAttachment = new CfnUserPoolRiskConfigurationAttachment(this, \"MyCfnUserPoolRiskConfigurationAttachment\", new CfnUserPoolRiskConfigurationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccountTakeoverRiskConfiguration = new AccountTakeoverRiskConfigurationTypeProperty {\n        Actions = new AccountTakeoverActionsTypeProperty {\n            HighAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            LowAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            MediumAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            }\n        },\n\n        // the properties below are optional\n        NotifyConfiguration = new NotifyConfigurationTypeProperty {\n            SourceArn = \"sourceArn\",\n\n            // the properties below are optional\n            BlockEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            From = \"from\",\n            MfaEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            NoActionEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            ReplyTo = \"replyTo\"\n        }\n    },\n    CompromisedCredentialsRiskConfiguration = new CompromisedCredentialsRiskConfigurationTypeProperty {\n        Actions = new CompromisedCredentialsActionsTypeProperty {\n            EventAction = \"eventAction\"\n        },\n\n        // the properties below are optional\n        EventFilter = new [] { \"eventFilter\" }\n    },\n    RiskExceptionConfiguration = new RiskExceptionConfigurationTypeProperty {\n        BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n        SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolRiskConfigurationAttachment cfnUserPoolRiskConfigurationAttachment = CfnUserPoolRiskConfigurationAttachment.Builder.create(this, \"MyCfnUserPoolRiskConfigurationAttachment\")\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationTypeProperty.builder()\n                .actions(AccountTakeoverActionsTypeProperty.builder()\n                        .highAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                        .sourceArn(\"sourceArn\")\n\n                        // the properties below are optional\n                        .blockEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .from(\"from\")\n                        .mfaEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .noActionEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .replyTo(\"replyTo\")\n                        .build())\n                .build())\n        .compromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n                .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .build())\n\n                // the properties below are optional\n                .eventFilter(List.of(\"eventFilter\"))\n                .build())\n        .riskExceptionConfiguration(RiskExceptionConfigurationTypeProperty.builder()\n                .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n                .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachment = new cognito.CfnUserPoolRiskConfigurationAttachment(this, 'MyCfnUserPoolRiskConfigurationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment",
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolRiskConfigurationAttachment = new cognito.CfnUserPoolRiskConfigurationAttachment(this, 'MyCfnUserPoolRiskConfigurationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 23,
        "75": 40,
        "91": 3,
        "104": 1,
        "192": 3,
        "193": 13,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "4e6c3bc759b215a85608a1f26103bf546edb287e142de1755e9a1f9e03ee47c9"
    },
    "572a372dd53331acf3e760276085ffafe55be27601a458425f10069b85979925": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_action_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n    event_action=\"eventAction\",\n    notify=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAccountTakeoverActionTypeProperty accountTakeoverActionTypeProperty = new AccountTakeoverActionTypeProperty {\n    EventAction = \"eventAction\",\n    Notify = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverActionTypeProperty accountTakeoverActionTypeProperty = AccountTakeoverActionTypeProperty.builder()\n        .eventAction(\"eventAction\")\n        .notify(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty = {\n  eventAction: 'eventAction',\n  notify: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverActionTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty = {\n  eventAction: 'eventAction',\n  notify: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ae9491cfff2c15fc29a5719c670c139b8075e33e7d513855065d35bc55f38540"
    },
    "5db4f96ad547706394fad08feca6e6f62066fbc3e6bbf132d3134280bbf9a082": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_actions_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n    high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    ),\n    low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    ),\n    medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n        event_action=\"eventAction\",\n        notify=False\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAccountTakeoverActionsTypeProperty accountTakeoverActionsTypeProperty = new AccountTakeoverActionsTypeProperty {\n    HighAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    },\n    LowAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    },\n    MediumAction = new AccountTakeoverActionTypeProperty {\n        EventAction = \"eventAction\",\n        Notify = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverActionsTypeProperty accountTakeoverActionsTypeProperty = AccountTakeoverActionsTypeProperty.builder()\n        .highAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .notify(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty = {\n  highAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  lowAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  mediumAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty = {\n  highAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  lowAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n  mediumAction: {\n    eventAction: 'eventAction',\n    notify: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "8610af6d6af95dd8fcc6a7604ee8efd8abdd7acf6d68929bef201ae4dc0a344e"
    },
    "3d05e1b7acc04f336efc2d061852ccd757995a01ef5aa16346348d4b04af482d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\naccount_takeover_risk_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n    actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n        high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        ),\n        low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        ),\n        medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n            event_action=\"eventAction\",\n            notify=False\n        )\n    ),\n\n    # the properties below are optional\n    notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n        source_arn=\"sourceArn\",\n\n        # the properties below are optional\n        block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        from=\"from\",\n        mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n            subject=\"subject\",\n\n            # the properties below are optional\n            html_body=\"htmlBody\",\n            text_body=\"textBody\"\n        ),\n        reply_to=\"replyTo\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAccountTakeoverRiskConfigurationTypeProperty accountTakeoverRiskConfigurationTypeProperty = new AccountTakeoverRiskConfigurationTypeProperty {\n    Actions = new AccountTakeoverActionsTypeProperty {\n        HighAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        },\n        LowAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        },\n        MediumAction = new AccountTakeoverActionTypeProperty {\n            EventAction = \"eventAction\",\n            Notify = false\n        }\n    },\n\n    // the properties below are optional\n    NotifyConfiguration = new NotifyConfigurationTypeProperty {\n        SourceArn = \"sourceArn\",\n\n        // the properties below are optional\n        BlockEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        From = \"from\",\n        MfaEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        NoActionEmail = new NotifyEmailTypeProperty {\n            Subject = \"subject\",\n\n            // the properties below are optional\n            HtmlBody = \"htmlBody\",\n            TextBody = \"textBody\"\n        },\n        ReplyTo = \"replyTo\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAccountTakeoverRiskConfigurationTypeProperty accountTakeoverRiskConfigurationTypeProperty = AccountTakeoverRiskConfigurationTypeProperty.builder()\n        .actions(AccountTakeoverActionsTypeProperty.builder()\n                .highAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .lowAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .notify(false)\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                .sourceArn(\"sourceArn\")\n\n                // the properties below are optional\n                .blockEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .from(\"from\")\n                .mfaEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .noActionEmail(NotifyEmailTypeProperty.builder()\n                        .subject(\"subject\")\n\n                        // the properties below are optional\n                        .htmlBody(\"htmlBody\")\n                        .textBody(\"textBody\")\n                        .build())\n                .replyTo(\"replyTo\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst accountTakeoverRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty = {\n  actions: {\n    highAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    lowAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    mediumAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n  },\n\n  // the properties below are optional\n  notifyConfiguration: {\n    sourceArn: 'sourceArn',\n\n    // the properties below are optional\n    blockEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    from: 'from',\n    mfaEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    noActionEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    replyTo: 'replyTo',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accountTakeoverRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty = {\n  actions: {\n    highAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    lowAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n    mediumAction: {\n      eventAction: 'eventAction',\n      notify: false,\n    },\n  },\n\n  // the properties below are optional\n  notifyConfiguration: {\n    sourceArn: 'sourceArn',\n\n    // the properties below are optional\n    blockEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    from: 'from',\n    mfaEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    noActionEmail: {\n      subject: 'subject',\n\n      // the properties below are optional\n      htmlBody: 'htmlBody',\n      textBody: 'textBody',\n    },\n    replyTo: 'replyTo',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 31,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "f079359a819de5aa7601d95d674b8845483badaeee56f158c5a11b23f025ea96"
    },
    "3b6ebab39586fa8bfe025f5ac8438988124af96b97548b4b87958e39f2dec075": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncompromised_credentials_actions_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n    event_action=\"eventAction\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCompromisedCredentialsActionsTypeProperty compromisedCredentialsActionsTypeProperty = new CompromisedCredentialsActionsTypeProperty {\n    EventAction = \"eventAction\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCompromisedCredentialsActionsTypeProperty compromisedCredentialsActionsTypeProperty = CompromisedCredentialsActionsTypeProperty.builder()\n        .eventAction(\"eventAction\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty = {\n  eventAction: 'eventAction',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst compromisedCredentialsActionsTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty = {\n  eventAction: 'eventAction',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "44188044503bda8c547eb2d1379995969558f256dcaf30738a2496c7097fc358"
    },
    "09a63de186975c0ae200ec4b47bffccffee11fda17e9f0256fc2f2f545d2cffc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncompromised_credentials_risk_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n    actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n        event_action=\"eventAction\"\n    ),\n\n    # the properties below are optional\n    event_filter=[\"eventFilter\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCompromisedCredentialsRiskConfigurationTypeProperty compromisedCredentialsRiskConfigurationTypeProperty = new CompromisedCredentialsRiskConfigurationTypeProperty {\n    Actions = new CompromisedCredentialsActionsTypeProperty {\n        EventAction = \"eventAction\"\n    },\n\n    // the properties below are optional\n    EventFilter = new [] { \"eventFilter\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCompromisedCredentialsRiskConfigurationTypeProperty compromisedCredentialsRiskConfigurationTypeProperty = CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n        .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                .eventAction(\"eventAction\")\n                .build())\n\n        // the properties below are optional\n        .eventFilter(List.of(\"eventFilter\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst compromisedCredentialsRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty = {\n  actions: {\n    eventAction: 'eventAction',\n  },\n\n  // the properties below are optional\n  eventFilter: ['eventFilter'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst compromisedCredentialsRiskConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty = {\n  actions: {\n    eventAction: 'eventAction',\n  },\n\n  // the properties below are optional\n  eventFilter: ['eventFilter'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "21f15a93ab6045e14ffe1b52c711e2a845803a99f6a770a65b9599a578b7eb0a"
    },
    "6cbc6197063a725da7a7cbc24bec5d6d153f7cf5b6fe08913358d39286cb8e97": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnotify_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n    source_arn=\"sourceArn\",\n\n    # the properties below are optional\n    block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    from=\"from\",\n    mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n        subject=\"subject\",\n\n        # the properties below are optional\n        html_body=\"htmlBody\",\n        text_body=\"textBody\"\n    ),\n    reply_to=\"replyTo\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nNotifyConfigurationTypeProperty notifyConfigurationTypeProperty = new NotifyConfigurationTypeProperty {\n    SourceArn = \"sourceArn\",\n\n    // the properties below are optional\n    BlockEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    From = \"from\",\n    MfaEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    NoActionEmail = new NotifyEmailTypeProperty {\n        Subject = \"subject\",\n\n        // the properties below are optional\n        HtmlBody = \"htmlBody\",\n        TextBody = \"textBody\"\n    },\n    ReplyTo = \"replyTo\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNotifyConfigurationTypeProperty notifyConfigurationTypeProperty = NotifyConfigurationTypeProperty.builder()\n        .sourceArn(\"sourceArn\")\n\n        // the properties below are optional\n        .blockEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .from(\"from\")\n        .mfaEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .noActionEmail(NotifyEmailTypeProperty.builder()\n                .subject(\"subject\")\n\n                // the properties below are optional\n                .htmlBody(\"htmlBody\")\n                .textBody(\"textBody\")\n                .build())\n        .replyTo(\"replyTo\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty = {\n  sourceArn: 'sourceArn',\n\n  // the properties below are optional\n  blockEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  from: 'from',\n  mfaEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  noActionEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  replyTo: 'replyTo',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notifyConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty = {\n  sourceArn: 'sourceArn',\n\n  // the properties below are optional\n  blockEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  from: 'from',\n  mfaEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  noActionEmail: {\n    subject: 'subject',\n\n    // the properties below are optional\n    htmlBody: 'htmlBody',\n    textBody: 'textBody',\n  },\n  replyTo: 'replyTo',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 20,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "b61b788ac2e57990612988e49b91bb5c9f715032d6e43c0688aa161c015fda63"
    },
    "9f008ce6844c60d39b2b9553809d35e0a41a4c8d60be66ac045f1860d1066fef": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnotify_email_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n    subject=\"subject\",\n\n    # the properties below are optional\n    html_body=\"htmlBody\",\n    text_body=\"textBody\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nNotifyEmailTypeProperty notifyEmailTypeProperty = new NotifyEmailTypeProperty {\n    Subject = \"subject\",\n\n    // the properties below are optional\n    HtmlBody = \"htmlBody\",\n    TextBody = \"textBody\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNotifyEmailTypeProperty notifyEmailTypeProperty = NotifyEmailTypeProperty.builder()\n        .subject(\"subject\")\n\n        // the properties below are optional\n        .htmlBody(\"htmlBody\")\n        .textBody(\"textBody\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst notifyEmailTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty = {\n  subject: 'subject',\n\n  // the properties below are optional\n  htmlBody: 'htmlBody',\n  textBody: 'textBody',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notifyEmailTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty = {\n  subject: 'subject',\n\n  // the properties below are optional\n  htmlBody: 'htmlBody',\n  textBody: 'textBody',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "3d3eee0723a5c00c46ef494a6c7c4de847b66cf350a85902133d9fe3ab48df51"
    },
    "01e4d09a47289b73cd9a32c16a3eb5805abb3bdf313f24fe305e45ffecf16a4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nrisk_exception_configuration_type_property = cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n    blocked_ip_range_list=[\"blockedIpRangeList\"],\n    skipped_ip_range_list=[\"skippedIpRangeList\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nRiskExceptionConfigurationTypeProperty riskExceptionConfigurationTypeProperty = new RiskExceptionConfigurationTypeProperty {\n    BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n    SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nRiskExceptionConfigurationTypeProperty riskExceptionConfigurationTypeProperty = RiskExceptionConfigurationTypeProperty.builder()\n        .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n        .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst riskExceptionConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty = {\n  blockedIpRangeList: ['blockedIpRangeList'],\n  skippedIpRangeList: ['skippedIpRangeList'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst riskExceptionConfigurationTypeProperty: cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty = {\n  blockedIpRangeList: ['blockedIpRangeList'],\n  skippedIpRangeList: ['skippedIpRangeList'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fb5275f3c6a4f5df2eb22d9ddff187405bfa763723cb51f16127afefe2ea6ef5"
    },
    "adc76306dfd1c71d145ab074027a871e7a8deae0a3523fa9d32c99ae45eec93d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_risk_configuration_attachment_props = cognito.CfnUserPoolRiskConfigurationAttachmentProps(\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    account_takeover_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionsTypeProperty(\n            high_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            low_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            ),\n            medium_action=cognito.CfnUserPoolRiskConfigurationAttachment.AccountTakeoverActionTypeProperty(\n                event_action=\"eventAction\",\n                notify=False\n            )\n        ),\n\n        # the properties below are optional\n        notify_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyConfigurationTypeProperty(\n            source_arn=\"sourceArn\",\n\n            # the properties below are optional\n            block_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            from=\"from\",\n            mfa_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            no_action_email=cognito.CfnUserPoolRiskConfigurationAttachment.NotifyEmailTypeProperty(\n                subject=\"subject\",\n\n                # the properties below are optional\n                html_body=\"htmlBody\",\n                text_body=\"textBody\"\n            ),\n            reply_to=\"replyTo\"\n        )\n    ),\n    compromised_credentials_risk_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsRiskConfigurationTypeProperty(\n        actions=cognito.CfnUserPoolRiskConfigurationAttachment.CompromisedCredentialsActionsTypeProperty(\n            event_action=\"eventAction\"\n        ),\n\n        # the properties below are optional\n        event_filter=[\"eventFilter\"]\n    ),\n    risk_exception_configuration=cognito.CfnUserPoolRiskConfigurationAttachment.RiskExceptionConfigurationTypeProperty(\n        blocked_ip_range_list=[\"blockedIpRangeList\"],\n        skipped_ip_range_list=[\"skippedIpRangeList\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolRiskConfigurationAttachmentProps cfnUserPoolRiskConfigurationAttachmentProps = new CfnUserPoolRiskConfigurationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    AccountTakeoverRiskConfiguration = new AccountTakeoverRiskConfigurationTypeProperty {\n        Actions = new AccountTakeoverActionsTypeProperty {\n            HighAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            LowAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            },\n            MediumAction = new AccountTakeoverActionTypeProperty {\n                EventAction = \"eventAction\",\n                Notify = false\n            }\n        },\n\n        // the properties below are optional\n        NotifyConfiguration = new NotifyConfigurationTypeProperty {\n            SourceArn = \"sourceArn\",\n\n            // the properties below are optional\n            BlockEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            From = \"from\",\n            MfaEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            NoActionEmail = new NotifyEmailTypeProperty {\n                Subject = \"subject\",\n\n                // the properties below are optional\n                HtmlBody = \"htmlBody\",\n                TextBody = \"textBody\"\n            },\n            ReplyTo = \"replyTo\"\n        }\n    },\n    CompromisedCredentialsRiskConfiguration = new CompromisedCredentialsRiskConfigurationTypeProperty {\n        Actions = new CompromisedCredentialsActionsTypeProperty {\n            EventAction = \"eventAction\"\n        },\n\n        // the properties below are optional\n        EventFilter = new [] { \"eventFilter\" }\n    },\n    RiskExceptionConfiguration = new RiskExceptionConfigurationTypeProperty {\n        BlockedIpRangeList = new [] { \"blockedIpRangeList\" },\n        SkippedIpRangeList = new [] { \"skippedIpRangeList\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolRiskConfigurationAttachmentProps cfnUserPoolRiskConfigurationAttachmentProps = CfnUserPoolRiskConfigurationAttachmentProps.builder()\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .accountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationTypeProperty.builder()\n                .actions(AccountTakeoverActionsTypeProperty.builder()\n                        .highAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .lowAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .mediumAction(AccountTakeoverActionTypeProperty.builder()\n                                .eventAction(\"eventAction\")\n                                .notify(false)\n                                .build())\n                        .build())\n\n                // the properties below are optional\n                .notifyConfiguration(NotifyConfigurationTypeProperty.builder()\n                        .sourceArn(\"sourceArn\")\n\n                        // the properties below are optional\n                        .blockEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .from(\"from\")\n                        .mfaEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .noActionEmail(NotifyEmailTypeProperty.builder()\n                                .subject(\"subject\")\n\n                                // the properties below are optional\n                                .htmlBody(\"htmlBody\")\n                                .textBody(\"textBody\")\n                                .build())\n                        .replyTo(\"replyTo\")\n                        .build())\n                .build())\n        .compromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationTypeProperty.builder()\n                .actions(CompromisedCredentialsActionsTypeProperty.builder()\n                        .eventAction(\"eventAction\")\n                        .build())\n\n                // the properties below are optional\n                .eventFilter(List.of(\"eventFilter\"))\n                .build())\n        .riskExceptionConfiguration(RiskExceptionConfigurationTypeProperty.builder()\n                .blockedIpRangeList(List.of(\"blockedIpRangeList\"))\n                .skippedIpRangeList(List.of(\"skippedIpRangeList\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolRiskConfigurationAttachmentProps: cognito.CfnUserPoolRiskConfigurationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolRiskConfigurationAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolRiskConfigurationAttachmentProps: cognito.CfnUserPoolRiskConfigurationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  accountTakeoverRiskConfiguration: {\n    actions: {\n      highAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      lowAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n      mediumAction: {\n        eventAction: 'eventAction',\n        notify: false,\n      },\n    },\n\n    // the properties below are optional\n    notifyConfiguration: {\n      sourceArn: 'sourceArn',\n\n      // the properties below are optional\n      blockEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      from: 'from',\n      mfaEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      noActionEmail: {\n        subject: 'subject',\n\n        // the properties below are optional\n        htmlBody: 'htmlBody',\n        textBody: 'textBody',\n      },\n      replyTo: 'replyTo',\n    },\n  },\n  compromisedCredentialsRiskConfiguration: {\n    actions: {\n      eventAction: 'eventAction',\n    },\n\n    // the properties below are optional\n    eventFilter: ['eventFilter'],\n  },\n  riskExceptionConfiguration: {\n    blockedIpRangeList: ['blockedIpRangeList'],\n    skippedIpRangeList: ['skippedIpRangeList'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 22,
        "75": 40,
        "91": 3,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "7267e9bd8fe94d28d7280840a6c30007d0951b53f91be05ac9a27ac396f50b46"
    },
    "d1e307c7efecb76426ccbcbd5075387b2169f49ab427098b08eb44e9f4a43217": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_uICustomization_attachment = cognito.CfnUserPoolUICustomizationAttachment(self, \"MyCfnUserPoolUICustomizationAttachment\",\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    css=\"css\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolUICustomizationAttachment cfnUserPoolUICustomizationAttachment = new CfnUserPoolUICustomizationAttachment(this, \"MyCfnUserPoolUICustomizationAttachment\", new CfnUserPoolUICustomizationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Css = \"css\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUICustomizationAttachment cfnUserPoolUICustomizationAttachment = CfnUserPoolUICustomizationAttachment.Builder.create(this, \"MyCfnUserPoolUICustomizationAttachment\")\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .css(\"css\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachment = new cognito.CfnUserPoolUICustomizationAttachment(this, 'MyCfnUserPoolUICustomizationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachment",
        "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUICustomizationAttachment = new cognito.CfnUserPoolUICustomizationAttachment(this, 'MyCfnUserPoolUICustomizationAttachment', {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3a2ddf0bb4476b65dfc01178cc2d6fa27bef41271b62e3156cd2b6a8cdc4fac"
    },
    "d8922692bc38792052ae246c6f2b45af4b9f6c50451b2fa1aae175efb78e2de2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_uICustomization_attachment_props = cognito.CfnUserPoolUICustomizationAttachmentProps(\n    client_id=\"clientId\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    css=\"css\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolUICustomizationAttachmentProps cfnUserPoolUICustomizationAttachmentProps = new CfnUserPoolUICustomizationAttachmentProps {\n    ClientId = \"clientId\",\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    Css = \"css\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUICustomizationAttachmentProps cfnUserPoolUICustomizationAttachmentProps = CfnUserPoolUICustomizationAttachmentProps.builder()\n        .clientId(\"clientId\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .css(\"css\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUICustomizationAttachmentProps: cognito.CfnUserPoolUICustomizationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUICustomizationAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUICustomizationAttachmentProps: cognito.CfnUserPoolUICustomizationAttachmentProps = {\n  clientId: 'clientId',\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  css: 'css',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5923214695483af8f87e9b25ef235d59fc23370f6a17a954e8208e163495a83d"
    },
    "f33dfdd8bbccc72c62ec4fae906a27edb407c5c33eeb7756f3247ab12e7bcfef": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# client_metadata is of type object\n\ncfn_user_pool_user = cognito.CfnUserPoolUser(self, \"MyCfnUserPoolUser\",\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    client_metadata=client_metadata,\n    desired_delivery_mediums=[\"desiredDeliveryMediums\"],\n    force_alias_creation=False,\n    message_action=\"messageAction\",\n    user_attributes=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    username=\"username\",\n    validation_data=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar clientMetadata;\n\nCfnUserPoolUser cfnUserPoolUser = new CfnUserPoolUser(this, \"MyCfnUserPoolUser\", new CfnUserPoolUserProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    ClientMetadata = clientMetadata,\n    DesiredDeliveryMediums = new [] { \"desiredDeliveryMediums\" },\n    ForceAliasCreation = false,\n    MessageAction = \"messageAction\",\n    UserAttributes = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Username = \"username\",\n    ValidationData = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject clientMetadata;\n\nCfnUserPoolUser cfnUserPoolUser = CfnUserPoolUser.Builder.create(this, \"MyCfnUserPoolUser\")\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .clientMetadata(clientMetadata)\n        .desiredDeliveryMediums(List.of(\"desiredDeliveryMediums\"))\n        .forceAliasCreation(false)\n        .messageAction(\"messageAction\")\n        .userAttributes(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .validationData(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUser = new cognito.CfnUserPoolUser(this, 'MyCfnUserPoolUser', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUser",
        "@aws-cdk/aws-cognito.CfnUserPoolUserProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUser = new cognito.CfnUserPoolUser(this, 'MyCfnUserPoolUser', {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 18,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 3,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "88c846ade19099395e1f4fc053e37b4d213ffe94fa71e52af749bcbc5e1228a3"
    },
    "798481bd27b62aa26264e339bc14d3d22a3a84f94138c177c732fb011236ef62": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nattribute_type_property = cognito.CfnUserPoolUser.AttributeTypeProperty(\n    name=\"name\",\n    value=\"value\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nAttributeTypeProperty attributeTypeProperty = new AttributeTypeProperty {\n    Name = \"name\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nAttributeTypeProperty attributeTypeProperty = AttributeTypeProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst attributeTypeProperty: cognito.CfnUserPoolUser.AttributeTypeProperty = {\n  name: 'name',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUser.AttributeTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attributeTypeProperty: cognito.CfnUserPoolUser.AttributeTypeProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d5deb480bcf7024e5a9e530bef4ce4e29a115d98be1afdc33c4d142986a93f38"
    },
    "1a387bc467623c109dd4c6885c58b01c13b2aaa015dda58d19a36d1870d2975b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# client_metadata is of type object\n\ncfn_user_pool_user_props = cognito.CfnUserPoolUserProps(\n    user_pool_id=\"userPoolId\",\n\n    # the properties below are optional\n    client_metadata=client_metadata,\n    desired_delivery_mediums=[\"desiredDeliveryMediums\"],\n    force_alias_creation=False,\n    message_action=\"messageAction\",\n    user_attributes=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    username=\"username\",\n    validation_data=[cognito.CfnUserPoolUser.AttributeTypeProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nvar clientMetadata;\n\nCfnUserPoolUserProps cfnUserPoolUserProps = new CfnUserPoolUserProps {\n    UserPoolId = \"userPoolId\",\n\n    // the properties below are optional\n    ClientMetadata = clientMetadata,\n    DesiredDeliveryMediums = new [] { \"desiredDeliveryMediums\" },\n    ForceAliasCreation = false,\n    MessageAction = \"messageAction\",\n    UserAttributes = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Username = \"username\",\n    ValidationData = new [] { new AttributeTypeProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nObject clientMetadata;\n\nCfnUserPoolUserProps cfnUserPoolUserProps = CfnUserPoolUserProps.builder()\n        .userPoolId(\"userPoolId\")\n\n        // the properties below are optional\n        .clientMetadata(clientMetadata)\n        .desiredDeliveryMediums(List.of(\"desiredDeliveryMediums\"))\n        .forceAliasCreation(false)\n        .messageAction(\"messageAction\")\n        .userAttributes(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .username(\"username\")\n        .validationData(List.of(AttributeTypeProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\nconst cfnUserPoolUserProps: cognito.CfnUserPoolUserProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUserProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const clientMetadata: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserProps: cognito.CfnUserPoolUserProps = {\n  userPoolId: 'userPoolId',\n\n  // the properties below are optional\n  clientMetadata: clientMetadata,\n  desiredDeliveryMediums: ['desiredDeliveryMediums'],\n  forceAliasCreation: false,\n  messageAction: 'messageAction',\n  userAttributes: [{\n    name: 'name',\n    value: 'value',\n  }],\n  username: 'username',\n  validationData: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 18,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "94ee8c6be7d233f57b30b6b27add54ef5156b0d5670a7cc95b789f7baf04b144"
    },
    "80da70bff66f9b7fade9c3d616a35b5695fed99f99945ae1e1505426f4f5bb4d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_user_to_group_attachment = cognito.CfnUserPoolUserToGroupAttachment(self, \"MyCfnUserPoolUserToGroupAttachment\",\n    group_name=\"groupName\",\n    username=\"username\",\n    user_pool_id=\"userPoolId\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolUserToGroupAttachment cfnUserPoolUserToGroupAttachment = new CfnUserPoolUserToGroupAttachment(this, \"MyCfnUserPoolUserToGroupAttachment\", new CfnUserPoolUserToGroupAttachmentProps {\n    GroupName = \"groupName\",\n    Username = \"username\",\n    UserPoolId = \"userPoolId\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUserToGroupAttachment cfnUserPoolUserToGroupAttachment = CfnUserPoolUserToGroupAttachment.Builder.create(this, \"MyCfnUserPoolUserToGroupAttachment\")\n        .groupName(\"groupName\")\n        .username(\"username\")\n        .userPoolId(\"userPoolId\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachment = new cognito.CfnUserPoolUserToGroupAttachment(this, 'MyCfnUserPoolUserToGroupAttachment', {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachment",
        "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserToGroupAttachment = new cognito.CfnUserPoolUserToGroupAttachment(this, 'MyCfnUserPoolUserToGroupAttachment', {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "612f577e25802b849d990c6d564faa29fef68861b0f023792c49d2f001128272"
    },
    "d5c62f146e5000d55dfa10e20001dc66b694d7fc105bd9227e84b53c1657e8c2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncfn_user_pool_user_to_group_attachment_props = cognito.CfnUserPoolUserToGroupAttachmentProps(\n    group_name=\"groupName\",\n    username=\"username\",\n    user_pool_id=\"userPoolId\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCfnUserPoolUserToGroupAttachmentProps cfnUserPoolUserToGroupAttachmentProps = new CfnUserPoolUserToGroupAttachmentProps {\n    GroupName = \"groupName\",\n    Username = \"username\",\n    UserPoolId = \"userPoolId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCfnUserPoolUserToGroupAttachmentProps cfnUserPoolUserToGroupAttachmentProps = CfnUserPoolUserToGroupAttachmentProps.builder()\n        .groupName(\"groupName\")\n        .username(\"username\")\n        .userPoolId(\"userPoolId\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst cfnUserPoolUserToGroupAttachmentProps: cognito.CfnUserPoolUserToGroupAttachmentProps = {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CfnUserPoolUserToGroupAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnUserPoolUserToGroupAttachmentProps: cognito.CfnUserPoolUserToGroupAttachmentProps = {\n  groupName: 'groupName',\n  username: 'username',\n  userPoolId: 'userPoolId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "30826491da17885a8d27892304b08ad2324badaf76bfa5786c42712c05921937"
    },
    "629cdf86f009d60dafe29a95ef52a1677eb04f49334249c3adca7c98dc629c2b": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nclient_write_attributes = (ClientAttributes()).with_standard_attributes(fullname=True, email=True).with_custom_attributes(\"favouritePizza\", \"favouriteBeverage\")\n\nclient_read_attributes = client_write_attributes.with_standard_attributes(email_verified=True).with_custom_attributes(\"pointsEarned\")\n\npool.add_client(\"app-client\",\n    # ...\n    read_attributes=client_read_attributes,\n    write_attributes=client_write_attributes\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar clientWriteAttributes = (new ClientAttributes()).WithStandardAttributes(new Struct { Fullname = true, Email = true }).WithCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nvar clientReadAttributes = clientWriteAttributes.WithStandardAttributes(new Struct { EmailVerified = true }).WithCustomAttributes(\"pointsEarned\");\n\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    ReadAttributes = clientReadAttributes,\n    WriteAttributes = clientWriteAttributes\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject clientWriteAttributes = (new ClientAttributes()).withStandardAttributes(Map.of(\"fullname\", true, \"email\", true)).withCustomAttributes(\"favouritePizza\", \"favouriteBeverage\");\n\nObject clientReadAttributes = clientWriteAttributes.withStandardAttributes(Map.of(\"emailVerified\", true)).withCustomAttributes(\"pointsEarned\");\n\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .readAttributes(clientReadAttributes)\n        .writeAttributes(clientWriteAttributes)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.ClientAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.ClientAttributes",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst clientWriteAttributes = (new ClientAttributes())\n  .withStandardAttributes({fullname: true, email: true})\n  .withCustomAttributes('favouritePizza', 'favouriteBeverage');\n\nconst clientReadAttributes = clientWriteAttributes\n  .withStandardAttributes({emailVerified: true})\n  .withCustomAttributes('pointsEarned');\n\npool.addClient('app-client', {\n  // ...\n  readAttributes: clientReadAttributes,\n  writeAttributes: clientWriteAttributes,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 20,
        "104": 1,
        "106": 3,
        "193": 3,
        "194": 6,
        "196": 5,
        "197": 2,
        "200": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "ed1dffc294be1f6164ecedb54d6c27a9ce5a35c37c2cba04f75a2036c8caf2a6"
    },
    "99a428335c5cb075b776b6e694c08399ab3e6e1d9c21c0f017094a40febb649a": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nstring certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CognitoDomainOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-certificatemanager.Certificate",
        "@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn",
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.CustomDomainOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 19,
        "104": 2,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 1,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "f50038c17d5e27aa3e01164b7d3d649280bf1e9883fabb60abae6e3a2c227c04"
    },
    "278c95a93456005e1344d5e9e9ecbf49224f359b6a439794f5136a9e700fcfca": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\ncustom_attribute_config = cognito.CustomAttributeConfig(\n    data_type=\"dataType\",\n\n    # the properties below are optional\n    mutable=False,\n    number_constraints=cognito.NumberAttributeConstraints(\n        max=123,\n        min=123\n    ),\n    string_constraints=cognito.StringAttributeConstraints(\n        max_len=123,\n        min_len=123\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nCustomAttributeConfig customAttributeConfig = new CustomAttributeConfig {\n    DataType = \"dataType\",\n\n    // the properties below are optional\n    Mutable = false,\n    NumberConstraints = new NumberAttributeConstraints {\n        Max = 123,\n        Min = 123\n    },\n    StringConstraints = new StringAttributeConstraints {\n        MaxLen = 123,\n        MinLen = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nCustomAttributeConfig customAttributeConfig = CustomAttributeConfig.builder()\n        .dataType(\"dataType\")\n\n        // the properties below are optional\n        .mutable(false)\n        .numberConstraints(NumberAttributeConstraints.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .stringConstraints(StringAttributeConstraints.builder()\n                .maxLen(123)\n                .minLen(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst customAttributeConfig: cognito.CustomAttributeConfig = {\n  dataType: 'dataType',\n\n  // the properties below are optional\n  mutable: false,\n  numberConstraints: {\n    max: 123,\n    min: 123,\n  },\n  stringConstraints: {\n    maxLen: 123,\n    minLen: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CustomAttributeConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.CustomAttributeConfig",
        "@aws-cdk/aws-cognito.NumberAttributeConstraints",
        "@aws-cdk/aws-cognito.StringAttributeConstraints"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customAttributeConfig: cognito.CustomAttributeConfig = {\n  dataType: 'dataType',\n\n  // the properties below are optional\n  mutable: false,\n  numberConstraints: {\n    max: 123,\n    min: 123,\n  },\n  stringConstraints: {\n    maxLen: 123,\n    minLen: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 2,
        "75": 12,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "0c9502eb4dc07c976ac56ab74cef1ff2ce47d1d255ea28018b958a792d963fea"
    },
    "d7cd60533cbb0d21e798b62788d3843864893321404a6a27646fed98701192e5": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CustomAttributeProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "eddaad9e79c56c225f1eec7e2c874a9b52b56c8cc3559e0d45a0a352961d77c8": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nstring certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.CustomDomainOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-certificatemanager.Certificate",
        "@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn",
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.CustomDomainOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 19,
        "104": 2,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 1,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "f50038c17d5e27aa3e01164b7d3d649280bf1e9883fabb60abae6e3a2c227c04"
    },
    "019931aae2bac8aa5985b122c6a41444498fd7f92308a51163f463c26b50ba37": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.DateTimeAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "8304d734b31de6c1f5964d64d420fd0a6a47b0ad3a5ba37a9ef744d6e35f68a5": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    device_tracking=cognito.DeviceTracking(\n        challenge_required_on_new_device=True,\n        device_only_remembered_on_user_prompt=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    DeviceTracking = new DeviceTracking {\n        ChallengeRequiredOnNewDevice = true,\n        DeviceOnlyRememberedOnUserPrompt = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .deviceTracking(DeviceTracking.builder()\n                .challengeRequiredOnNewDevice(true)\n                .deviceOnlyRememberedOnUserPrompt(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.DeviceTracking"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.DeviceTracking",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  deviceTracking: {\n    challengeRequiredOnNewDevice: true,\n    deviceOnlyRememberedOnUserPrompt: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "118f335474748bfc9f7b95e28c44695d5c821d2d8cd51c5bf54458188a647a75"
    },
    "88ba4874ce590f8f09b34005fefdb6581c4a4db2133412099dad95d62ff36caa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nemail_settings = cognito.EmailSettings(\n    from=\"from\",\n    reply_to=\"replyTo\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nEmailSettings emailSettings = new EmailSettings {\n    From = \"from\",\n    ReplyTo = \"replyTo\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nEmailSettings emailSettings = EmailSettings.builder()\n        .from(\"from\")\n        .replyTo(\"replyTo\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst emailSettings: cognito.EmailSettings = {\n  from: 'from',\n  replyTo: 'replyTo',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.EmailSettings"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.EmailSettings"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst emailSettings: cognito.EmailSettings = {\n  from: 'from',\n  replyTo: 'replyTo',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "98064c88ffaed000fe49f4be3293b287f2703b1a80066d779e3e903e8d57b0aa"
    },
    "fdd3103ad9540e79dec10f5e3c53b50c5c32f2cfbbb10a1b58c72396caf84e83": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.Mfa"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.Mfa",
        "@aws-cdk/aws-cognito.Mfa#REQUIRED",
        "@aws-cdk/aws-cognito.MfaSecondFactor",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "99bb95d64f752a1da9200782f1406012787c8a9cfce7ffdebfea47397266e710"
    },
    "2b78e91ee991e8263c3aab36e1c855b744a6c57542adf25931fde028d62c5850": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    mfa=cognito.Mfa.REQUIRED,\n    mfa_second_factor=cognito.MfaSecondFactor(\n        sms=True,\n        otp=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    Mfa = Mfa.REQUIRED,\n    MfaSecondFactor = new MfaSecondFactor {\n        Sms = true,\n        Otp = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .mfa(Mfa.REQUIRED)\n        .mfaSecondFactor(MfaSecondFactor.builder()\n                .sms(true)\n                .otp(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.MfaSecondFactor"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.Mfa",
        "@aws-cdk/aws-cognito.Mfa#REQUIRED",
        "@aws-cdk/aws-cognito.MfaSecondFactor",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  mfa: cognito.Mfa.REQUIRED,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 9,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "99bb95d64f752a1da9200782f1406012787c8a9cfce7ffdebfea47397266e710"
    },
    "6095a15641c15d3f4cada2c8f3f85cc2f22c010bab041786121d0ea63c1963b1": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.NumberAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "4014a60c5b6d1de85c3fcb9bc41947d7fe0a4ce4b6955f9e5b31ac5026d4ec88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nnumber_attribute_constraints = cognito.NumberAttributeConstraints(\n    max=123,\n    min=123\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nNumberAttributeConstraints numberAttributeConstraints = new NumberAttributeConstraints {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nNumberAttributeConstraints numberAttributeConstraints = NumberAttributeConstraints.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst numberAttributeConstraints: cognito.NumberAttributeConstraints = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.NumberAttributeConstraints"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.NumberAttributeConstraints"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst numberAttributeConstraints: cognito.NumberAttributeConstraints = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "260779f8300f2f6faf52364ca5dbd1089a157f21078af03ff98586b9d3a94355"
    },
    "25fb102ad31d31ff34ccd8340615550617b7e51cb5f04f78871855ee5cda08e4": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.NumberAttributeProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "f697b88ba03b638f222955dd63e16c313bca8c62bca504a4422b0de305f65d76": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nUserPoolClient client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nUserPoolDomain domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nstring signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.OAuthFlows"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.SignInUrlOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#signInUrl",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 18,
        "104": 1,
        "106": 1,
        "192": 1,
        "193": 6,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 5
      },
      "fqnsFingerprint": "bc007ac1484b33c61c153569b8ff4cae3b4d5579bb5b9e32454d67a22ae382cd"
    },
    "aab96ea8457f94b1d3d5ee186ced3e9d1be3fa7ef8c51043fc9e5df69eb675f0": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.OAuthScope"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#OPENID",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "104": 1,
        "106": 1,
        "192": 3,
        "193": 3,
        "194": 4,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6
      },
      "fqnsFingerprint": "e8d32971eddb684aa306437a9aa1ca38ec4ce8b69e2c975e2f494cb933f5e8cd"
    },
    "890fe5cf9fcfa160929287cda35ac94e57e016db944d94fcc812f39884c6dcc9": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new Struct { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new Struct { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nUserPoolResourceServer userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nUserPoolClient readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nUserPoolClient fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nObject fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.OAuthSettings"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolResourceServer",
        "@aws-cdk/aws-cognito.UserPoolResourceServerOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 36,
        "104": 1,
        "192": 3,
        "193": 7,
        "194": 6,
        "196": 5,
        "197": 3,
        "225": 6,
        "242": 6,
        "243": 6,
        "281": 10
      },
      "fqnsFingerprint": "ac9eacb517b406a7469c1b794a28d12a234c7f5f81e83789d1a71b89e72c9862"
    },
    "3ee493f06a67dfb23199b0748c7c6f96cc4f04efbe935e071913c1f131ff93e7": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    password_policy=cognito.PasswordPolicy(\n        min_length=12,\n        require_lowercase=True,\n        require_uppercase=True,\n        require_digits=True,\n        require_symbols=True,\n        temp_password_validity=Duration.days(3)\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    PasswordPolicy = new PasswordPolicy {\n        MinLength = 12,\n        RequireLowercase = true,\n        RequireUppercase = true,\n        RequireDigits = true,\n        RequireSymbols = true,\n        TempPasswordValidity = Duration.Days(3)\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .passwordPolicy(PasswordPolicy.builder()\n                .minLength(12)\n                .requireLowercase(true)\n                .requireUppercase(true)\n                .requireDigits(true)\n                .requireSymbols(true)\n                .tempPasswordValidity(Duration.days(3))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.PasswordPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.PasswordPolicy",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  passwordPolicy: {\n    minLength: 12,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireDigits: true,\n    requireSymbols: true,\n    tempPasswordValidity: Duration.days(3),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 11,
        "104": 1,
        "106": 4,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "8b114497cf9500200a0cc84da4d3c6c3f329f632654375e4204c798e5c543925"
    },
    "5f169899de5306a2234ce1ac99a84b8af86de41820fc37776b6b9899f7c2bf63": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"Pool\")\n\ncognito.UserPoolIdentityProviderAmazon(self, \"Amazon\",\n    client_id=\"amzn-client-id\",\n    client_secret=\"amzn-client-secret\",\n    user_pool=userpool,\n    attribute_mapping=cognito.AttributeMapping(\n        email=cognito.ProviderAttribute.AMAZON_EMAIL,\n        website=cognito.ProviderAttribute.other(\"url\"),  # use other() when an attribute is not pre-defined in the CDK\n        custom={\n            # custom user pool attributes go here\n            \"unique_id\": cognito.ProviderAttribute.AMAZON_USER_ID\n        }\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nnew UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps {\n    ClientId = \"amzn-client-id\",\n    ClientSecret = \"amzn-client-secret\",\n    UserPool = userpool,\n    AttributeMapping = new AttributeMapping {\n        Email = ProviderAttribute.AMAZON_EMAIL,\n        Website = ProviderAttribute.Other(\"url\"),  // use other() when an attribute is not pre-defined in the CDK\n        Custom = new Dictionary<string, ProviderAttribute> {\n            // custom user pool attributes go here\n            { \"uniqueId\", ProviderAttribute.AMAZON_USER_ID }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = new UserPool(this, \"Pool\");\n\nUserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\")\n        .clientId(\"amzn-client-id\")\n        .clientSecret(\"amzn-client-secret\")\n        .userPool(userpool)\n        .attributeMapping(AttributeMapping.builder()\n                .email(ProviderAttribute.AMAZON_EMAIL)\n                .website(ProviderAttribute.other(\"url\")) // use other() when an attribute is not pre-defined in the CDK\n                .custom(Map.of(\n                        // custom user pool attributes go here\n                        \"uniqueId\", ProviderAttribute.AMAZON_USER_ID))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.ProviderAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_EMAIL",
        "@aws-cdk/aws-cognito.ProviderAttribute#AMAZON_USER_ID",
        "@aws-cdk/aws-cognito.ProviderAttribute#other",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'Pool');\n\nnew cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  userPool: userpool,\n  attributeMapping: {\n    email: cognito.ProviderAttribute.AMAZON_EMAIL,\n    website: cognito.ProviderAttribute.other('url'), // use other() when an attribute is not pre-defined in the CDK\n    custom: {\n      // custom user pool attributes go here\n      uniqueId: cognito.ProviderAttribute.AMAZON_USER_ID,\n    }\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 23,
        "104": 2,
        "193": 3,
        "194": 8,
        "196": 1,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 8
      },
      "fqnsFingerprint": "e61e378c9f6da7d8d712a0629664a425e943a76cf52b012a302441c3b0b4b2fd"
    },
    "3136206386777d83538f684005f7c3456b7e5b175352a5ba47cfe231371a4105": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nresource_server_scope = cognito.ResourceServerScope(\n    scope_description=\"scopeDescription\",\n    scope_name=\"scopeName\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nResourceServerScope resourceServerScope = new ResourceServerScope(new ResourceServerScopeProps {\n    ScopeDescription = \"scopeDescription\",\n    ScopeName = \"scopeName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScope resourceServerScope = ResourceServerScope.Builder.create()\n        .scopeDescription(\"scopeDescription\")\n        .scopeName(\"scopeName\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst resourceServerScope = new cognito.ResourceServerScope({\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.ResourceServerScope"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.ResourceServerScope",
        "@aws-cdk/aws-cognito.ResourceServerScopeProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceServerScope = new cognito.ResourceServerScope({\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "96af9f98fdc7ac85e1df8ace840d07c8877f75eedd7f00e0b2228ff51ec08bd8"
    },
    "2f5467e78f96781a05d66497b3227a3fa599dae5b60bb4162283fcfa4aee7625": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nresource_server_scope_props = cognito.ResourceServerScopeProps(\n    scope_description=\"scopeDescription\",\n    scope_name=\"scopeName\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nResourceServerScopeProps resourceServerScopeProps = new ResourceServerScopeProps {\n    ScopeDescription = \"scopeDescription\",\n    ScopeName = \"scopeName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScopeProps resourceServerScopeProps = ResourceServerScopeProps.builder()\n        .scopeDescription(\"scopeDescription\")\n        .scopeName(\"scopeName\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst resourceServerScopeProps: cognito.ResourceServerScopeProps = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.ResourceServerScopeProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.ResourceServerScopeProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst resourceServerScopeProps: cognito.ResourceServerScopeProps = {\n  scopeDescription: 'scopeDescription',\n  scopeName: 'scopeName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "80158c148bed70f7b6b270b09445fe1db6f0f15815fa1a69ec472b6b7a0097b1"
    },
    "ea49b106f2aa4d51ce16e2646476566e74745a0ce68fe3feba30e9a88e64c452": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    # ...\n    sign_in_aliases=cognito.SignInAliases(\n        username=True,\n        email=True\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    // ...\n    SignInAliases = new SignInAliases {\n        Username = true,\n        Email = true\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        // ...\n        .signInAliases(SignInAliases.builder()\n                .username(true)\n                .email(true)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.SignInAliases"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.SignInAliases",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  // ...\n  signInAliases: {\n    username: true,\n    email: true\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "104": 1,
        "106": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 3
      },
      "fqnsFingerprint": "5356dce90e7306045086bb5b0eb5858b9fa7305190d25e1bf821d4eefda9f632"
    },
    "157ee4166722611a5b67f7b3c2a67066aa15b78e6930bffddc4cb5472a095a9f": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nUserPoolClient client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nUserPoolDomain domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nstring signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.SignInUrlOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.SignInUrlOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#signInUrl",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 18,
        "104": 1,
        "106": 1,
        "192": 1,
        "193": 6,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 5
      },
      "fqnsFingerprint": "bc007ac1484b33c61c153569b8ff4cae3b4d5579bb5b9e32454d67a22ae382cd"
    },
    "dbb75d0532f5b87c77d650b42745cfb1a962db555da4542241e848d808221815": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StandardAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "1b6881c5a07b8ca785b30b0ebb7c3d79d23be3b33c36bf036dcfd1ad59fe82aa": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StandardAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "0d7332a7ccb5c32bcd8b482110b054d5ec2029a60d614fb59dfde0d1a4fc2d22": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nstandard_attributes_mask = cognito.StandardAttributesMask(\n    address=False,\n    birthdate=False,\n    email=False,\n    email_verified=False,\n    family_name=False,\n    fullname=False,\n    gender=False,\n    given_name=False,\n    last_update_time=False,\n    locale=False,\n    middle_name=False,\n    nickname=False,\n    phone_number=False,\n    phone_number_verified=False,\n    preferred_username=False,\n    profile_page=False,\n    profile_picture=False,\n    timezone=False,\n    website=False\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nStandardAttributesMask standardAttributesMask = new StandardAttributesMask {\n    Address = false,\n    Birthdate = false,\n    Email = false,\n    EmailVerified = false,\n    FamilyName = false,\n    Fullname = false,\n    Gender = false,\n    GivenName = false,\n    LastUpdateTime = false,\n    Locale = false,\n    MiddleName = false,\n    Nickname = false,\n    PhoneNumber = false,\n    PhoneNumberVerified = false,\n    PreferredUsername = false,\n    ProfilePage = false,\n    ProfilePicture = false,\n    Timezone = false,\n    Website = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nStandardAttributesMask standardAttributesMask = StandardAttributesMask.builder()\n        .address(false)\n        .birthdate(false)\n        .email(false)\n        .emailVerified(false)\n        .familyName(false)\n        .fullname(false)\n        .gender(false)\n        .givenName(false)\n        .lastUpdateTime(false)\n        .locale(false)\n        .middleName(false)\n        .nickname(false)\n        .phoneNumber(false)\n        .phoneNumberVerified(false)\n        .preferredUsername(false)\n        .profilePage(false)\n        .profilePicture(false)\n        .timezone(false)\n        .website(false)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst standardAttributesMask: cognito.StandardAttributesMask = {\n  address: false,\n  birthdate: false,\n  email: false,\n  emailVerified: false,\n  familyName: false,\n  fullname: false,\n  gender: false,\n  givenName: false,\n  lastUpdateTime: false,\n  locale: false,\n  middleName: false,\n  nickname: false,\n  phoneNumber: false,\n  phoneNumberVerified: false,\n  preferredUsername: false,\n  profilePage: false,\n  profilePicture: false,\n  timezone: false,\n  website: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StandardAttributesMask"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.StandardAttributesMask"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst standardAttributesMask: cognito.StandardAttributesMask = {\n  address: false,\n  birthdate: false,\n  email: false,\n  emailVerified: false,\n  familyName: false,\n  fullname: false,\n  gender: false,\n  givenName: false,\n  lastUpdateTime: false,\n  locale: false,\n  middleName: false,\n  nickname: false,\n  phoneNumber: false,\n  phoneNumberVerified: false,\n  preferredUsername: false,\n  profilePage: false,\n  profilePicture: false,\n  timezone: false,\n  website: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 23,
        "91": 19,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "783081c99c594a6513a401c5a91794950f23cc4673b97965a54e5957c576279a"
    },
    "dc2cb929e00274e1f42001f40a50488e27db43f76e1d4c956e4ae205c515f44a": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StringAttribute"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "fa9ee38cbeeeb386b8d36616b01d3a2e66d0506fcbb590c8623d8e7664a0c74e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nstring_attribute_constraints = cognito.StringAttributeConstraints(\n    max_len=123,\n    min_len=123\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nStringAttributeConstraints stringAttributeConstraints = new StringAttributeConstraints {\n    MaxLen = 123,\n    MinLen = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nStringAttributeConstraints stringAttributeConstraints = StringAttributeConstraints.builder()\n        .maxLen(123)\n        .minLen(123)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst stringAttributeConstraints: cognito.StringAttributeConstraints = {\n  maxLen: 123,\n  minLen: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StringAttributeConstraints"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.StringAttributeConstraints"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stringAttributeConstraints: cognito.StringAttributeConstraints = {\n  maxLen: 123,\n  minLen: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c69cf929c6caff4e8ef0a2389f11247fbfe74f0f22814502c41c74cc1f20c2e2"
    },
    "e43c896cb5096c72058508f16e27da579e31166aa1bcd38547fcdcafbcd04042": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    standard_attributes=cognito.StandardAttributes(\n        fullname=cognito.StandardAttribute(\n            required=True,\n            mutable=False\n        ),\n        address=cognito.StandardAttribute(\n            required=False,\n            mutable=True\n        )\n    ),\n    custom_attributes={\n        \"myappid\": cognito.StringAttribute(min_len=5, max_len=15, mutable=False),\n        \"callingcode\": cognito.NumberAttribute(min=1, max=3, mutable=True),\n        \"is_employee\": cognito.BooleanAttribute(mutable=True),\n        \"joined_on\": cognito.DateTimeAttribute()\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    StandardAttributes = new StandardAttributes {\n        Fullname = new StandardAttribute {\n            Required = true,\n            Mutable = false\n        },\n        Address = new StandardAttribute {\n            Required = false,\n            Mutable = true\n        }\n    },\n    CustomAttributes = new Dictionary<string, ICustomAttribute> {\n        { \"myappid\", new StringAttribute(new StringAttributeProps { MinLen = 5, MaxLen = 15, Mutable = false }) },\n        { \"callingcode\", new NumberAttribute(new NumberAttributeProps { Min = 1, Max = 3, Mutable = true }) },\n        { \"isEmployee\", new BooleanAttribute(new CustomAttributeProps { Mutable = true }) },\n        { \"joinedOn\", new DateTimeAttribute() }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .standardAttributes(StandardAttributes.builder()\n                .fullname(StandardAttribute.builder()\n                        .required(true)\n                        .mutable(false)\n                        .build())\n                .address(StandardAttribute.builder()\n                        .required(false)\n                        .mutable(true)\n                        .build())\n                .build())\n        .customAttributes(Map.of(\n                \"myappid\", StringAttribute.Builder.create().minLen(5).maxLen(15).mutable(false).build(),\n                \"callingcode\", NumberAttribute.Builder.create().min(1).max(3).mutable(true).build(),\n                \"isEmployee\", BooleanAttribute.Builder.create().mutable(true).build(),\n                \"joinedOn\", new DateTimeAttribute()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.StringAttributeProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.BooleanAttribute",
        "@aws-cdk/aws-cognito.CustomAttributeProps",
        "@aws-cdk/aws-cognito.DateTimeAttribute",
        "@aws-cdk/aws-cognito.ICustomAttribute",
        "@aws-cdk/aws-cognito.NumberAttribute",
        "@aws-cdk/aws-cognito.NumberAttributeProps",
        "@aws-cdk/aws-cognito.StandardAttribute",
        "@aws-cdk/aws-cognito.StandardAttributes",
        "@aws-cdk/aws-cognito.StringAttribute",
        "@aws-cdk/aws-cognito.StringAttributeProps",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: false,\n    },\n    address: {\n      required: false,\n      mutable: true,\n    },\n  },\n  customAttributes: {\n    'myappid': new cognito.StringAttribute({ minLen: 5, maxLen: 15, mutable: false }),\n    'callingcode': new cognito.NumberAttribute({ min: 1, max: 3, mutable: true }),\n    'isEmployee': new cognito.BooleanAttribute({ mutable: true }),\n    'joinedOn': new cognito.DateTimeAttribute(),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 5,
        "75": 25,
        "91": 3,
        "104": 1,
        "106": 4,
        "193": 8,
        "194": 5,
        "197": 5,
        "226": 1,
        "281": 19
      },
      "fqnsFingerprint": "f098e5bfcb85b23b1ae372cf7b74c4caf723e2d250562e2a0e11ea1bbcba2f95"
    },
    "6c4e0bf27f0f7358989224183b8345161c33d3ad4c133855c7032eae15477754": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    user_invitation=cognito.UserInvitationConfig(\n        email_subject=\"Invite to join our awesome app!\",\n        email_body=\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        sms_message=\"Hello {username}, your temporary password for our awesome app is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    UserInvitation = new UserInvitationConfig {\n        EmailSubject = \"Invite to join our awesome app!\",\n        EmailBody = \"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\",\n        SmsMessage = \"Hello {username}, your temporary password for our awesome app is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .userInvitation(UserInvitationConfig.builder()\n                .emailSubject(\"Invite to join our awesome app!\")\n                .emailBody(\"Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}\")\n                .smsMessage(\"Hello {username}, your temporary password for our awesome app is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}'\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserInvitationConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserInvitationConfig",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  userInvitation: {\n    emailSubject: 'Invite to join our awesome app!',\n    emailBody: 'Hello {username}, you have been invited to join our awesome app! Your temporary password is {####}',\n    smsMessage: 'Hello {username}, your temporary password for our awesome app is {####}'\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "8a987200f284d0bb76aae1581a9c5f69afc02eec89b4513acb43abbec546a8bc"
    },
    "d75e79c34fb46e8df993bd2b7b5cb3047dc11a62a2ae868e42bdc90ebd7bdc61": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPool"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#OPENID",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "104": 1,
        "106": 1,
        "192": 3,
        "193": 3,
        "194": 4,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6
      },
      "fqnsFingerprint": "e8d32971eddb684aa306437a9aa1ca38ec4ce8b69e2c975e2f494cb933f5e8cd"
    },
    "e33e3ce9deb8799ee92d8fe77007140f0a02201ecaa54bdb7a65d7ad42fadf9f": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nUserPoolClient client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nUserPoolDomain domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nstring signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolClient"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.SignInUrlOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#signInUrl",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 18,
        "104": 1,
        "106": 1,
        "192": 1,
        "193": 6,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 5
      },
      "fqnsFingerprint": "bc007ac1484b33c61c153569b8ff4cae3b4d5579bb5b9e32454d67a22ae382cd"
    },
    "c61820fa17bbfa17e7f7c2476b7b4600a23f13a7b6a524877fa2f4d3a47c5a34": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    # ...\n    supported_identity_providers=[cognito.UserPoolClientIdentityProvider.AMAZON, cognito.UserPoolClientIdentityProvider.COGNITO\n    ]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        // ...\n        .supportedIdentityProviders(List.of(UserPoolClientIdentityProvider.AMAZON, UserPoolClientIdentityProvider.COGNITO))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ]\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#COGNITO",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n    cognito.UserPoolClientIdentityProvider.COGNITO,\n  ]\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 6,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "8a363913908ffb478b4bb7ccde3598ea506309178eabc68e7d1ac183dcb19434"
    },
    "cb872c23fe1ddc8ee860bc8c2529bd5824d5ff89e0871a02afadd961f0752413": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\npool.add_client(\"app-client\",\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.OPENID],\n        callback_urls=[\"https://my-app-domain.com/welcome\"],\n        logout_urls=[\"https://my-app-domain.com/signin\"]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.AddClient(\"app-client\", new UserPoolClientOptions {\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.OPENID },\n        CallbackUrls = new [] { \"https://my-app-domain.com/welcome\" },\n        LogoutUrls = new [] { \"https://my-app-domain.com/signin\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\npool.addClient(\"app-client\", UserPoolClientOptions.builder()\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.OPENID))\n                .callbackUrls(List.of(\"https://my-app-domain.com/welcome\"))\n                .logoutUrls(List.of(\"https://my-app-domain.com/signin\"))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolClientOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#OPENID",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\npool.addClient('app-client', {\n  oAuth: {\n    flows: {\n      authorizationCodeGrant: true,\n    },\n    scopes: [ cognito.OAuthScope.OPENID ],\n    callbackUrls: [ 'https://my-app-domain.com/welcome' ],\n    logoutUrls: [ 'https://my-app-domain.com/signin' ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "104": 1,
        "106": 1,
        "192": 3,
        "193": 3,
        "194": 4,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6
      },
      "fqnsFingerprint": "e8d32971eddb684aa306437a9aa1ca38ec4ce8b69e2c975e2f494cb933f5e8cd"
    },
    "9eb8224ddf4614ea635634880062d06a630c53615b81a85056f7deccaac4cd1c": {
      "translations": {
        "python": {
          "source": "imported_pool = cognito.UserPool.from_user_pool_id(self, \"imported-pool\", \"us-east-1_oiuR12Abd\")\ncognito.UserPoolClient(self, \"customer-app-client\",\n    user_pool=imported_pool\n)",
          "version": "1"
        },
        "csharp": {
          "source": "IUserPool importedPool = UserPool.FromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nnew UserPoolClient(this, \"customer-app-client\", new UserPoolClientProps {\n    UserPool = importedPool\n});",
          "version": "1"
        },
        "java": {
          "source": "IUserPool importedPool = UserPool.fromUserPoolId(this, \"imported-pool\", \"us-east-1_oiuR12Abd\");\nUserPoolClient.Builder.create(this, \"customer-app-client\")\n        .userPool(importedPool)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolClientProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#fromUserPoolId",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst importedPool = cognito.UserPool.fromUserPoolId(this, 'imported-pool', 'us-east-1_oiuR12Abd');\nnew cognito.UserPoolClient(this, 'customer-app-client', {\n  userPool: importedPool\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "104": 2,
        "193": 1,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "18750dbcbfe2cdfd63c371aaf7233134bbe1caa836fc98f471177dc5ebdcf6f1"
    },
    "14b3e216c67c96b9e1d5d25d50bea43ce9bb93ec389f273a2aa0e4c9f46a2a6e": {
      "translations": {
        "python": {
          "source": "userpool = cognito.UserPool(self, \"UserPool\")\nclient = userpool.add_client(\"Client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            implicit_code_grant=True\n        ),\n        callback_urls=[\"https://myapp.com/home\", \"https://myapp.com/users\"\n        ]\n    )\n)\ndomain = userpool.add_domain(\"Domain\")\nsign_in_url = domain.sign_in_url(client,\n    redirect_uri=\"https://myapp.com/home\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool userpool = new UserPool(this, \"UserPool\", new UserPoolProps { });\nUserPoolClient client = userpool.AddClient(\"Client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            ImplicitCodeGrant = true\n        },\n        CallbackUrls = new [] { \"https://myapp.com/home\", \"https://myapp.com/users\" }\n    }\n});\nUserPoolDomain domain = userpool.AddDomain(\"Domain\", new UserPoolDomainOptions { });\nstring signInUrl = domain.SignInUrl(client, new SignInUrlOptions {\n    RedirectUri = \"https://myapp.com/home\"\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool userpool = UserPool.Builder.create(this, \"UserPool\").build();\nUserPoolClient client = userpool.addClient(\"Client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .implicitCodeGrant(true)\n                        .build())\n                .callbackUrls(List.of(\"https://myapp.com/home\", \"https://myapp.com/users\"))\n                .build())\n        .build());\nUserPoolDomain domain = userpool.addDomain(\"Domain\", UserPoolDomainOptions.builder().build());\nString signInUrl = domain.signInUrl(client, SignInUrlOptions.builder()\n        .redirectUri(\"https://myapp.com/home\")\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolDomain"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.SignInUrlOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomain#signInUrl",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst userpool = new cognito.UserPool(this, 'UserPool', {\n  // ...\n});\nconst client = userpool.addClient('Client', {\n  // ...\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n    },\n    callbackUrls: [\n      'https://myapp.com/home',\n      'https://myapp.com/users',\n    ]\n  }\n})\nconst domain = userpool.addDomain('Domain', {\n  // ...\n});\nconst signInUrl = domain.signInUrl(client, {\n  redirectUri: 'https://myapp.com/home', // must be a URL configured under 'callbackUrls' with the client\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 18,
        "104": 1,
        "106": 1,
        "192": 1,
        "193": 6,
        "194": 4,
        "196": 3,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 5
      },
      "fqnsFingerprint": "bc007ac1484b33c61c153569b8ff4cae3b4d5579bb5b9e32454d67a22ae382cd"
    },
    "e1f7537a6ba4ef5b38b33decfb6a92823dd70e2c9026d214b782aca6b77ca1f4": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\npool.add_domain(\"CognitoDomain\",\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"my-awesome-app\"\n    )\n)\n\ncertificate_arn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\"\n\ndomain_cert = certificatemanager.Certificate.from_certificate_arn(self, \"domainCert\", certificate_arn)\npool.add_domain(\"CustomDomain\",\n    custom_domain=cognito.CustomDomainOptions(\n        domain_name=\"user.myapp.com\",\n        certificate=domain_cert\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.AddDomain(\"CognitoDomain\", new UserPoolDomainOptions {\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"my-awesome-app\"\n    }\n});\n\nstring certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.FromCertificateArn(this, \"domainCert\", certificateArn);\npool.AddDomain(\"CustomDomain\", new UserPoolDomainOptions {\n    CustomDomain = new CustomDomainOptions {\n        DomainName = \"user.myapp.com\",\n        Certificate = domainCert\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\npool.addDomain(\"CognitoDomain\", UserPoolDomainOptions.builder()\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"my-awesome-app\")\n                .build())\n        .build());\n\nString certificateArn = \"arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d\";\n\nICertificate domainCert = Certificate.fromCertificateArn(this, \"domainCert\", certificateArn);\npool.addDomain(\"CustomDomain\", UserPoolDomainOptions.builder()\n        .customDomain(CustomDomainOptions.builder()\n                .domainName(\"user.myapp.com\")\n                .certificate(domainCert)\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolDomainOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-certificatemanager.Certificate",
        "@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn",
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.CustomDomainOptions",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolDomainOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\npool.addDomain('CognitoDomain', {\n  cognitoDomain: {\n    domainPrefix: 'my-awesome-app',\n  },\n});\n\nconst certificateArn = 'arn:aws:acm:us-east-1:123456789012:certificate/11-3336f1-44483d-adc7-9cd375c5169d';\n\nconst domainCert = certificatemanager.Certificate.fromCertificateArn(this, 'domainCert', certificateArn);\npool.addDomain('CustomDomain', {\n  customDomain: {\n    domainName: 'user.myapp.com',\n    certificate: domainCert,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 19,
        "104": 2,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 1,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 5
      },
      "fqnsFingerprint": "f50038c17d5e27aa3e01164b7d3d649280bf1e9883fabb60abae6e3a2c227c04"
    },
    "38bd6ddd3164bf28d1be5b61998828ee35fe6069d033b790044035430596ab04": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cognito as cognito\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\nfrom aws_cdk.core import App, CfnOutput, Stack\nfrom constructs import Construct\nimport aws_cdk.aws_elasticloadbalancingv2_actions as actions\n\nStack): lb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\n\nuser_pool = cognito.UserPool(self, \"UserPool\")\nuser_pool_client = cognito.UserPoolClient(self, \"Client\",\n    user_pool=user_pool,\n\n    # Required minimal configuration for use with an ELB\n    generate_secret=True,\n    auth_flows=cognito.AuthFlow(\n        user_password=True\n    ),\n    o_auth=cognito.OAuthSettings(\n        flows=cognito.OAuthFlows(\n            authorization_code_grant=True\n        ),\n        scopes=[cognito.OAuthScope.EMAIL],\n        callback_urls=[f\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\"\n        ]\n    )\n)\ncfn_client = user_pool_client.node.default_child\ncfn_client.add_property_override(\"RefreshTokenValidity\", 1)\ncfn_client.add_property_override(\"SupportedIdentityProviders\", [\"COGNITO\"])\n\nuser_pool_domain = cognito.UserPoolDomain(self, \"Domain\",\n    user_pool=user_pool,\n    cognito_domain=cognito.CognitoDomainOptions(\n        domain_prefix=\"test-cdk-prefix\"\n    )\n)\n\nlb.add_listener(\"Listener\",\n    port=443,\n    certificates=[certificate],\n    default_action=actions.AuthenticateCognitoAction(\n        user_pool=user_pool,\n        user_pool_client=user_pool_client,\n        user_pool_domain=user_pool_domain,\n        next=elbv2.ListenerAction.fixed_response(200,\n            content_type=\"text/plain\",\n            message_body=\"Authenticated\"\n        )\n    )\n)\n\nCfnOutput(self, \"DNS\",\n    value=lb.load_balancer_dns_name\n)\n\napp = App()\nCognitoStack(app, \"integ-cognito\")\napp.synth()",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Cognito;\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\nusing Amazon.CDK;\nusing Constructs;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions;\n\nCognitoStack : Stack\n{ApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = new UserPoolClient(this, \"Client\", new UserPoolClientProps {\n    UserPool = userPool,\n\n    // Required minimal configuration for use with an ELB\n    GenerateSecret = true,\n    AuthFlows = new AuthFlow {\n        UserPassword = true\n    },\n    OAuth = new OAuthSettings {\n        Flows = new OAuthFlows {\n            AuthorizationCodeGrant = true\n        },\n        Scopes = new [] { OAuthScope.EMAIL },\n        CallbackUrls = new [] { $\"https://{lb.loadBalancerDnsName}/oauth2/idpresponse\" }\n    }\n});\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.Node.DefaultChild;\ncfnClient.AddPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.AddPropertyOverride(\"SupportedIdentityProviders\", new [] { \"COGNITO\" });\n\nUserPoolDomain userPoolDomain = new UserPoolDomain(this, \"Domain\", new UserPoolDomainProps {\n    UserPool = userPool,\n    CognitoDomain = new CognitoDomainOptions {\n        DomainPrefix = \"test-cdk-prefix\"\n    }\n});\n\nlb.AddListener(\"Listener\", new BaseApplicationListenerProps {\n    Port = 443,\n    Certificates = new [] { certificate },\n    DefaultAction = new AuthenticateCognitoAction(new AuthenticateCognitoActionProps {\n        UserPool = userPool,\n        UserPoolClient = userPoolClient,\n        UserPoolDomain = userPoolDomain,\n        Next = ListenerAction.FixedResponse(200, new FixedResponseOptions {\n            ContentType = \"text/plain\",\n            MessageBody = \"Authenticated\"\n        })\n    })\n});\n\nnew CfnOutput(this, \"DNS\", new CfnOutputProps {\n    Value = lb.LoadBalancerDnsName\n});\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cognito.*;\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\nimport software.amazon.awscdk.core.App;\nimport software.amazon.awscdk.core.CfnOutput;\nimport software.amazon.awscdk.core.Stack;\nimport software.constructs.Construct;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.actions.*;\n\nCognitoStack extends Stack {CognitoStack(ApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\n\nUserPool userPool = new UserPool(this, \"UserPool\");\nUserPoolClient userPoolClient = UserPoolClient.Builder.create(this, \"Client\")\n        .userPool(userPool)\n\n        // Required minimal configuration for use with an ELB\n        .generateSecret(true)\n        .authFlows(AuthFlow.builder()\n                .userPassword(true)\n                .build())\n        .oAuth(OAuthSettings.builder()\n                .flows(OAuthFlows.builder()\n                        .authorizationCodeGrant(true)\n                        .build())\n                .scopes(List.of(OAuthScope.EMAIL))\n                .callbackUrls(List.of(String.format(\"https://%s/oauth2/idpresponse\", lb.getLoadBalancerDnsName())))\n                .build())\n        .build();\nCfnUserPoolClient cfnClient = (CfnUserPoolClient)userPoolClient.getNode().getDefaultChild();\ncfnClient.addPropertyOverride(\"RefreshTokenValidity\", 1);\ncfnClient.addPropertyOverride(\"SupportedIdentityProviders\", List.of(\"COGNITO\"));\n\nUserPoolDomain userPoolDomain = UserPoolDomain.Builder.create(this, \"Domain\")\n        .userPool(userPool)\n        .cognitoDomain(CognitoDomainOptions.builder()\n                .domainPrefix(\"test-cdk-prefix\")\n                .build())\n        .build();\n\nlb.addListener(\"Listener\", BaseApplicationListenerProps.builder()\n        .port(443)\n        .certificates(List.of(certificate))\n        .defaultAction(AuthenticateCognitoAction.Builder.create()\n                .userPool(userPool)\n                .userPoolClient(userPoolClient)\n                .userPoolDomain(userPoolDomain)\n                .next(ListenerAction.fixedResponse(200, FixedResponseOptions.builder()\n                        .contentType(\"text/plain\")\n                        .messageBody(\"Authenticated\")\n                        .build()))\n                .build())\n        .build());\n\nCfnOutput.Builder.create(this, \"DNS\")\n        .value(lb.getLoadBalancerDnsName())\n        .build();\n\nApp app = new App();\nnew CognitoStack(app, \"integ-cognito\");\napp.synth();",
          "version": "1"
        },
        "$": {
          "source": "    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolDomainProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AuthFlow",
        "@aws-cdk/aws-cognito.CfnUserPoolClient",
        "@aws-cdk/aws-cognito.CognitoDomainOptions",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.IUserPoolClient",
        "@aws-cdk/aws-cognito.IUserPoolDomain",
        "@aws-cdk/aws-cognito.OAuthFlows",
        "@aws-cdk/aws-cognito.OAuthScope",
        "@aws-cdk/aws-cognito.OAuthScope#EMAIL",
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientProps",
        "@aws-cdk/aws-cognito.UserPoolDomain",
        "@aws-cdk/aws-cognito.UserPoolDomainProps",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoAction",
        "@aws-cdk/aws-elasticloadbalancingv2-actions.AuthenticateCognitoActionProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer#loadBalancerDnsName",
        "@aws-cdk/aws-elasticloadbalancingv2.FixedResponseOptions",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction",
        "@aws-cdk/aws-elasticloadbalancingv2.ListenerAction#fixedResponse",
        "@aws-cdk/core.App",
        "@aws-cdk/core.CfnOutput",
        "@aws-cdk/core.CfnOutputProps",
        "@aws-cdk/core.CfnResource#addPropertyOverride",
        "@aws-cdk/core.Construct#node",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "import * as cognito from '@aws-cdk/aws-cognito';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport { App, CfnOutput, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '../lib';\n\nclass CognitoStack extends Stack {\n\n  /// !hide\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Stack', {\n      maxAzs: 2,\n    });\n\n    const certificate: elbv2.IListenerCertificate = {\n      certificateArn: process.env.SELF_SIGNED_CERT_ARN ?? '',\n    };\n\n    /// !show\n    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n    });\n\n    const userPool = new cognito.UserPool(this, 'UserPool');\n    const userPoolClient = new cognito.UserPoolClient(this, 'Client', {\n      userPool,\n\n      // Required minimal configuration for use with an ELB\n      generateSecret: true,\n      authFlows: {\n        userPassword: true,\n      },\n      oAuth: {\n        flows: {\n          authorizationCodeGrant: true,\n        },\n        scopes: [cognito.OAuthScope.EMAIL],\n        callbackUrls: [\n          `https://${lb.loadBalancerDnsName}/oauth2/idpresponse`,\n        ],\n      },\n    });\n    const cfnClient = userPoolClient.node.defaultChild as cognito.CfnUserPoolClient;\n    cfnClient.addPropertyOverride('RefreshTokenValidity', 1);\n    cfnClient.addPropertyOverride('SupportedIdentityProviders', ['COGNITO']);\n\n    const userPoolDomain = new cognito.UserPoolDomain(this, 'Domain', {\n      userPool,\n      cognitoDomain: {\n        domainPrefix: 'test-cdk-prefix',\n      },\n    });\n\n    lb.addListener('Listener', {\n      port: 443,\n      certificates: [certificate],\n      defaultAction: new actions.AuthenticateCognitoAction({\n        userPool,\n        userPoolClient,\n        userPoolDomain,\n        next: elbv2.ListenerAction.fixedResponse(200, {\n          contentType: 'text/plain',\n          messageBody: 'Authenticated',\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'DNS', {\n      value: lb.loadBalancerDnsName,\n    });\n  }\n}\n\nconst app = new App();\nnew CognitoStack(app, 'integ-cognito');\napp.synth();",
      "syntaxKindCounter": {
        "8": 3,
        "10": 19,
        "15": 1,
        "17": 1,
        "75": 78,
        "104": 5,
        "106": 4,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 11,
        "194": 17,
        "196": 5,
        "197": 8,
        "211": 1,
        "216": 1,
        "217": 1,
        "221": 1,
        "225": 6,
        "226": 6,
        "242": 6,
        "243": 6,
        "245": 1,
        "254": 6,
        "255": 6,
        "256": 4,
        "257": 2,
        "258": 4,
        "279": 1,
        "281": 18,
        "282": 6,
        "290": 1
      },
      "fqnsFingerprint": "0054c3312773569f88784f56e66a2d74c68f0d57ef014da3c8801b5095a21331"
    },
    "9ab342c7448ac4775b90eb59295ae0bfced03d099bbba2aae17a1e1042796bb0": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    email=UserPoolEmail.with_sES(\n        from_email=\"noreply@myawesomeapp.com\",\n        from_name=\"Awesome App\",\n        reply_to=\"support@myawesomeapp.com\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    Email = UserPoolEmail.WithSES(new Struct {\n        FromEmail = \"noreply@myawesomeapp.com\",\n        FromName = \"Awesome App\",\n        ReplyTo = \"support@myawesomeapp.com\"\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        .email(UserPoolEmail.withSES(Map.of(\n                \"fromEmail\", \"noreply@myawesomeapp.com\",\n                \"fromName\", \"Awesome App\",\n                \"replyTo\", \"support@myawesomeapp.com\")))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolEmail"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolEmail",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  email: UserPoolEmail.withSES({\n    fromEmail: 'noreply@myawesomeapp.com',\n    fromName: 'Awesome App',\n    replyTo: 'support@myawesomeapp.com',\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 1,
        "193": 2,
        "194": 2,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "7aad9532a119c16fc3e9eb5b4b64ae4dd3080aa8e515bc763382371f68e92d90"
    },
    "dc1b48392383106eed0910e2e6227991fe4b7cca475d271978c90544bcd4296f": {
      "translations": {
        "python": {
          "source": "provider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\")\nclient = pool.add_client(\"app-client\", {\n    # ...\n    \"supported_identity_providers\": [cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n},\nclient.node.add_dependency(provider))",
          "version": "1"
        },
        "csharp": {
          "source": "UserPoolIdentityProviderAmazon provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps { });\nvar client = pool.AddClient(\"app-client\", new Struct {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n}, client.Node.AddDependency(provider));",
          "version": "1"
        },
        "java": {
          "source": "UserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\").build();\nObject client = pool.addClient(\"app-client\", Map.of(\n        // ...\n        \"supportedIdentityProviders\", List.of(UserPoolClientIdentityProvider.AMAZON)), client.node.addDependency(provider));",
          "version": "1"
        },
        "$": {
          "source": "const provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "60b4628e5ddcce152845ee9c1e86a5ae59f78c39d4fe8350a729274e07e83e38"
    },
    "4ec727250f6e70b94aa70f294c345656252f6b8a29baea4c72cb1e4ba76a5223": {
      "translations": {
        "python": {
          "source": "provider = cognito.UserPoolIdentityProviderAmazon(self, \"Amazon\")\nclient = pool.add_client(\"app-client\", {\n    # ...\n    \"supported_identity_providers\": [cognito.UserPoolClientIdentityProvider.AMAZON\n    ]\n},\nclient.node.add_dependency(provider))",
          "version": "1"
        },
        "csharp": {
          "source": "UserPoolIdentityProviderAmazon provider = new UserPoolIdentityProviderAmazon(this, \"Amazon\", new UserPoolIdentityProviderAmazonProps { });\nvar client = pool.AddClient(\"app-client\", new Struct {\n    // ...\n    SupportedIdentityProviders = new [] { UserPoolClientIdentityProvider.AMAZON }\n}, client.Node.AddDependency(provider));",
          "version": "1"
        },
        "java": {
          "source": "UserPoolIdentityProviderAmazon provider = UserPoolIdentityProviderAmazon.Builder.create(this, \"Amazon\").build();\nObject client = pool.addClient(\"app-client\", Map.of(\n        // ...\n        \"supportedIdentityProviders\", List.of(UserPoolClientIdentityProvider.AMAZON)), client.node.addDependency(provider));",
          "version": "1"
        },
        "$": {
          "source": "const provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider",
        "@aws-cdk/aws-cognito.UserPoolClientIdentityProvider#AMAZON",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazon",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAmazonProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst provider = new cognito.UserPoolIdentityProviderAmazon(this, 'Amazon', {\n  // ...\n});\nconst client = pool.addClient('app-client', {\n  // ...\n  supportedIdentityProviders: [\n    cognito.UserPoolClientIdentityProvider.AMAZON,\n  ],\n}\nclient.node.addDependency(provider);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 1
      },
      "fqnsFingerprint": "60b4628e5ddcce152845ee9c1e86a5ae59f78c39d4fe8350a729274e07e83e38"
    },
    "65cc8672455564ca81f9c344fab99e890ee92ccb8f00f080952107c5df57c913": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_apple = cognito.UserPoolIdentityProviderApple(self, \"MyUserPoolIdentityProviderApple\",\n    client_id=\"clientId\",\n    key_id=\"keyId\",\n    private_key=\"privateKey\",\n    team_id=\"teamId\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderApple userPoolIdentityProviderApple = new UserPoolIdentityProviderApple(this, \"MyUserPoolIdentityProviderApple\", new UserPoolIdentityProviderAppleProps {\n    ClientId = \"clientId\",\n    KeyId = \"keyId\",\n    PrivateKey = \"privateKey\",\n    TeamId = \"teamId\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderApple userPoolIdentityProviderApple = UserPoolIdentityProviderApple.Builder.create(this, \"MyUserPoolIdentityProviderApple\")\n        .clientId(\"clientId\")\n        .keyId(\"keyId\")\n        .privateKey(\"privateKey\")\n        .teamId(\"teamId\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderApple = new cognito.UserPoolIdentityProviderApple(this, 'MyUserPoolIdentityProviderApple', {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderApple"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderApple",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderApple = new cognito.UserPoolIdentityProviderApple(this, 'MyUserPoolIdentityProviderApple', {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 55,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "e0581ec207654b3920443f3f78c627f7621ee9a1d4d24ab231c241c02e20c754"
    },
    "046dd8f7ba686e4e6a4a2df862eda7776fa6b45f01866068d9af7d7aef568c5c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_apple_props = cognito.UserPoolIdentityProviderAppleProps(\n    client_id=\"clientId\",\n    key_id=\"keyId\",\n    private_key=\"privateKey\",\n    team_id=\"teamId\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderAppleProps userPoolIdentityProviderAppleProps = new UserPoolIdentityProviderAppleProps {\n    ClientId = \"clientId\",\n    KeyId = \"keyId\",\n    PrivateKey = \"privateKey\",\n    TeamId = \"teamId\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderAppleProps userPoolIdentityProviderAppleProps = UserPoolIdentityProviderAppleProps.builder()\n        .clientId(\"clientId\")\n        .keyId(\"keyId\")\n        .privateKey(\"privateKey\")\n        .teamId(\"teamId\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderAppleProps: cognito.UserPoolIdentityProviderAppleProps = {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderAppleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderAppleProps: cognito.UserPoolIdentityProviderAppleProps = {\n  clientId: 'clientId',\n  keyId: 'keyId',\n  privateKey: 'privateKey',\n  teamId: 'teamId',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 55,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 26,
        "290": 1
      },
      "fqnsFingerprint": "cb2b94e6193049095e383ab340cc3e698ca8ff2ad294ca4a8189f75722fb9ac4"
    },
    "fd638f3a48371e5684bb0b4677ac420d835ab7212e0defab219d29a6287da98a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_facebook = cognito.UserPoolIdentityProviderFacebook(self, \"MyUserPoolIdentityProviderFacebook\",\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    api_version=\"apiVersion\",\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebook userPoolIdentityProviderFacebook = new UserPoolIdentityProviderFacebook(this, \"MyUserPoolIdentityProviderFacebook\", new UserPoolIdentityProviderFacebookProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    ApiVersion = \"apiVersion\",\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebook userPoolIdentityProviderFacebook = UserPoolIdentityProviderFacebook.Builder.create(this, \"MyUserPoolIdentityProviderFacebook\")\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .apiVersion(\"apiVersion\")\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebook = new cognito.UserPoolIdentityProviderFacebook(this, 'MyUserPoolIdentityProviderFacebook', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebook",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderFacebook = new cognito.UserPoolIdentityProviderFacebook(this, 'MyUserPoolIdentityProviderFacebook', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 54,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "cb4e18f5689de4a56e738b8eb1be452b7638233a294f8971bac379853667b09a"
    },
    "d2e7b837a920e06f4e460c9c77f60317c9e27c94f73f24c7cb56255d48608506": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_facebook_props = cognito.UserPoolIdentityProviderFacebookProps(\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    api_version=\"apiVersion\",\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebookProps userPoolIdentityProviderFacebookProps = new UserPoolIdentityProviderFacebookProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    ApiVersion = \"apiVersion\",\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderFacebookProps userPoolIdentityProviderFacebookProps = UserPoolIdentityProviderFacebookProps.builder()\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .apiVersion(\"apiVersion\")\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderFacebookProps: cognito.UserPoolIdentityProviderFacebookProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderFacebookProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderFacebookProps: cognito.UserPoolIdentityProviderFacebookProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  apiVersion: 'apiVersion',\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 54,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "7fc3611a0e7f17a3fd16652172fa3b08650536dba74d0abe29e3c14b41e3013b"
    },
    "19b9dd9602469cd6079b1407f21f24d03c374ea461cc891bac1208ea62d3e374": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_google = cognito.UserPoolIdentityProviderGoogle(self, \"MyUserPoolIdentityProviderGoogle\",\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogle userPoolIdentityProviderGoogle = new UserPoolIdentityProviderGoogle(this, \"MyUserPoolIdentityProviderGoogle\", new UserPoolIdentityProviderGoogleProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogle userPoolIdentityProviderGoogle = UserPoolIdentityProviderGoogle.Builder.create(this, \"MyUserPoolIdentityProviderGoogle\")\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogle = new cognito.UserPoolIdentityProviderGoogle(this, 'MyUserPoolIdentityProviderGoogle', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogle",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderGoogle = new cognito.UserPoolIdentityProviderGoogle(this, 'MyUserPoolIdentityProviderGoogle', {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 53,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "cfe908665581d1e0148c695adea091e8aa86cedc58e876727a77c046b28deb02"
    },
    "759b4dc02dd9f40732758991dd47535821f3bd9f7f06b66ecc404f049abc7f05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_google_props = cognito.UserPoolIdentityProviderGoogleProps(\n    client_id=\"clientId\",\n    client_secret=\"clientSecret\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    ),\n    scopes=[\"scopes\"]\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogleProps userPoolIdentityProviderGoogleProps = new UserPoolIdentityProviderGoogleProps {\n    ClientId = \"clientId\",\n    ClientSecret = \"clientSecret\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    },\n    Scopes = new [] { \"scopes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderGoogleProps userPoolIdentityProviderGoogleProps = UserPoolIdentityProviderGoogleProps.builder()\n        .clientId(\"clientId\")\n        .clientSecret(\"clientSecret\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .scopes(List.of(\"scopes\"))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderGoogleProps: cognito.UserPoolIdentityProviderGoogleProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderGoogleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderGoogleProps: cognito.UserPoolIdentityProviderGoogleProps = {\n  clientId: 'clientId',\n  clientSecret: 'clientSecret',\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n  scopes: ['scopes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 53,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "7c96961028d00f3d1ab3a512c3d821c64beb05562b46f86296ce3602f37a9d02"
    },
    "be20be50003970aabd4323232a4361e3da33224f02e94c92f8c3d71ff7be520f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# provider_attribute is of type ProviderAttribute\n# user_pool is of type UserPool\n\nuser_pool_identity_provider_props = cognito.UserPoolIdentityProviderProps(\n    user_pool=user_pool,\n\n    # the properties below are optional\n    attribute_mapping=cognito.AttributeMapping(\n        address=provider_attribute,\n        birthdate=provider_attribute,\n        custom={\n            \"custom_key\": provider_attribute\n        },\n        email=provider_attribute,\n        family_name=provider_attribute,\n        fullname=provider_attribute,\n        gender=provider_attribute,\n        given_name=provider_attribute,\n        last_update_time=provider_attribute,\n        locale=provider_attribute,\n        middle_name=provider_attribute,\n        nickname=provider_attribute,\n        phone_number=provider_attribute,\n        preferred_username=provider_attribute,\n        profile_page=provider_attribute,\n        profile_picture=provider_attribute,\n        timezone=provider_attribute,\n        website=provider_attribute\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderProps userPoolIdentityProviderProps = new UserPoolIdentityProviderProps {\n    UserPool = userPool,\n\n    // the properties below are optional\n    AttributeMapping = new AttributeMapping {\n        Address = providerAttribute,\n        Birthdate = providerAttribute,\n        Custom = new Dictionary<string, ProviderAttribute> {\n            { \"customKey\", providerAttribute }\n        },\n        Email = providerAttribute,\n        FamilyName = providerAttribute,\n        Fullname = providerAttribute,\n        Gender = providerAttribute,\n        GivenName = providerAttribute,\n        LastUpdateTime = providerAttribute,\n        Locale = providerAttribute,\n        MiddleName = providerAttribute,\n        Nickname = providerAttribute,\n        PhoneNumber = providerAttribute,\n        PreferredUsername = providerAttribute,\n        ProfilePage = providerAttribute,\n        ProfilePicture = providerAttribute,\n        Timezone = providerAttribute,\n        Website = providerAttribute\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nProviderAttribute providerAttribute;\nUserPool userPool;\n\nUserPoolIdentityProviderProps userPoolIdentityProviderProps = UserPoolIdentityProviderProps.builder()\n        .userPool(userPool)\n\n        // the properties below are optional\n        .attributeMapping(AttributeMapping.builder()\n                .address(providerAttribute)\n                .birthdate(providerAttribute)\n                .custom(Map.of(\n                        \"customKey\", providerAttribute))\n                .email(providerAttribute)\n                .familyName(providerAttribute)\n                .fullname(providerAttribute)\n                .gender(providerAttribute)\n                .givenName(providerAttribute)\n                .lastUpdateTime(providerAttribute)\n                .locale(providerAttribute)\n                .middleName(providerAttribute)\n                .nickname(providerAttribute)\n                .phoneNumber(providerAttribute)\n                .preferredUsername(providerAttribute)\n                .profilePage(providerAttribute)\n                .profilePicture(providerAttribute)\n                .timezone(providerAttribute)\n                .website(providerAttribute)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\nconst userPoolIdentityProviderProps: cognito.UserPoolIdentityProviderProps = {\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.AttributeMapping",
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.ProviderAttribute",
        "@aws-cdk/aws-cognito.UserPoolIdentityProviderProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const providerAttribute: cognito.ProviderAttribute;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolIdentityProviderProps: cognito.UserPoolIdentityProviderProps = {\n  userPool: userPool,\n\n  // the properties below are optional\n  attributeMapping: {\n    address: providerAttribute,\n    birthdate: providerAttribute,\n    custom: {\n      customKey: providerAttribute,\n    },\n    email: providerAttribute,\n    familyName: providerAttribute,\n    fullname: providerAttribute,\n    gender: providerAttribute,\n    givenName: providerAttribute,\n    lastUpdateTime: providerAttribute,\n    locale: providerAttribute,\n    middleName: providerAttribute,\n    nickname: providerAttribute,\n    phoneNumber: providerAttribute,\n    preferredUsername: providerAttribute,\n    profilePage: providerAttribute,\n    profilePicture: providerAttribute,\n    timezone: providerAttribute,\n    website: providerAttribute,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 50,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "cfdc999021b24d0f1ea6e00f6fa9b838a9e64417de112b6aba4c500556384fc0"
    },
    "f26bd24c2640610ce2f4295ccb47c804cc0fb154fb7b7a19dac4da1032712c27": {
      "translations": {
        "python": {
          "source": "auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n))",
          "version": "1"
        },
        "csharp": {
          "source": "Function authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n});\n\nUserPool userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n}));",
          "version": "1"
        },
        "java": {
          "source": "Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolOperation"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#addTrigger",
        "@aws-cdk/aws-cognito.UserPoolOperation",
        "@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserPoolTriggers",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 34,
        "104": 3,
        "193": 4,
        "194": 14,
        "196": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8
      },
      "fqnsFingerprint": "9e509771e59ceab764f6cba8c20f9a0c1455c48ba99908b2c590d910f78f8459"
    },
    "3fe2f1fb713b499748a6c86f7ab19348ebbaab59a4705d8bf86c7dd823b99351": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserVerificationConfig",
        "@aws-cdk/aws-cognito.VerificationEmailStyle",
        "@aws-cdk/aws-cognito.VerificationEmailStyle#CODE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "9401413afb694e80927bfc738b015b509013938cd90b4c0faaf56a251d1c7534"
    },
    "c4c328eb1ec77a7024171fd86da3bf3ea57db99a713bc6c4fc0846dca40ba2ee": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new Struct { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new Struct { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nUserPoolResourceServer userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nUserPoolClient readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nUserPoolClient fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nObject fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolResourceServer",
        "@aws-cdk/aws-cognito.UserPoolResourceServerOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 36,
        "104": 1,
        "192": 3,
        "193": 7,
        "194": 6,
        "196": 5,
        "197": 3,
        "225": 6,
        "242": 6,
        "243": 6,
        "281": 10
      },
      "fqnsFingerprint": "ac9eacb517b406a7469c1b794a28d12a234c7f5f81e83789d1a71b89e72c9862"
    },
    "a40e0b2d06299492c691c953e2139fb60ec60a6fed536643e6aec590cc803295": {
      "translations": {
        "python": {
          "source": "pool = cognito.UserPool(self, \"Pool\")\n\nread_only_scope = ResourceServerScope(scope_name=\"read\", scope_description=\"Read-only access\")\nfull_access_scope = ResourceServerScope(scope_name=\"*\", scope_description=\"Full access\")\n\nuser_server = pool.add_resource_server(\"ResourceServer\",\n    identifier=\"users\",\n    scopes=[read_only_scope, full_access_scope]\n)\n\nread_only_client = pool.add_client(\"read-only-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, read_only_scope)]\n    )\n)\n\nfull_access_client = pool.add_client(\"full-access-client\",\n    # ...\n    o_auth=cognito.OAuthSettings(\n        # ...\n        scopes=[OAuthScope.resource_server(user_server, full_access_scope)]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nvar readOnlyScope = new ResourceServerScope(new Struct { ScopeName = \"read\", ScopeDescription = \"Read-only access\" });\nvar fullAccessScope = new ResourceServerScope(new Struct { ScopeName = \"*\", ScopeDescription = \"Full access\" });\n\nUserPoolResourceServer userServer = pool.AddResourceServer(\"ResourceServer\", new UserPoolResourceServerOptions {\n    Identifier = \"users\",\n    Scopes = new [] { readOnlyScope, fullAccessScope }\n});\n\nUserPoolClient readOnlyClient = pool.AddClient(\"read-only-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, readOnlyScope) }\n    }\n});\n\nUserPoolClient fullAccessClient = pool.AddClient(\"full-access-client\", new UserPoolClientOptions {\n    // ...\n    OAuth = new OAuthSettings {\n        // ...\n        Scopes = new [] { OAuthScope.ResourceServer(userServer, fullAccessScope) }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool pool = new UserPool(this, \"Pool\");\n\nObject readOnlyScope = ResourceServerScope.Builder.create().scopeName(\"read\").scopeDescription(\"Read-only access\").build();\nObject fullAccessScope = ResourceServerScope.Builder.create().scopeName(\"*\").scopeDescription(\"Full access\").build();\n\nUserPoolResourceServer userServer = pool.addResourceServer(\"ResourceServer\", UserPoolResourceServerOptions.builder()\n        .identifier(\"users\")\n        .scopes(List.of(readOnlyScope, fullAccessScope))\n        .build());\n\nUserPoolClient readOnlyClient = pool.addClient(\"read-only-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, readOnlyScope)))\n                .build())\n        .build());\n\nUserPoolClient fullAccessClient = pool.addClient(\"full-access-client\", UserPoolClientOptions.builder()\n        // ...\n        .oAuth(OAuthSettings.builder()\n                // ...\n                .scopes(List.of(OAuthScope.resourceServer(userServer, fullAccessScope)))\n                .build())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.OAuthSettings",
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolClient",
        "@aws-cdk/aws-cognito.UserPoolClientOptions",
        "@aws-cdk/aws-cognito.UserPoolResourceServer",
        "@aws-cdk/aws-cognito.UserPoolResourceServerOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst pool = new cognito.UserPool(this, 'Pool');\n\nconst readOnlyScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'Read-only access' });\nconst fullAccessScope = new ResourceServerScope({ scopeName: '*', scopeDescription: 'Full access' });\n\nconst userServer = pool.addResourceServer('ResourceServer', {\n  identifier: 'users',\n  scopes: [ readOnlyScope, fullAccessScope ],\n});\n\nconst readOnlyClient = pool.addClient('read-only-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, readOnlyScope) ],\n  },\n});\n\nconst fullAccessClient = pool.addClient('full-access-client', {\n  // ...\n  oAuth: {\n    // ...\n    scopes: [ OAuthScope.resourceServer(userServer, fullAccessScope) ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 36,
        "104": 1,
        "192": 3,
        "193": 7,
        "194": 6,
        "196": 5,
        "197": 3,
        "225": 6,
        "242": 6,
        "243": 6,
        "281": 10
      },
      "fqnsFingerprint": "ac9eacb517b406a7469c1b794a28d12a234c7f5f81e83789d1a71b89e72c9862"
    },
    "18c6673da26618277e33d2e257bef67c2f4849bf8dab1c8c29e018542fc96745": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\n# resource_server_scope is of type ResourceServerScope\n# user_pool is of type UserPool\n\nuser_pool_resource_server_props = cognito.UserPoolResourceServerProps(\n    identifier=\"identifier\",\n    user_pool=user_pool,\n\n    # the properties below are optional\n    scopes=[resource_server_scope],\n    user_pool_resource_server_name=\"userPoolResourceServerName\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nResourceServerScope resourceServerScope;\nUserPool userPool;\n\nUserPoolResourceServerProps userPoolResourceServerProps = new UserPoolResourceServerProps {\n    Identifier = \"identifier\",\n    UserPool = userPool,\n\n    // the properties below are optional\n    Scopes = new [] { resourceServerScope },\n    UserPoolResourceServerName = \"userPoolResourceServerName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nResourceServerScope resourceServerScope;\nUserPool userPool;\n\nUserPoolResourceServerProps userPoolResourceServerProps = UserPoolResourceServerProps.builder()\n        .identifier(\"identifier\")\n        .userPool(userPool)\n\n        // the properties below are optional\n        .scopes(List.of(resourceServerScope))\n        .userPoolResourceServerName(\"userPoolResourceServerName\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const resourceServerScope: cognito.ResourceServerScope;\ndeclare const userPool: cognito.UserPool;\nconst userPoolResourceServerProps: cognito.UserPoolResourceServerProps = {\n  identifier: 'identifier',\n  userPool: userPool,\n\n  // the properties below are optional\n  scopes: [resourceServerScope],\n  userPoolResourceServerName: 'userPoolResourceServerName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolResourceServerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.IUserPool",
        "@aws-cdk/aws-cognito.UserPoolResourceServerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n\ndeclare const resourceServerScope: cognito.ResourceServerScope;\ndeclare const userPool: cognito.UserPool;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolResourceServerProps: cognito.UserPoolResourceServerProps = {\n  identifier: 'identifier',\n  userPool: userPool,\n\n  // the properties below are optional\n  scopes: [resourceServerScope],\n  userPoolResourceServerName: 'userPoolResourceServerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "9c7b585dd6038d4f490c776a422f9c53af8b882c45f6077d45dc7019caee56f6"
    },
    "2ba776b90ff16dc721809dd6512f6a776e9a6374f0b78b55ba7fce5308de26a6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cognito as cognito\n\nuser_pool_sESOptions = cognito.UserPoolSESOptions(\n    from_email=\"fromEmail\",\n\n    # the properties below are optional\n    configuration_set_name=\"configurationSetName\",\n    from_name=\"fromName\",\n    reply_to=\"replyTo\",\n    ses_region=\"sesRegion\"\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Cognito;\n\nUserPoolSESOptions userPoolSESOptions = new UserPoolSESOptions {\n    FromEmail = \"fromEmail\",\n\n    // the properties below are optional\n    ConfigurationSetName = \"configurationSetName\",\n    FromName = \"fromName\",\n    ReplyTo = \"replyTo\",\n    SesRegion = \"sesRegion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cognito.*;\n\nUserPoolSESOptions userPoolSESOptions = UserPoolSESOptions.builder()\n        .fromEmail(\"fromEmail\")\n\n        // the properties below are optional\n        .configurationSetName(\"configurationSetName\")\n        .fromName(\"fromName\")\n        .replyTo(\"replyTo\")\n        .sesRegion(\"sesRegion\")\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\nconst userPoolSESOptions: cognito.UserPoolSESOptions = {\n  fromEmail: 'fromEmail',\n\n  // the properties below are optional\n  configurationSetName: 'configurationSetName',\n  fromName: 'fromName',\n  replyTo: 'replyTo',\n  sesRegion: 'sesRegion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolSESOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPoolSESOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cognito from '@aws-cdk/aws-cognito';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPoolSESOptions: cognito.UserPoolSESOptions = {\n  fromEmail: 'fromEmail',\n\n  // the properties below are optional\n  configurationSetName: 'configurationSetName',\n  fromName: 'fromName',\n  replyTo: 'replyTo',\n  sesRegion: 'sesRegion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "c45d23683df1c66450b55b0343a6113c0e027b8a8cc9c8cb5782028d9e100b3c"
    },
    "89200727cba4eb4e5d046bc9b9da01418251dfd4a0f964c7f6c442a30f63e350": {
      "translations": {
        "python": {
          "source": "auth_challenge_fn = lambda_.Function(self, \"authChallengeFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n)\n\nuserpool = cognito.UserPool(self, \"myuserpool\",\n    # ...\n    lambda_triggers=cognito.UserPoolTriggers(\n        create_auth_challenge=auth_challenge_fn\n    )\n)\n\nuserpool.add_trigger(cognito.UserPoolOperation.USER_MIGRATION, lambda_.Function(self, \"userMigrationFn\",\n    runtime=lambda_.Runtime.NODEJS_12_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset()\n))",
          "version": "1"
        },
        "csharp": {
          "source": "Function authChallengeFn = new Function(this, \"authChallengeFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n});\n\nUserPool userpool = new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    LambdaTriggers = new UserPoolTriggers {\n        CreateAuthChallenge = authChallengeFn\n    }\n});\n\nuserpool.AddTrigger(UserPoolOperation.USER_MIGRATION, new Function(this, \"userMigrationFn\", new FunctionProps {\n    Runtime = Runtime.NODEJS_12_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset()\n}));",
          "version": "1"
        },
        "java": {
          "source": "Function authChallengeFn = Function.Builder.create(this, \"authChallengeFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build();\n\nUserPool userpool = UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .lambdaTriggers(UserPoolTriggers.builder()\n                .createAuthChallenge(authChallengeFn)\n                .build())\n        .build();\n\nuserpool.addTrigger(UserPoolOperation.USER_MIGRATION, Function.Builder.create(this, \"userMigrationFn\")\n        .runtime(Runtime.NODEJS_12_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset())\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "const authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserPoolTriggers"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPool#addTrigger",
        "@aws-cdk/aws-cognito.UserPoolOperation",
        "@aws-cdk/aws-cognito.UserPoolOperation#USER_MIGRATION",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserPoolTriggers",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_12_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst authChallengeFn = new lambda.Function(this, 'authChallengeFn', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n});\n\nconst userpool = new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  lambdaTriggers: {\n    createAuthChallenge: authChallengeFn,\n    // ...\n  }\n});\n\nuserpool.addTrigger(cognito.UserPoolOperation.USER_MIGRATION, new lambda.Function(this, 'userMigrationFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(/* path to lambda asset */),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 34,
        "104": 3,
        "193": 4,
        "194": 14,
        "196": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8
      },
      "fqnsFingerprint": "9e509771e59ceab764f6cba8c20f9a0c1455c48ba99908b2c590d910f78f8459"
    },
    "bb7a47be2b4e9f00d1bbfd5f832bb35ea2303f867f09b9269d786596972417dc": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.UserVerificationConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserVerificationConfig",
        "@aws-cdk/aws-cognito.VerificationEmailStyle",
        "@aws-cdk/aws-cognito.VerificationEmailStyle#CODE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "9401413afb694e80927bfc738b015b509013938cd90b4c0faaf56a251d1c7534"
    },
    "311c48a30602d0e6ea2313fdc1fb9b4b34a02b91455566f63e46154060b8de86": {
      "translations": {
        "python": {
          "source": "cognito.UserPool(self, \"myuserpool\",\n    # ...\n    self_sign_up_enabled=True,\n    user_verification=cognito.UserVerificationConfig(\n        email_subject=\"Verify your email for our awesome app!\",\n        email_body=\"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        email_style=cognito.VerificationEmailStyle.CODE,\n        sms_message=\"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new UserPool(this, \"myuserpool\", new UserPoolProps {\n    // ...\n    SelfSignUpEnabled = true,\n    UserVerification = new UserVerificationConfig {\n        EmailSubject = \"Verify your email for our awesome app!\",\n        EmailBody = \"Thanks for signing up to our awesome app! Your verification code is {####}\",\n        EmailStyle = VerificationEmailStyle.CODE,\n        SmsMessage = \"Thanks for signing up to our awesome app! Your verification code is {####}\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "UserPool.Builder.create(this, \"myuserpool\")\n        // ...\n        .selfSignUpEnabled(true)\n        .userVerification(UserVerificationConfig.builder()\n                .emailSubject(\"Verify your email for our awesome app!\")\n                .emailBody(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .emailStyle(VerificationEmailStyle.CODE)\n                .smsMessage(\"Thanks for signing up to our awesome app! Your verification code is {####}\")\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cognito.VerificationEmailStyle"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cognito.UserPool",
        "@aws-cdk/aws-cognito.UserPoolProps",
        "@aws-cdk/aws-cognito.UserVerificationConfig",
        "@aws-cdk/aws-cognito.VerificationEmailStyle",
        "@aws-cdk/aws-cognito.VerificationEmailStyle#CODE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\nimport * as cognito from '@aws-cdk/aws-cognito';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cognito.UserPool(this, 'myuserpool', {\n  // ...\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailSubject: 'Verify your email for our awesome app!',\n    emailBody: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n    emailStyle: cognito.VerificationEmailStyle.CODE,\n    smsMessage: 'Thanks for signing up to our awesome app! Your verification code is {####}',\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "104": 1,
        "106": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 6
      },
      "fqnsFingerprint": "9401413afb694e80927bfc738b015b509013938cd90b4c0faaf56a251d1c7534"
    }
  }
}
