{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\danir\\\\Descargas\\\\fronentworking\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          query {\\n            restaurant {\\n              id\\n              name\\n              dishes {\\n                id\\n                name\\n                description\\n                price\\n                image {\\n                  url\\n                }\\n              }\\n            }\\n          }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem,\n      user = _useContext.user;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  if (restId > 0) {\n    var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n      variables: {\n        id: restId\n      }\n    }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n    if (loading) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }\n    }, \"ERROR here\");\n    if (!data) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }\n    }, \"Not found\");\n    var restaurant = data.restaurant;\n    return __jsx(React.Fragment, null, restaurant.dishes.map(function (res) {\n      var _jsx;\n\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, __jsx(Button, (_jsx = {\n        color: \"info\",\n        outline: true\n      }, _defineProperty(_jsx, \"color\", \"primary\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n        return addItem(res);\n      }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }), _jsx), \"+ Add To Cart\"))));\n    }));\n  } else {\n    var GET_ALL_RESTAURANT_DISHES = gql(_templateObject2());\n\n    var _useQuery2 = useQuery(GET_ALL_RESTAURANT_DISHES),\n        loading2 = _useQuery2.loading2,\n        error2 = _useQuery2.error2,\n        data2 = _useQuery2.data2;\n\n    var dishes = data2.dishes;\n    if (loading2) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }\n    }, \"Loading...\");\n    if (error2) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }\n    }, \"ERROR here\");\n    if (!data2) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }\n    }, \"Not found\");\n    return __jsx(React.Fragment, null, dishes.foreach(function (res) {\n      var _jsx2;\n\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      }, __jsx(Button, (_jsx2 = {\n        color: \"info\",\n        outline: true\n      }, _defineProperty(_jsx2, \"color\", \"primary\"), _defineProperty(_jsx2, \"onClick\", function onClick() {\n        return addItem(res);\n      }), _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }), _jsx2), \"+ Add To Cart\"))));\n    }));\n  }\n}\n\n_s(Dishes, \"KgUKT0H4kPTFQ14S1GeCTFbSHzk=\", false, function () {\n  return [useRouter, useQuery, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/danir/Descargas/fronentworking/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","user","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","dishes","map","res","padding","margin","height","width","image","url","name","description","GET_ALL_RESTAURANT_DISHES","loading2","error2","data2","foreach"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem, user} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  \n\n  if (restId > 0){\n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId},\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>ERROR here</p>;\n    if (!data) return <p>Not found</p>;\n  \n    let restaurant = data.restaurant;\n    return (\n      <>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n                <CardImg\n                  top={true}\n                  style={{ height: 150, width:150 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    color=\"primary\"\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n        </>\n        )}\n        else{\n          const GET_ALL_RESTAURANT_DISHES = gql`\n          query {\n            restaurant {\n              id\n              name\n              dishes {\n                id\n                name\n                description\n                price\n                image {\n                  url\n                }\n              }\n            }\n          }\n`;\n          const { loading2, error2, data2 } = useQuery(GET_ALL_RESTAURANT_DISHES);\n\n  let dishes = data2.dishes;\n\n  if (loading2) return <p>Loading...</p>;\n  if (error2) return <p>ERROR here</p>;\n  if (!data2) return <p>Not found</p>;\n          return (\n            <>\n                {dishes.foreach((res) => (\n                  <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n                    <Card style={{ margin: \"0 10px\" }}>\n                      <CardImg\n                        top={true}\n                        style={{ height: 150, width:150 }}\n                        src={`http://localhost:1337${res.image.url}`}\n                      />\n                      <CardBody>\n                        <CardTitle>{res.name}</CardTitle>\n                        <CardText>{res.description}</CardText>\n                      </CardBody>\n                      <div className=\"card-footer\">\n                        <Button color=\"info\"\n                          outline\n                          color=\"primary\"\n                          onClick = {()=> addItem(res)}\n                        >\n                          + Add To Cart\n                        </Button>\n                        \n                        \n                      </div>\n                    </Card>\n                  </Col>\n                ))}\n              </>\n              )\n        }\n    }\n    export default Dishes"]},"metadata":{},"sourceType":"module"}